!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_JP_AUTHOR	Hirohito Higashi	/h_east@pop11.odn.ne.jp/
!_TAG_PROGRAM_JP_URL	http://hp.vector.co.jp/authors/VA025040/	//
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.8J1	//
ADDON_MESSAGE_CODE	.\cderror.h	/^} ADDON_MESSAGE_CODE;$/;"	t	typeref:enum:__anon1
ALIGN_TYPE	.\jmemmgr.c	73;"	d	file:
AM_MEMORY_MANAGER	.\jmemmgr.c	28;"	d	file:
APP0_DATA_LEN	.\jdmarker.c	578;"	d	file:
APP14_DATA_LEN	.\jdmarker.c	579;"	d	file:
APPN_DATA_LEN	.\jdmarker.c	580;"	d	file:
ASCII_device_name	.\jmemdosa.asm	/^ASCII_device_name	db	"EMMXXXX0"$/;"	d
ASSIGN_STATE	.\jchuff.c	41;"	d	file:
ASSIGN_STATE	.\jchuff.c	44;"	d	file:
ASSIGN_STATE	.\jdhuff.c	40;"	d	file:
ASSIGN_STATE	.\jdhuff.c	43;"	d	file:
ASSIGN_STATE	.\jdphuff.c	43;"	d	file:
ASSIGN_STATE	.\jdphuff.c	46;"	d	file:
Adobe_transform	.\jpeglib.h	/^  UINT8 Adobe_transform;	\/* Color transform code from Adobe marker *\/$/;"	m	struct:jpeg_decompress_struct
Ah	.\jpeglib.h	/^  int Ah, Al;			\/* progressive JPEG successive approx. parms *\/$/;"	m	struct:__anon54
Ah	.\jpeglib.h	/^  int Ss, Se, Ah, Al;		\/* progressive JPEG parameters for scan *\/$/;"	m	struct:jpeg_compress_struct
Ah	.\jpeglib.h	/^  int Ss, Se, Ah, Al;		\/* progressive JPEG parameters for scan *\/$/;"	m	struct:jpeg_decompress_struct
Al	.\jpeglib.h	/^  int Ah, Al;			\/* progressive JPEG successive approx. parms *\/$/;"	m	struct:__anon54
Al	.\jpeglib.h	/^  int Ss, Se, Ah, Al;		\/* progressive JPEG parameters for scan *\/$/;"	m	struct:jpeg_compress_struct
Al	.\jpeglib.h	/^  int Ss, Se, Ah, Al;		\/* progressive JPEG parameters for scan *\/$/;"	m	struct:jpeg_decompress_struct
BE	.\jcphuff.c	/^  unsigned int BE;		\/* # of buffered correction bits before MCU *\/$/;"	m	struct:__anon15	file:
BITREAD_LOAD_STATE	.\jdhuff.h	107;"	d
BITREAD_SAVE_STATE	.\jdhuff.h	114;"	d
BITREAD_STATE_VARS	.\jdhuff.h	102;"	d
BITS_IN_JSAMPLE	.\jmorecfg.h	23;"	d
BIT_BUF_SIZE	.\jdhuff.h	73;"	d
BLOCK_SMOOTHING_SUPPORTED	.\jdcoefct.c	23;"	d	file:
BLOCK_SMOOTHING_SUPPORTED	.\jmorecfg.h	289;"	d
BOX_C0_ELEMS	.\jquant2.c	628;"	d	file:
BOX_C0_LOG	.\jquant2.c	624;"	d	file:
BOX_C0_SHIFT	.\jquant2.c	632;"	d	file:
BOX_C1_ELEMS	.\jquant2.c	629;"	d	file:
BOX_C1_LOG	.\jquant2.c	625;"	d	file:
BOX_C1_SHIFT	.\jquant2.c	633;"	d	file:
BOX_C2_ELEMS	.\jquant2.c	630;"	d	file:
BOX_C2_LOG	.\jquant2.c	626;"	d	file:
BOX_C2_SHIFT	.\jquant2.c	634;"	d	file:
BYTESPERSAMPLE	.\wrppm.c	35;"	d	file:
BYTESPERSAMPLE	.\wrppm.c	40;"	d	file:
BYTESPERSAMPLE	.\wrppm.c	49;"	d	file:
B_CB_OFF	.\jccolor.c	74;"	d	file:
B_CR_OFF	.\jccolor.c	77;"	d	file:
B_SCALE	.\jquant2.c	75;"	d	file:
B_Y_OFF	.\jccolor.c	71;"	d	file:
C0_SCALE	.\jquant2.c	85;"	d	file:
C0_SCALE	.\jquant2.c	88;"	d	file:
C0_SHIFT	.\jquant2.c	142;"	d	file:
C1_SCALE	.\jquant2.c	91;"	d	file:
C1_SHIFT	.\jquant2.c	143;"	d	file:
C2_SCALE	.\jquant2.c	94;"	d	file:
C2_SCALE	.\jquant2.c	97;"	d	file:
C2_SHIFT	.\jquant2.c	144;"	d	file:
CBCR_OFFSET	.\jccolor.c	59;"	d	file:
CCIR601_sampling	.\jpeglib.h	/^  boolean CCIR601_sampling;	\/* TRUE=first samples are cosited *\/$/;"	m	struct:jpeg_compress_struct
CCIR601_sampling	.\jpeglib.h	/^  boolean CCIR601_sampling;	\/* TRUE=first samples are cosited *\/$/;"	m	struct:jpeg_decompress_struct
CDERROR_H	.\cderror.h	22;"	d
CENTERJSAMPLE	.\jmorecfg.h	74;"	d
CENTERJSAMPLE	.\jmorecfg.h	88;"	d
CHAR_OUT	.\wrgif.c	95;"	d	file:
CHECK_BIT_BUFFER	.\jdhuff.h	138;"	d
CMAPBITS	.\wrrle.c	50;"	d	file:
CMAPLENGTH	.\wrrle.c	51;"	d	file:
CONST_BITS	.\jcdctmgr.c	98;"	d	file:
CONST_BITS	.\jddctmgr.c	184;"	d	file:
CONST_BITS	.\jfdctfst.c	68;"	d	file:
CONST_BITS	.\jfdctint.c	78;"	d	file:
CONST_BITS	.\jidctfst.c	77;"	d	file:
CONST_BITS	.\jidctint.c	78;"	d	file:
CONST_BITS	.\jidctred.c	43;"	d	file:
CONST_SCALE	.\jdct.h	132;"	d
CONTEXT_ROWS_SUPPORTED	.\jcprepct.c	28;"	d	file:
CSTATE_RAW_OK	.\jpegint.h	27;"	d
CSTATE_SCANNING	.\jpegint.h	26;"	d
CSTATE_START	.\jpegint.h	25;"	d
CSTATE_WRCOEFS	.\jpegint.h	28;"	d
CTX_POSTPONED_ROW	.\jdmainct.c	139;"	d	file:
CTX_PREPARE_FOR_IMCU	.\jdmainct.c	137;"	d	file:
CTX_PROCESS_IMCU	.\jdmainct.c	138;"	d	file:
C_ARITH_CODING_SUPPORTED	.\jmorecfg.h	269;"	d
C_MAX_BLOCKS_IN_MCU	.\jpeglib.h	55;"	d
C_MULTISCAN_FILES_SUPPORTED	.\jmorecfg.h	270;"	d
C_PROGRESSIVE_SUPPORTED	.\jmorecfg.h	271;"	d
Cb_b_tab	.\jdcolor.c	/^  int * Cb_b_tab;		\/* => table for Cb to B conversion *\/$/;"	m	struct:__anon22	file:
Cb_b_tab	.\jdmerge.c	/^  int * Cb_b_tab;		\/* => table for Cb to B conversion *\/$/;"	m	struct:__anon35	file:
Cb_g_tab	.\jdcolor.c	/^  INT32 * Cb_g_tab;		\/* => table for Cb to G conversion *\/$/;"	m	struct:__anon22	file:
Cb_g_tab	.\jdmerge.c	/^  INT32 * Cb_g_tab;		\/* => table for Cb to G conversion *\/$/;"	m	struct:__anon35	file:
ClearCode	.\wrgif.c	/^  int ClearCode;		\/* clear code (doesn't change) *\/$/;"	m	struct:__anon68	file:
Cr_g_tab	.\jdcolor.c	/^  INT32 * Cr_g_tab;		\/* => table for Cr to G conversion *\/$/;"	m	struct:__anon22	file:
Cr_g_tab	.\jdmerge.c	/^  INT32 * Cr_g_tab;		\/* => table for Cr to G conversion *\/$/;"	m	struct:__anon35	file:
Cr_r_tab	.\jdcolor.c	/^  int * Cr_r_tab;		\/* => table for Cr to R conversion *\/$/;"	m	struct:__anon22	file:
Cr_r_tab	.\jdmerge.c	/^  int * Cr_r_tab;		\/* => table for Cr to R conversion *\/$/;"	m	struct:__anon35	file:
DCTELEM	.\jdct.h	/^typedef INT32 DCTELEM;		\/* must have 32 bits *\/$/;"	t
DCTELEM	.\jdct.h	/^typedef int DCTELEM;		\/* 16 or 32 bits is fine *\/$/;"	t
DCTELEMBITS	.\jidctfst.c	143;"	d	file:
DCTSIZE	.\jpeglib.h	41;"	d
DCTSIZE2	.\jpeglib.h	42;"	d
DCT_FLOAT_SUPPORTED	.\jmorecfg.h	265;"	d
DCT_IFAST_SUPPORTED	.\jmorecfg.h	264;"	d
DCT_ISLOW_SUPPORTED	.\jmorecfg.h	263;"	d
DCT_scaled_size	.\jpeglib.h	/^  int DCT_scaled_size;$/;"	m	struct:__anon53
DEFAULT_FMT	.\djpeg.c	70;"	d	file:
DEFAULT_MAX_MEM	.\jmemansi.c	77;"	d	file:
DEFAULT_MAX_MEM	.\jmemdos.c	204;"	d	file:
DEFAULT_MAX_MEM	.\jmemname.c	184;"	d	file:
DEQUANTIZE	.\jidctflt.c	60;"	d	file:
DEQUANTIZE	.\jidctfst.c	129;"	d	file:
DEQUANTIZE	.\jidctint.c	140;"	d	file:
DEQUANTIZE	.\jidctred.c	109;"	d	file:
DESCALE	.\jdct.h	146;"	d
DESCALE	.\jfdctfst.c	97;"	d	file:
DESCALE	.\jfdctfst.c	98;"	d	file:
DESCALE	.\jidctfst.c	110;"	d	file:
DESCALE	.\jidctfst.c	111;"	d	file:
DIRECTCOLOR	.\rdrle.c	/^  { GRAYSCALE, MAPPEDGRAY, PSEUDOCOLOR, TRUECOLOR, DIRECTCOLOR } rle_kind;$/;"	e	enum:__anon63	file:
DIVIDE_BY	.\jcdctmgr.c	247;"	d	file:
DROP_BITS	.\jdhuff.h	150;"	d
DSTATE_BUFIMAGE	.\jpegint.h	36;"	d
DSTATE_BUFPOST	.\jpegint.h	37;"	d
DSTATE_INHEADER	.\jpegint.h	30;"	d
DSTATE_PRELOAD	.\jpegint.h	32;"	d
DSTATE_PRESCAN	.\jpegint.h	33;"	d
DSTATE_RAW_OK	.\jpegint.h	35;"	d
DSTATE_RDCOEFS	.\jpegint.h	38;"	d
DSTATE_READY	.\jpegint.h	31;"	d
DSTATE_SCANNING	.\jpegint.h	34;"	d
DSTATE_START	.\jpegint.h	29;"	d
DSTATE_STOPPING	.\jpegint.h	39;"	d
DST_HANDLE	.\jmemdos.c	479;"	d	file:
DST_OFFSET	.\jmemdos.c	480;"	d	file:
DST_PAGE	.\jmemdos.c	481;"	d	file:
DST_PTR	.\jmemdos.c	482;"	d	file:
DST_TYPE	.\jmemdos.c	478;"	d	file:
D_ARITH_CODING_SUPPORTED	.\jmorecfg.h	285;"	d
D_MAX_BLOCKS_IN_MCU	.\jpeglib.h	57;"	d
D_MULTISCAN_FILES_SUPPORTED	.\jmorecfg.h	286;"	d
D_PROGRESSIVE_SUPPORTED	.\jmorecfg.h	287;"	d
EMSH	.\jmemsys.h	/^typedef unsigned short EMSH;	\/* type of expanded-memory handles *\/$/;"	t
EMSPAGESIZE	.\jmemdos.c	484;"	d	file:
EMSPTR	.\jmemdos.c	/^typedef void far * EMSPTR;$/;"	t	file:
EMS_SUPPORTED	.\jmemdos.c	38;"	d	file:
EMScontext	.\jmemdos.c	/^      } EMScontext;$/;"	t	typeref:struct:__anon42	file:
EMSspec	.\jmemdos.c	/^      } EMSspec;$/;"	t	typeref:union:__anon45	file:
ENTROPY_OPT_SUPPORTED	.\jmorecfg.h	272;"	d
EOBRUN	.\jcphuff.c	/^  unsigned int EOBRUN;		\/* run length of EOBs *\/$/;"	m	struct:__anon15	file:
EOBRUN	.\jdphuff.c	/^  unsigned int EOBRUN;			\/* remaining EOBs in EOBRUN *\/$/;"	m	struct:__anon36	file:
EOFCode	.\wrgif.c	/^  int EOFCode;			\/* EOF code (ditto) *\/$/;"	m	struct:__anon68	file:
ERREXIT	.\jerror.h	205;"	d
ERREXIT	.\rdjpgcom.c	68;"	d	file:
ERREXIT	.\wrjpgcom.c	87;"	d	file:
ERREXIT1	.\jerror.h	208;"	d
ERREXIT2	.\jerror.h	212;"	d
ERREXIT3	.\jerror.h	217;"	d
ERREXIT4	.\jerror.h	223;"	d
ERREXITS	.\jerror.h	230;"	d
EXIT_FAILURE	.\cdjpeg.h	169;"	d
EXIT_FAILURE	.\jerror.c	32;"	d	file:
EXIT_FAILURE	.\rdjpgcom.c	45;"	d	file:
EXIT_FAILURE	.\wrjpgcom.c	51;"	d	file:
EXIT_SUCCESS	.\cdjpeg.h	173;"	d
EXIT_SUCCESS	.\cdjpeg.h	175;"	d
EXIT_SUCCESS	.\rdjpgcom.c	49;"	d	file:
EXIT_SUCCESS	.\rdjpgcom.c	51;"	d	file:
EXIT_SUCCESS	.\wrjpgcom.c	55;"	d	file:
EXIT_SUCCESS	.\wrjpgcom.c	57;"	d	file:
EXIT_WARNING	.\cdjpeg.h	180;"	d
EXIT_WARNING	.\cdjpeg.h	182;"	d
EXTERN	.\jmorecfg.h	190;"	d
FALSE	.\jmorecfg.h	230;"	d
FAR	.\jmorecfg.h	213;"	d
FAR	.\jmorecfg.h	215;"	d
FAST_FLOAT	.\jmorecfg.h	357;"	d
FAST_FLOAT	.\jmorecfg.h	359;"	d
FIELD_AT	.\jmemdos.c	472;"	d	file:
FIX	.\jccolor.c	61;"	d	file:
FIX	.\jdcolor.c	62;"	d	file:
FIX	.\jdct.h	139;"	d
FIX	.\jdmerge.c	74;"	d	file:
FIX_0_211164243	.\jidctred.c	58;"	d	file:
FIX_0_298631336	.\jfdctint.c	93;"	d	file:
FIX_0_298631336	.\jidctint.c	93;"	d	file:
FIX_0_382683433	.\jfdctfst.c	79;"	d	file:
FIX_0_390180644	.\jfdctint.c	94;"	d	file:
FIX_0_390180644	.\jidctint.c	94;"	d	file:
FIX_0_509795579	.\jidctred.c	59;"	d	file:
FIX_0_541196100	.\jfdctfst.c	80;"	d	file:
FIX_0_541196100	.\jfdctint.c	95;"	d	file:
FIX_0_541196100	.\jidctint.c	95;"	d	file:
FIX_0_601344887	.\jidctred.c	60;"	d	file:
FIX_0_707106781	.\jfdctfst.c	81;"	d	file:
FIX_0_720959822	.\jidctred.c	61;"	d	file:
FIX_0_765366865	.\jfdctint.c	96;"	d	file:
FIX_0_765366865	.\jidctint.c	96;"	d	file:
FIX_0_765366865	.\jidctred.c	62;"	d	file:
FIX_0_850430095	.\jidctred.c	63;"	d	file:
FIX_0_899976223	.\jfdctint.c	97;"	d	file:
FIX_0_899976223	.\jidctint.c	97;"	d	file:
FIX_0_899976223	.\jidctred.c	64;"	d	file:
FIX_1_061594337	.\jidctred.c	65;"	d	file:
FIX_1_082392200	.\jidctfst.c	92;"	d	file:
FIX_1_175875602	.\jfdctint.c	98;"	d	file:
FIX_1_175875602	.\jidctint.c	98;"	d	file:
FIX_1_272758580	.\jidctred.c	66;"	d	file:
FIX_1_306562965	.\jfdctfst.c	82;"	d	file:
FIX_1_414213562	.\jidctfst.c	93;"	d	file:
FIX_1_451774981	.\jidctred.c	67;"	d	file:
FIX_1_501321110	.\jfdctint.c	99;"	d	file:
FIX_1_501321110	.\jidctint.c	99;"	d	file:
FIX_1_847759065	.\jfdctint.c	100;"	d	file:
FIX_1_847759065	.\jidctfst.c	94;"	d	file:
FIX_1_847759065	.\jidctint.c	100;"	d	file:
FIX_1_847759065	.\jidctred.c	68;"	d	file:
FIX_1_961570560	.\jfdctint.c	101;"	d	file:
FIX_1_961570560	.\jidctint.c	101;"	d	file:
FIX_2_053119869	.\jfdctint.c	102;"	d	file:
FIX_2_053119869	.\jidctint.c	102;"	d	file:
FIX_2_172734803	.\jidctred.c	69;"	d	file:
FIX_2_562915447	.\jfdctint.c	103;"	d	file:
FIX_2_562915447	.\jidctint.c	103;"	d	file:
FIX_2_562915447	.\jidctred.c	70;"	d	file:
FIX_2_613125930	.\jidctfst.c	95;"	d	file:
FIX_3_072711026	.\jfdctint.c	104;"	d	file:
FIX_3_072711026	.\jidctint.c	104;"	d	file:
FIX_3_624509785	.\jidctred.c	71;"	d	file:
FLOAT_MULT_TYPE	.\jdct.h	/^typedef FAST_FLOAT FLOAT_MULT_TYPE; \/* preferred floating type *\/$/;"	t
FMEMCOPY	.\jutils.c	100;"	d	file:
FMEMCOPY	.\jutils.c	104;"	d	file:
FMEMZERO	.\jutils.c	101;"	d	file:
FMEMZERO	.\jutils.c	105;"	d	file:
FMT_BMP	.\djpeg.c	/^	FMT_BMP,		\/* BMP format (Windows flavor) *\/$/;"	e	enum:__anon2	file:
FMT_GIF	.\djpeg.c	/^	FMT_GIF,		\/* GIF format *\/$/;"	e	enum:__anon2	file:
FMT_OS2	.\djpeg.c	/^	FMT_OS2,		\/* BMP format (OS\/2 flavor) *\/$/;"	e	enum:__anon2	file:
FMT_PPM	.\djpeg.c	/^	FMT_PPM,		\/* PPM\/PGM (PBMPLUS formats) *\/$/;"	e	enum:__anon2	file:
FMT_RLE	.\djpeg.c	/^	FMT_RLE,		\/* RLE format *\/$/;"	e	enum:__anon2	file:
FMT_TARGA	.\djpeg.c	/^	FMT_TARGA,		\/* Targa format *\/$/;"	e	enum:__anon2	file:
FMT_TIFF	.\djpeg.c	/^	FMT_TIFF		\/* TIFF format *\/$/;"	e	enum:__anon2	file:
FSERROR	.\jquant1.c	/^typedef INT16 FSERROR;		\/* 16 bits should be enough *\/$/;"	t	file:
FSERROR	.\jquant1.c	/^typedef INT32 FSERROR;		\/* may need more than 16 bits *\/$/;"	t	file:
FSERROR	.\jquant2.c	/^typedef INT16 FSERROR;		\/* 16 bits should be enough *\/$/;"	t	file:
FSERROR	.\jquant2.c	/^typedef INT32 FSERROR;		\/* may need more than 16 bits *\/$/;"	t	file:
FSERRPTR	.\jquant1.c	/^typedef FSERROR FAR *FSERRPTR;	\/* pointer to error array (in FAR storage!) *\/$/;"	t	file:
FSERRPTR	.\jquant2.c	/^typedef FSERROR FAR *FSERRPTR;	\/* pointer to error array (in FAR storage!) *\/$/;"	t	file:
FULL_COEF_BUFFER_SUPPORTED	.\jccoefct.c	24;"	d	file:
FULL_COEF_BUFFER_SUPPORTED	.\jccoefct.c	27;"	d	file:
FULL_MAIN_BUFFER_SUPPORTED	.\jcmainct.c	23;"	d	file:
GETJOCTET	.\jmorecfg.h	111;"	d
GETJOCTET	.\jmorecfg.h	117;"	d
GETJOCTET	.\jmorecfg.h	119;"	d
GETJSAMPLE	.\jmorecfg.h	60;"	d
GETJSAMPLE	.\jmorecfg.h	66;"	d
GETJSAMPLE	.\jmorecfg.h	68;"	d
GETJSAMPLE	.\jmorecfg.h	85;"	d
GET_2B	.\rdbmp.c	246;"	d	file:
GET_2B	.\rdtarga.c	341;"	d	file:
GET_4B	.\rdbmp.c	248;"	d	file:
GET_BITS	.\jdhuff.h	144;"	d
GLOBAL	.\cdjpeg.c	/^GLOBAL(boolean)$/;"	f
GLOBAL	.\jcapistd.c	/^GLOBAL(JDIMENSION)$/;"	f
GLOBAL	.\jdapimin.c	/^GLOBAL(boolean)$/;"	f
GLOBAL	.\jdapistd.c	/^GLOBAL(JDIMENSION)$/;"	f
GLOBAL	.\jdapistd.c	/^GLOBAL(boolean)$/;"	f
GLOBAL	.\jdhuff.c	/^GLOBAL(boolean)$/;"	f
GLOBAL	.\jdmarker.c	/^GLOBAL(boolean)$/;"	f
GLOBAL	.\jmorecfg.h	188;"	d
GLOBAL	.\rdbmp.c	/^GLOBAL(cjpeg_source_ptr)$/;"	f
GLOBAL	.\rdgif.c	/^GLOBAL(cjpeg_source_ptr)$/;"	f
GLOBAL	.\rdppm.c	/^GLOBAL(cjpeg_source_ptr)$/;"	f
GLOBAL	.\rdrle.c	/^GLOBAL(cjpeg_source_ptr)$/;"	f
GLOBAL	.\rdswitch.c	/^GLOBAL(boolean)$/;"	f
GLOBAL	.\rdtarga.c	/^GLOBAL(cjpeg_source_ptr)$/;"	f
GLOBAL	.\wrbmp.c	/^GLOBAL(djpeg_dest_ptr)$/;"	f
GLOBAL	.\wrgif.c	/^GLOBAL(djpeg_dest_ptr)$/;"	f
GLOBAL	.\wrppm.c	/^GLOBAL(djpeg_dest_ptr)$/;"	f
GLOBAL	.\wrrle.c	/^GLOBAL(djpeg_dest_ptr)$/;"	f
GLOBAL	.\wrtarga.c	/^GLOBAL(djpeg_dest_ptr)$/;"	f
GRAYSCALE	.\rdrle.c	/^  { GRAYSCALE, MAPPEDGRAY, PSEUDOCOLOR, TRUECOLOR, DIRECTCOLOR } rle_kind;$/;"	e	enum:__anon63	file:
G_CB_OFF	.\jccolor.c	73;"	d	file:
G_CR_OFF	.\jccolor.c	76;"	d	file:
G_SCALE	.\jquant2.c	74;"	d	file:
G_Y_OFF	.\jccolor.c	70;"	d	file:
HAVE_CONST	.\ckconfig.c	181;"	d	file:
HAVE_ISASCII	.\ansi2knr.c	294;"	d	file:
HAVE_ISASCII	.\ansi2knr.c	295;"	d	file:
HAVE_PROTOTYPES	.\ckconfig.c	100;"	d	file:
HAVE_STDDEF_H	.\ckconfig.c	35;"	d	file:
HAVE_STDLIB_H	.\ckconfig.c	40;"	d	file:
HAVE_UNSIGNED_CHAR	.\ckconfig.c	128;"	d	file:
HAVE_UNSIGNED_SHORT	.\ckconfig.c	140;"	d	file:
HAVE_VOID	.\ckconfig.c	151;"	d	file:
HIBYTE	.\jmemdos.c	486;"	d	file:
HIST_C0_BITS	.\jquant2.c	132;"	d	file:
HIST_C0_ELEMS	.\jquant2.c	137;"	d	file:
HIST_C1_BITS	.\jquant2.c	133;"	d	file:
HIST_C1_ELEMS	.\jquant2.c	138;"	d	file:
HIST_C2_BITS	.\jquant2.c	134;"	d	file:
HIST_C2_ELEMS	.\jquant2.c	139;"	d	file:
HUFF_DECODE	.\jdhuff.h	176;"	d
HUFF_EXTEND	.\jdhuff.c	443;"	d	file:
HUFF_EXTEND	.\jdhuff.c	447;"	d	file:
HUFF_EXTEND	.\jdphuff.c	203;"	d	file:
HUFF_EXTEND	.\jdphuff.c	207;"	d	file:
HUFF_LOOKAHEAD	.\jdhuff.h	24;"	d
IDCT_SCALING_SUPPORTED	.\jmorecfg.h	290;"	d
IDCT_range_limit	.\jdct.h	76;"	d
IDESCALE	.\jidctfst.c	157;"	d	file:
IFAST_MULT_TYPE	.\jdct.h	/^typedef INT32 IFAST_MULT_TYPE;	\/* need 32 bits for scaled quantizers *\/$/;"	t
IFAST_MULT_TYPE	.\jdct.h	/^typedef MULTIPLIER IFAST_MULT_TYPE; \/* 16 bits is OK, use short if faster *\/$/;"	t
IFAST_SCALE_BITS	.\jdct.h	59;"	d
IFAST_SCALE_BITS	.\jdct.h	62;"	d
IMAGE_FORMATS	.\djpeg.c	/^} IMAGE_FORMATS;$/;"	t	typeref:enum:__anon2	file:
INCOMPLETE_TYPES_BROKEN	.\ckconfig.c	202;"	d	file:
INLINE	.\jmorecfg.h	329;"	d
INLINE	.\jmorecfg.h	332;"	d
INPUT_2BYTES	.\jdmarker.c	156;"	d	file:
INPUT_BUF_SIZE	.\jdatasrc.c	35;"	d	file:
INPUT_BYTE	.\jdmarker.c	148;"	d	file:
INPUT_RELOAD	.\jdmarker.c	130;"	d	file:
INPUT_SMOOTHING_SUPPORTED	.\jmorecfg.h	281;"	d
INPUT_SYNC	.\jdmarker.c	125;"	d	file:
INPUT_VARS	.\jdmarker.c	119;"	d	file:
INT16	.\jmorecfg.h	/^typedef short INT16;$/;"	t
INT32	.\jmorecfg.h	/^typedef long INT32;$/;"	t
IRIGHT_SHIFT	.\jcphuff.c	79;"	d	file:
IRIGHT_SHIFT	.\jcphuff.c	85;"	d	file:
IRIGHT_SHIFT	.\jidctfst.c	147;"	d	file:
ISHIFT_TEMPS	.\jcphuff.c	78;"	d	file:
ISHIFT_TEMPS	.\jcphuff.c	84;"	d	file:
ISHIFT_TEMPS	.\jidctfst.c	141;"	d	file:
ISLOW_MULT_TYPE	.\jdct.h	/^typedef MULTIPLIER ISLOW_MULT_TYPE; \/* short or int, whichever is faster *\/$/;"	t
JBLOCK	.\jpeglib.h	/^typedef JCOEF JBLOCK[DCTSIZE2];	\/* one block of coefficients *\/$/;"	t
JBLOCKARRAY	.\jpeglib.h	/^typedef JBLOCKROW *JBLOCKARRAY;		\/* a 2-D array of coefficient blocks *\/$/;"	t
JBLOCKIMAGE	.\jpeglib.h	/^typedef JBLOCKARRAY *JBLOCKIMAGE;	\/* a 3-D array of coefficient blocks *\/$/;"	t
JBLOCKROW	.\jpeglib.h	/^typedef JBLOCK FAR *JBLOCKROW;	\/* pointer to one row of coefficient blocks *\/$/;"	t
JBUF_CRANK_DEST	.\jpegint.h	/^	JBUF_CRANK_DEST,	\/* Run dest subobject only, using saved data *\/$/;"	e	enum:__anon50
JBUF_PASS_THRU	.\jpegint.h	/^	JBUF_PASS_THRU,		\/* Plain stripwise operation *\/$/;"	e	enum:__anon50
JBUF_SAVE_AND_PASS	.\jpegint.h	/^	JBUF_SAVE_AND_PASS	\/* Run both subobjects, save output *\/$/;"	e	enum:__anon50
JBUF_SAVE_SOURCE	.\jpegint.h	/^	JBUF_SAVE_SOURCE,	\/* Run source subobject only, save output *\/$/;"	e	enum:__anon50
JCOEF	.\jmorecfg.h	/^typedef short JCOEF;$/;"	t
JCOEFPTR	.\jpeglib.h	/^typedef JCOEF FAR *JCOEFPTR;	\/* useful in a couple of places *\/$/;"	t
JCONFIG_INCLUDED	.\jinclude.h	21;"	d
JCOPYOPT_ALL	.\transupp.h	/^	JCOPYOPT_ALL		\/* copy all optional markers *\/$/;"	e	enum:__anon66
JCOPYOPT_COMMENTS	.\transupp.h	/^	JCOPYOPT_COMMENTS,	\/* copy only comment (COM) markers *\/$/;"	e	enum:__anon66
JCOPYOPT_DEFAULT	.\transupp.h	127;"	d
JCOPYOPT_NONE	.\transupp.h	/^	JCOPYOPT_NONE,		\/* copy no optional markers *\/$/;"	e	enum:__anon66
JCOPYRIGHT	.\jversion.h	14;"	d
JCOPY_OPTION	.\transupp.h	/^} JCOPY_OPTION;$/;"	t	typeref:enum:__anon66
JCS_CMYK	.\jpeglib.h	/^	JCS_CMYK,		\/* C\/M\/Y\/K *\/$/;"	e	enum:__anon55
JCS_GRAYSCALE	.\jpeglib.h	/^	JCS_GRAYSCALE,		\/* monochrome *\/$/;"	e	enum:__anon55
JCS_RGB	.\jpeglib.h	/^	JCS_RGB,		\/* red\/green\/blue *\/$/;"	e	enum:__anon55
JCS_UNKNOWN	.\jpeglib.h	/^	JCS_UNKNOWN,		\/* error\/unspecified *\/$/;"	e	enum:__anon55
JCS_YCCK	.\jpeglib.h	/^	JCS_YCCK		\/* Y\/Cb\/Cr\/K *\/$/;"	e	enum:__anon55
JCS_YCbCr	.\jpeglib.h	/^	JCS_YCbCr,		\/* Y\/Cb\/Cr (also known as YUV) *\/$/;"	e	enum:__anon55
JDCT_DEFAULT	.\jpeglib.h	224;"	d
JDCT_FASTEST	.\jpeglib.h	227;"	d
JDCT_FLOAT	.\jpeglib.h	/^	JDCT_FLOAT		\/* floating-point: accurate, fast on fast HW *\/$/;"	e	enum:__anon56
JDCT_IFAST	.\jpeglib.h	/^	JDCT_IFAST,		\/* faster, less accurate integer method *\/$/;"	e	enum:__anon56
JDCT_ISLOW	.\jpeglib.h	/^	JDCT_ISLOW,		\/* slow but accurate integer algorithm *\/$/;"	e	enum:__anon56
JDIMENSION	.\jmorecfg.h	/^typedef unsigned int JDIMENSION;$/;"	t
JDITHER_FS	.\jpeglib.h	/^	JDITHER_FS		\/* Floyd-Steinberg error diffusion dither *\/$/;"	e	enum:__anon57
JDITHER_NONE	.\jpeglib.h	/^	JDITHER_NONE,		\/* no dithering *\/$/;"	e	enum:__anon57
JDITHER_ORDERED	.\jpeglib.h	/^	JDITHER_ORDERED,	\/* simple ordered dither *\/$/;"	e	enum:__anon57
JERROR_H	.\jerror.h	199;"	d
JFIF_major_version	.\jpeglib.h	/^  UINT8 JFIF_major_version;	\/* JFIF version number *\/$/;"	m	struct:jpeg_decompress_struct
JFIF_major_version	.\jpeglib.h	/^  UINT8 JFIF_major_version;	\/* What to write for the JFIF version number *\/$/;"	m	struct:jpeg_compress_struct
JFIF_minor_version	.\jpeglib.h	/^  UINT8 JFIF_minor_version;$/;"	m	struct:jpeg_compress_struct
JFIF_minor_version	.\jpeglib.h	/^  UINT8 JFIF_minor_version;$/;"	m	struct:jpeg_decompress_struct
JFREAD	.\jinclude.h	88;"	d
JFWRITE	.\jinclude.h	90;"	d
JHUFF_TBL	.\jpeglib.h	/^} JHUFF_TBL;$/;"	t	typeref:struct:__anon52
JMAKE_ENUM_LIST	.\cderror.h	128;"	d
JMAKE_ENUM_LIST	.\cderror.h	24;"	d
JMAKE_ENUM_LIST	.\jerror.h	191;"	d
JMAKE_ENUM_LIST	.\jerror.h	24;"	d
JMEMDOSA_TXT	.\jmemdosa.asm	/^JMEMDOSA_TXT	segment byte public 'CODE'$/;"	l
JMESSAGE	.\cderror.h	/^JMESSAGE(JERR_BAD_CMAP_FILE,$/;"	e	enum:__anon1
JMESSAGE	.\cderror.h	/^JMESSAGE(JERR_BMP_BADCMAP, "Unsupported BMP colormap format")$/;"	e	enum:__anon1
JMESSAGE	.\cderror.h	/^JMESSAGE(JERR_BMP_BADDEPTH, "Only 8- and 24-bit BMP files are supported")$/;"	e	enum:__anon1
JMESSAGE	.\cderror.h	/^JMESSAGE(JERR_BMP_BADHEADER, "Invalid BMP file: bad header length")$/;"	e	enum:__anon1
JMESSAGE	.\cderror.h	/^JMESSAGE(JERR_BMP_BADPLANES, "Invalid BMP file: biPlanes not equal to 1")$/;"	e	enum:__anon1
JMESSAGE	.\cderror.h	/^JMESSAGE(JERR_BMP_COLORSPACE, "BMP output must be grayscale or RGB")$/;"	e	enum:__anon1
JMESSAGE	.\cderror.h	/^JMESSAGE(JERR_BMP_COMPRESSED, "Sorry, compressed BMPs not yet supported")$/;"	e	enum:__anon1
JMESSAGE	.\cderror.h	/^JMESSAGE(JERR_BMP_NOT, "Not a BMP file - does not start with BM")$/;"	e	enum:__anon1
JMESSAGE	.\cderror.h	/^JMESSAGE(JERR_GIF_BUG, "GIF output got confused")$/;"	e	enum:__anon1
JMESSAGE	.\cderror.h	/^JMESSAGE(JERR_GIF_CODESIZE, "Bogus GIF codesize %d")$/;"	e	enum:__anon1
JMESSAGE	.\cderror.h	/^JMESSAGE(JERR_GIF_COLORSPACE, "GIF output must be grayscale or RGB")$/;"	e	enum:__anon1
JMESSAGE	.\cderror.h	/^JMESSAGE(JERR_GIF_IMAGENOTFOUND, "Too few images in GIF file")$/;"	e	enum:__anon1
JMESSAGE	.\cderror.h	/^JMESSAGE(JERR_GIF_NOT, "Not a GIF file")$/;"	e	enum:__anon1
JMESSAGE	.\cderror.h	/^JMESSAGE(JERR_PPM_COLORSPACE, "PPM output must be grayscale or RGB")$/;"	e	enum:__anon1
JMESSAGE	.\cderror.h	/^JMESSAGE(JERR_PPM_NONNUMERIC, "Nonnumeric data in PPM file")$/;"	e	enum:__anon1
JMESSAGE	.\cderror.h	/^JMESSAGE(JERR_PPM_NOT, "Not a PPM\/PGM file")$/;"	e	enum:__anon1
JMESSAGE	.\cderror.h	/^JMESSAGE(JERR_RLE_BADERROR, "Bogus error code from RLE library")$/;"	e	enum:__anon1
JMESSAGE	.\cderror.h	/^JMESSAGE(JERR_RLE_COLORSPACE, "RLE output must be grayscale or RGB")$/;"	e	enum:__anon1
JMESSAGE	.\cderror.h	/^JMESSAGE(JERR_RLE_DIMENSIONS, "Image dimensions (%ux%u) too large for RLE")$/;"	e	enum:__anon1
JMESSAGE	.\cderror.h	/^JMESSAGE(JERR_RLE_EMPTY, "Empty RLE file")$/;"	e	enum:__anon1
JMESSAGE	.\cderror.h	/^JMESSAGE(JERR_RLE_EOF, "Premature EOF in RLE header")$/;"	e	enum:__anon1
JMESSAGE	.\cderror.h	/^JMESSAGE(JERR_RLE_MEM, "Insufficient memory for RLE header")$/;"	e	enum:__anon1
JMESSAGE	.\cderror.h	/^JMESSAGE(JERR_RLE_NOT, "Not an RLE file")$/;"	e	enum:__anon1
JMESSAGE	.\cderror.h	/^JMESSAGE(JERR_RLE_TOOMANYCHANNELS, "Cannot handle %d output channels for RLE")$/;"	e	enum:__anon1
JMESSAGE	.\cderror.h	/^JMESSAGE(JERR_RLE_UNSUPPORTED, "Cannot handle this RLE setup")$/;"	e	enum:__anon1
JMESSAGE	.\cderror.h	/^JMESSAGE(JERR_TGA_BADCMAP, "Unsupported Targa colormap format")$/;"	e	enum:__anon1
JMESSAGE	.\cderror.h	/^JMESSAGE(JERR_TGA_BADPARMS, "Invalid or unsupported Targa file")$/;"	e	enum:__anon1
JMESSAGE	.\cderror.h	/^JMESSAGE(JERR_TGA_COLORSPACE, "Targa output must be grayscale or RGB")$/;"	e	enum:__anon1
JMESSAGE	.\cderror.h	/^JMESSAGE(JERR_TOO_MANY_COLORS,$/;"	e	enum:__anon1
JMESSAGE	.\cderror.h	/^JMESSAGE(JERR_UNGETC_FAILED, "ungetc failed")$/;"	e	enum:__anon1
JMESSAGE	.\cderror.h	/^JMESSAGE(JERR_UNKNOWN_FORMAT,$/;"	e	enum:__anon1
JMESSAGE	.\cderror.h	/^JMESSAGE(JERR_UNSUPPORTED_FORMAT, "Unsupported output file format")$/;"	e	enum:__anon1
JMESSAGE	.\cderror.h	/^JMESSAGE(JMSG_FIRSTADDONCODE=1000, NULL) \/* Must be first entry! *\/$/;"	e	enum:__anon1
JMESSAGE	.\cderror.h	/^JMESSAGE(JTRC_BMP, "%ux%u 24-bit BMP image")$/;"	e	enum:__anon1
JMESSAGE	.\cderror.h	/^JMESSAGE(JTRC_BMP_MAPPED, "%ux%u 8-bit colormapped BMP image")$/;"	e	enum:__anon1
JMESSAGE	.\cderror.h	/^JMESSAGE(JTRC_BMP_OS2, "%ux%u 24-bit OS2 BMP image")$/;"	e	enum:__anon1
JMESSAGE	.\cderror.h	/^JMESSAGE(JTRC_BMP_OS2_MAPPED, "%ux%u 8-bit colormapped OS2 BMP image")$/;"	e	enum:__anon1
JMESSAGE	.\cderror.h	/^JMESSAGE(JTRC_GIF, "%ux%ux%d GIF image")$/;"	e	enum:__anon1
JMESSAGE	.\cderror.h	/^JMESSAGE(JTRC_GIF_BADVERSION,$/;"	e	enum:__anon1
JMESSAGE	.\cderror.h	/^JMESSAGE(JTRC_GIF_EXTENSION, "Ignoring GIF extension block of type 0x%02x")$/;"	e	enum:__anon1
JMESSAGE	.\cderror.h	/^JMESSAGE(JTRC_GIF_NONSQUARE, "Caution: nonsquare pixels in input")$/;"	e	enum:__anon1
JMESSAGE	.\cderror.h	/^JMESSAGE(JTRC_PGM, "%ux%u PGM image")$/;"	e	enum:__anon1
JMESSAGE	.\cderror.h	/^JMESSAGE(JTRC_PGM_TEXT, "%ux%u text PGM image")$/;"	e	enum:__anon1
JMESSAGE	.\cderror.h	/^JMESSAGE(JTRC_PPM, "%ux%u PPM image")$/;"	e	enum:__anon1
JMESSAGE	.\cderror.h	/^JMESSAGE(JTRC_PPM_TEXT, "%ux%u text PPM image")$/;"	e	enum:__anon1
JMESSAGE	.\cderror.h	/^JMESSAGE(JTRC_RLE, "%ux%u full-color RLE file")$/;"	e	enum:__anon1
JMESSAGE	.\cderror.h	/^JMESSAGE(JTRC_RLE_FULLMAP, "%ux%u full-color RLE file with map of length %d")$/;"	e	enum:__anon1
JMESSAGE	.\cderror.h	/^JMESSAGE(JTRC_RLE_GRAY, "%ux%u grayscale RLE file")$/;"	e	enum:__anon1
JMESSAGE	.\cderror.h	/^JMESSAGE(JTRC_RLE_MAPGRAY, "%ux%u grayscale RLE file with map of length %d")$/;"	e	enum:__anon1
JMESSAGE	.\cderror.h	/^JMESSAGE(JTRC_RLE_MAPPED, "%ux%u colormapped RLE file with map of length %d")$/;"	e	enum:__anon1
JMESSAGE	.\cderror.h	/^JMESSAGE(JTRC_TGA, "%ux%u RGB Targa image")$/;"	e	enum:__anon1
JMESSAGE	.\cderror.h	/^JMESSAGE(JTRC_TGA_GRAY, "%ux%u grayscale Targa image")$/;"	e	enum:__anon1
JMESSAGE	.\cderror.h	/^JMESSAGE(JTRC_TGA_MAPPED, "%ux%u colormapped Targa image")$/;"	e	enum:__anon1
JMESSAGE	.\cderror.h	/^JMESSAGE(JWRN_GIF_BADDATA, "Corrupt data in GIF file")$/;"	e	enum:__anon1
JMESSAGE	.\cderror.h	/^JMESSAGE(JWRN_GIF_CHAR, "Bogus char 0x%02x in GIF file, ignoring")$/;"	e	enum:__anon1
JMESSAGE	.\cderror.h	/^JMESSAGE(JWRN_GIF_ENDCODE, "Premature end of GIF image")$/;"	e	enum:__anon1
JMESSAGE	.\cderror.h	/^JMESSAGE(JWRN_GIF_NOMOREDATA, "Ran out of GIF bits")$/;"	e	enum:__anon1
JMESSAGE	.\cderror.h	132;"	d
JMESSAGE	.\cderror.h	27;"	d
JMESSAGE	.\cderror.h	35;"	d
JMESSAGE	.\cjpeg.c	42;"	d	file:
JMESSAGE	.\djpeg.c	44;"	d	file:
JMESSAGE	.\jerror.c	48;"	d	file:
JMESSAGE	.\jerror.h	/^JMESSAGE(JERR_ARITH_NOTIMPL,$/;"	e	enum:__anon40
JMESSAGE	.\jerror.h	/^JMESSAGE(JERR_BAD_ALIGN_TYPE, "ALIGN_TYPE is wrong, please fix")$/;"	e	enum:__anon40
JMESSAGE	.\jerror.h	/^JMESSAGE(JERR_BAD_ALLOC_CHUNK, "MAX_ALLOC_CHUNK is wrong, please fix")$/;"	e	enum:__anon40
JMESSAGE	.\jerror.h	/^JMESSAGE(JERR_BAD_BUFFER_MODE, "Bogus buffer control mode")$/;"	e	enum:__anon40
JMESSAGE	.\jerror.h	/^JMESSAGE(JERR_BAD_COMPONENT_ID, "Invalid component ID %d in SOS")$/;"	e	enum:__anon40
JMESSAGE	.\jerror.h	/^JMESSAGE(JERR_BAD_DCTSIZE, "IDCT output block size %d not supported")$/;"	e	enum:__anon40
JMESSAGE	.\jerror.h	/^JMESSAGE(JERR_BAD_DCT_COEF, "DCT coefficient out of range")$/;"	e	enum:__anon40
JMESSAGE	.\jerror.h	/^JMESSAGE(JERR_BAD_HUFF_TABLE, "Bogus Huffman table definition")$/;"	e	enum:__anon40
JMESSAGE	.\jerror.h	/^JMESSAGE(JERR_BAD_IN_COLORSPACE, "Bogus input colorspace")$/;"	e	enum:__anon40
JMESSAGE	.\jerror.h	/^JMESSAGE(JERR_BAD_J_COLORSPACE, "Bogus JPEG colorspace")$/;"	e	enum:__anon40
JMESSAGE	.\jerror.h	/^JMESSAGE(JERR_BAD_LENGTH, "Bogus marker length")$/;"	e	enum:__anon40
JMESSAGE	.\jerror.h	/^JMESSAGE(JERR_BAD_LIB_VERSION,$/;"	e	enum:__anon40
JMESSAGE	.\jerror.h	/^JMESSAGE(JERR_BAD_MCU_SIZE, "Sampling factors too large for interleaved scan")$/;"	e	enum:__anon40
JMESSAGE	.\jerror.h	/^JMESSAGE(JERR_BAD_POOL_ID, "Invalid memory pool code %d")$/;"	e	enum:__anon40
JMESSAGE	.\jerror.h	/^JMESSAGE(JERR_BAD_PRECISION, "Unsupported JPEG data precision %d")$/;"	e	enum:__anon40
JMESSAGE	.\jerror.h	/^JMESSAGE(JERR_BAD_PROGRESSION,$/;"	e	enum:__anon40
JMESSAGE	.\jerror.h	/^JMESSAGE(JERR_BAD_PROG_SCRIPT,$/;"	e	enum:__anon40
JMESSAGE	.\jerror.h	/^JMESSAGE(JERR_BAD_SAMPLING, "Bogus sampling factors")$/;"	e	enum:__anon40
JMESSAGE	.\jerror.h	/^JMESSAGE(JERR_BAD_SCAN_SCRIPT, "Invalid scan script at entry %d")$/;"	e	enum:__anon40
JMESSAGE	.\jerror.h	/^JMESSAGE(JERR_BAD_STATE, "Improper call to JPEG library in state %d")$/;"	e	enum:__anon40
JMESSAGE	.\jerror.h	/^JMESSAGE(JERR_BAD_STRUCT_SIZE,$/;"	e	enum:__anon40
JMESSAGE	.\jerror.h	/^JMESSAGE(JERR_BAD_VIRTUAL_ACCESS, "Bogus virtual array access")$/;"	e	enum:__anon40
JMESSAGE	.\jerror.h	/^JMESSAGE(JERR_BUFFER_SIZE, "Buffer passed to JPEG library is too small")$/;"	e	enum:__anon40
JMESSAGE	.\jerror.h	/^JMESSAGE(JERR_CANT_SUSPEND, "Suspension not allowed here")$/;"	e	enum:__anon40
JMESSAGE	.\jerror.h	/^JMESSAGE(JERR_CCIR601_NOTIMPL, "CCIR601 sampling not implemented yet")$/;"	e	enum:__anon40
JMESSAGE	.\jerror.h	/^JMESSAGE(JERR_COMPONENT_COUNT, "Too many color components: %d, max %d")$/;"	e	enum:__anon40
JMESSAGE	.\jerror.h	/^JMESSAGE(JERR_CONVERSION_NOTIMPL, "Unsupported color conversion request")$/;"	e	enum:__anon40
JMESSAGE	.\jerror.h	/^JMESSAGE(JERR_DAC_INDEX, "Bogus DAC index %d")$/;"	e	enum:__anon40
JMESSAGE	.\jerror.h	/^JMESSAGE(JERR_DAC_VALUE, "Bogus DAC value 0x%x")$/;"	e	enum:__anon40
JMESSAGE	.\jerror.h	/^JMESSAGE(JERR_DHT_INDEX, "Bogus DHT index %d")$/;"	e	enum:__anon40
JMESSAGE	.\jerror.h	/^JMESSAGE(JERR_DQT_INDEX, "Bogus DQT index %d")$/;"	e	enum:__anon40
JMESSAGE	.\jerror.h	/^JMESSAGE(JERR_EMPTY_IMAGE, "Empty JPEG image (DNL not supported)")$/;"	e	enum:__anon40
JMESSAGE	.\jerror.h	/^JMESSAGE(JERR_EMS_READ, "Read from EMS failed")$/;"	e	enum:__anon40
JMESSAGE	.\jerror.h	/^JMESSAGE(JERR_EMS_WRITE, "Write to EMS failed")$/;"	e	enum:__anon40
JMESSAGE	.\jerror.h	/^JMESSAGE(JERR_EOI_EXPECTED, "Didn't expect more than one scan")$/;"	e	enum:__anon40
JMESSAGE	.\jerror.h	/^JMESSAGE(JERR_FILE_READ, "Input file read error")$/;"	e	enum:__anon40
JMESSAGE	.\jerror.h	/^JMESSAGE(JERR_FILE_WRITE, "Output file write error --- out of disk space?")$/;"	e	enum:__anon40
JMESSAGE	.\jerror.h	/^JMESSAGE(JERR_FRACT_SAMPLE_NOTIMPL, "Fractional sampling not implemented yet")$/;"	e	enum:__anon40
JMESSAGE	.\jerror.h	/^JMESSAGE(JERR_HUFF_CLEN_OVERFLOW, "Huffman code size table overflow")$/;"	e	enum:__anon40
JMESSAGE	.\jerror.h	/^JMESSAGE(JERR_HUFF_MISSING_CODE, "Missing Huffman code table entry")$/;"	e	enum:__anon40
JMESSAGE	.\jerror.h	/^JMESSAGE(JERR_IMAGE_TOO_BIG, "Maximum supported image dimension is %u pixels")$/;"	e	enum:__anon40
JMESSAGE	.\jerror.h	/^JMESSAGE(JERR_INPUT_EMPTY, "Empty input file")$/;"	e	enum:__anon40
JMESSAGE	.\jerror.h	/^JMESSAGE(JERR_INPUT_EOF, "Premature end of input file")$/;"	e	enum:__anon40
JMESSAGE	.\jerror.h	/^JMESSAGE(JERR_MISMATCHED_QUANT_TABLE,$/;"	e	enum:__anon40
JMESSAGE	.\jerror.h	/^JMESSAGE(JERR_MISSING_DATA, "Scan script does not transmit all data")$/;"	e	enum:__anon40
JMESSAGE	.\jerror.h	/^JMESSAGE(JERR_MODE_CHANGE, "Invalid color quantization mode change")$/;"	e	enum:__anon40
JMESSAGE	.\jerror.h	/^JMESSAGE(JERR_NOTIMPL, "Not implemented yet")$/;"	e	enum:__anon40
JMESSAGE	.\jerror.h	/^JMESSAGE(JERR_NOT_COMPILED, "Requested feature was omitted at compile time")$/;"	e	enum:__anon40
JMESSAGE	.\jerror.h	/^JMESSAGE(JERR_NO_BACKING_STORE, "Backing store not supported")$/;"	e	enum:__anon40
JMESSAGE	.\jerror.h	/^JMESSAGE(JERR_NO_HUFF_TABLE, "Huffman table 0x%02x was not defined")$/;"	e	enum:__anon40
JMESSAGE	.\jerror.h	/^JMESSAGE(JERR_NO_IMAGE, "JPEG datastream contains no image")$/;"	e	enum:__anon40
JMESSAGE	.\jerror.h	/^JMESSAGE(JERR_NO_QUANT_TABLE, "Quantization table 0x%02x was not defined")$/;"	e	enum:__anon40
JMESSAGE	.\jerror.h	/^JMESSAGE(JERR_NO_SOI, "Not a JPEG file: starts with 0x%02x 0x%02x")$/;"	e	enum:__anon40
JMESSAGE	.\jerror.h	/^JMESSAGE(JERR_OUT_OF_MEMORY, "Insufficient memory (case %d)")$/;"	e	enum:__anon40
JMESSAGE	.\jerror.h	/^JMESSAGE(JERR_QUANT_COMPONENTS,$/;"	e	enum:__anon40
JMESSAGE	.\jerror.h	/^JMESSAGE(JERR_QUANT_FEW_COLORS, "Cannot quantize to fewer than %d colors")$/;"	e	enum:__anon40
JMESSAGE	.\jerror.h	/^JMESSAGE(JERR_QUANT_MANY_COLORS, "Cannot quantize to more than %d colors")$/;"	e	enum:__anon40
JMESSAGE	.\jerror.h	/^JMESSAGE(JERR_SOF_DUPLICATE, "Invalid JPEG file structure: two SOF markers")$/;"	e	enum:__anon40
JMESSAGE	.\jerror.h	/^JMESSAGE(JERR_SOF_NO_SOS, "Invalid JPEG file structure: missing SOS marker")$/;"	e	enum:__anon40
JMESSAGE	.\jerror.h	/^JMESSAGE(JERR_SOF_UNSUPPORTED, "Unsupported JPEG process: SOF type 0x%02x")$/;"	e	enum:__anon40
JMESSAGE	.\jerror.h	/^JMESSAGE(JERR_SOI_DUPLICATE, "Invalid JPEG file structure: two SOI markers")$/;"	e	enum:__anon40
JMESSAGE	.\jerror.h	/^JMESSAGE(JERR_SOS_NO_SOF, "Invalid JPEG file structure: SOS before SOF")$/;"	e	enum:__anon40
JMESSAGE	.\jerror.h	/^JMESSAGE(JERR_TFILE_CREATE, "Failed to create temporary file %s")$/;"	e	enum:__anon40
JMESSAGE	.\jerror.h	/^JMESSAGE(JERR_TFILE_READ, "Read failed on temporary file")$/;"	e	enum:__anon40
JMESSAGE	.\jerror.h	/^JMESSAGE(JERR_TFILE_SEEK, "Seek failed on temporary file")$/;"	e	enum:__anon40
JMESSAGE	.\jerror.h	/^JMESSAGE(JERR_TFILE_WRITE,$/;"	e	enum:__anon40
JMESSAGE	.\jerror.h	/^JMESSAGE(JERR_TOO_LITTLE_DATA, "Application transferred too few scanlines")$/;"	e	enum:__anon40
JMESSAGE	.\jerror.h	/^JMESSAGE(JERR_UNKNOWN_MARKER, "Unsupported marker type 0x%02x")$/;"	e	enum:__anon40
JMESSAGE	.\jerror.h	/^JMESSAGE(JERR_VIRTUAL_BUG, "Virtual array controller messed up")$/;"	e	enum:__anon40
JMESSAGE	.\jerror.h	/^JMESSAGE(JERR_WIDTH_OVERFLOW, "Image too wide for this implementation")$/;"	e	enum:__anon40
JMESSAGE	.\jerror.h	/^JMESSAGE(JERR_XMS_READ, "Read from XMS failed")$/;"	e	enum:__anon40
JMESSAGE	.\jerror.h	/^JMESSAGE(JERR_XMS_WRITE, "Write to XMS failed")$/;"	e	enum:__anon40
JMESSAGE	.\jerror.h	/^JMESSAGE(JMSG_COPYRIGHT, JCOPYRIGHT)$/;"	e	enum:__anon40
JMESSAGE	.\jerror.h	/^JMESSAGE(JMSG_NOMESSAGE, "Bogus message code %d") \/* Must be first entry! *\/$/;"	e	enum:__anon40
JMESSAGE	.\jerror.h	/^JMESSAGE(JMSG_VERSION, JVERSION)$/;"	e	enum:__anon40
JMESSAGE	.\jerror.h	/^JMESSAGE(JTRC_16BIT_TABLES,$/;"	e	enum:__anon40
JMESSAGE	.\jerror.h	/^JMESSAGE(JTRC_ADOBE,$/;"	e	enum:__anon40
JMESSAGE	.\jerror.h	/^JMESSAGE(JTRC_APP0, "Unknown APP0 marker (not JFIF), length %u")$/;"	e	enum:__anon40
JMESSAGE	.\jerror.h	/^JMESSAGE(JTRC_APP14, "Unknown APP14 marker (not Adobe), length %u")$/;"	e	enum:__anon40
JMESSAGE	.\jerror.h	/^JMESSAGE(JTRC_DAC, "Define Arithmetic Table 0x%02x: 0x%02x")$/;"	e	enum:__anon40
JMESSAGE	.\jerror.h	/^JMESSAGE(JTRC_DHT, "Define Huffman Table 0x%02x")$/;"	e	enum:__anon40
JMESSAGE	.\jerror.h	/^JMESSAGE(JTRC_DQT, "Define Quantization Table %d  precision %d")$/;"	e	enum:__anon40
JMESSAGE	.\jerror.h	/^JMESSAGE(JTRC_DRI, "Define Restart Interval %u")$/;"	e	enum:__anon40
JMESSAGE	.\jerror.h	/^JMESSAGE(JTRC_EMS_CLOSE, "Freed EMS handle %u")$/;"	e	enum:__anon40
JMESSAGE	.\jerror.h	/^JMESSAGE(JTRC_EMS_OPEN, "Obtained EMS handle %u")$/;"	e	enum:__anon40
JMESSAGE	.\jerror.h	/^JMESSAGE(JTRC_EOI, "End Of Image")$/;"	e	enum:__anon40
JMESSAGE	.\jerror.h	/^JMESSAGE(JTRC_HUFFBITS, "        %3d %3d %3d %3d %3d %3d %3d %3d")$/;"	e	enum:__anon40
JMESSAGE	.\jerror.h	/^JMESSAGE(JTRC_JFIF, "JFIF APP0 marker: version %d.%02d, density %dx%d  %d")$/;"	e	enum:__anon40
JMESSAGE	.\jerror.h	/^JMESSAGE(JTRC_JFIF_BADTHUMBNAILSIZE,$/;"	e	enum:__anon40
JMESSAGE	.\jerror.h	/^JMESSAGE(JTRC_JFIF_EXTENSION,$/;"	e	enum:__anon40
JMESSAGE	.\jerror.h	/^JMESSAGE(JTRC_JFIF_THUMBNAIL, "    with %d x %d thumbnail image")$/;"	e	enum:__anon40
JMESSAGE	.\jerror.h	/^JMESSAGE(JTRC_MISC_MARKER, "Miscellaneous marker 0x%02x, length %u")$/;"	e	enum:__anon40
JMESSAGE	.\jerror.h	/^JMESSAGE(JTRC_PARMLESS_MARKER, "Unexpected marker 0x%02x")$/;"	e	enum:__anon40
JMESSAGE	.\jerror.h	/^JMESSAGE(JTRC_QUANTVALS, "        %4u %4u %4u %4u %4u %4u %4u %4u")$/;"	e	enum:__anon40
JMESSAGE	.\jerror.h	/^JMESSAGE(JTRC_QUANT_3_NCOLORS, "Quantizing to %d = %d*%d*%d colors")$/;"	e	enum:__anon40
JMESSAGE	.\jerror.h	/^JMESSAGE(JTRC_QUANT_NCOLORS, "Quantizing to %d colors")$/;"	e	enum:__anon40
JMESSAGE	.\jerror.h	/^JMESSAGE(JTRC_QUANT_SELECTED, "Selected %d colors for quantization")$/;"	e	enum:__anon40
JMESSAGE	.\jerror.h	/^JMESSAGE(JTRC_RECOVERY_ACTION, "At marker 0x%02x, recovery action %d")$/;"	e	enum:__anon40
JMESSAGE	.\jerror.h	/^JMESSAGE(JTRC_RST, "RST%d")$/;"	e	enum:__anon40
JMESSAGE	.\jerror.h	/^JMESSAGE(JTRC_SMOOTH_NOTIMPL,$/;"	e	enum:__anon40
JMESSAGE	.\jerror.h	/^JMESSAGE(JTRC_SOF, "Start Of Frame 0x%02x: width=%u, height=%u, components=%d")$/;"	e	enum:__anon40
JMESSAGE	.\jerror.h	/^JMESSAGE(JTRC_SOF_COMPONENT, "    Component %d: %dhx%dv q=%d")$/;"	e	enum:__anon40
JMESSAGE	.\jerror.h	/^JMESSAGE(JTRC_SOI, "Start of Image")$/;"	e	enum:__anon40
JMESSAGE	.\jerror.h	/^JMESSAGE(JTRC_SOS, "Start Of Scan: %d components")$/;"	e	enum:__anon40
JMESSAGE	.\jerror.h	/^JMESSAGE(JTRC_SOS_COMPONENT, "    Component %d: dc=%d ac=%d")$/;"	e	enum:__anon40
JMESSAGE	.\jerror.h	/^JMESSAGE(JTRC_SOS_PARAMS, "  Ss=%d, Se=%d, Ah=%d, Al=%d")$/;"	e	enum:__anon40
JMESSAGE	.\jerror.h	/^JMESSAGE(JTRC_TFILE_CLOSE, "Closed temporary file %s")$/;"	e	enum:__anon40
JMESSAGE	.\jerror.h	/^JMESSAGE(JTRC_TFILE_OPEN, "Opened temporary file %s")$/;"	e	enum:__anon40
JMESSAGE	.\jerror.h	/^JMESSAGE(JTRC_THUMB_JPEG,$/;"	e	enum:__anon40
JMESSAGE	.\jerror.h	/^JMESSAGE(JTRC_THUMB_PALETTE,$/;"	e	enum:__anon40
JMESSAGE	.\jerror.h	/^JMESSAGE(JTRC_THUMB_RGB,$/;"	e	enum:__anon40
JMESSAGE	.\jerror.h	/^JMESSAGE(JTRC_UNKNOWN_IDS,$/;"	e	enum:__anon40
JMESSAGE	.\jerror.h	/^JMESSAGE(JTRC_XMS_CLOSE, "Freed XMS handle %u")$/;"	e	enum:__anon40
JMESSAGE	.\jerror.h	/^JMESSAGE(JTRC_XMS_OPEN, "Obtained XMS handle %u")$/;"	e	enum:__anon40
JMESSAGE	.\jerror.h	/^JMESSAGE(JWRN_ADOBE_XFORM, "Unknown Adobe color transform code %d")$/;"	e	enum:__anon40
JMESSAGE	.\jerror.h	/^JMESSAGE(JWRN_BOGUS_PROGRESSION,$/;"	e	enum:__anon40
JMESSAGE	.\jerror.h	/^JMESSAGE(JWRN_EXTRANEOUS_DATA,$/;"	e	enum:__anon40
JMESSAGE	.\jerror.h	/^JMESSAGE(JWRN_HIT_MARKER, "Corrupt JPEG data: premature end of data segment")$/;"	e	enum:__anon40
JMESSAGE	.\jerror.h	/^JMESSAGE(JWRN_HUFF_BAD_CODE, "Corrupt JPEG data: bad Huffman code")$/;"	e	enum:__anon40
JMESSAGE	.\jerror.h	/^JMESSAGE(JWRN_JFIF_MAJOR, "Warning: unknown JFIF revision number %d.%02d")$/;"	e	enum:__anon40
JMESSAGE	.\jerror.h	/^JMESSAGE(JWRN_JPEG_EOF, "Premature end of JPEG file")$/;"	e	enum:__anon40
JMESSAGE	.\jerror.h	/^JMESSAGE(JWRN_MUST_RESYNC,$/;"	e	enum:__anon40
JMESSAGE	.\jerror.h	/^JMESSAGE(JWRN_NOT_SEQUENTIAL, "Invalid SOS parameters for sequential JPEG")$/;"	e	enum:__anon40
JMESSAGE	.\jerror.h	/^JMESSAGE(JWRN_TOO_MUCH_DATA, "Application transferred too many scanlines")$/;"	e	enum:__anon40
JMESSAGE	.\jerror.h	195;"	d
JMESSAGE	.\jerror.h	27;"	d
JMESSAGE	.\jerror.h	35;"	d
JMETHOD	.\jcsample.c	/^typedef JMETHOD(void, downsample1_ptr,$/;"	t	file:
JMETHOD	.\jdct.h	/^typedef JMETHOD(void, float_DCT_method_ptr, (FAST_FLOAT * data));$/;"	t
JMETHOD	.\jdct.h	/^typedef JMETHOD(void, forward_DCT_method_ptr, (DCTELEM * data));$/;"	t
JMETHOD	.\jdsample.c	/^typedef JMETHOD(void, upsample1_ptr,$/;"	t	file:
JMETHOD	.\jmorecfg.h	200;"	d
JMETHOD	.\jmorecfg.h	202;"	d
JMETHOD	.\jpegint.h	/^typedef JMETHOD(void, inverse_DCT_method_ptr,$/;"	t
JMETHOD	.\jpeglib.h	/^typedef JMETHOD(boolean, jpeg_marker_parser_method, (j_decompress_ptr cinfo));$/;"	t
JMSG_LASTADDONCODE	.\cderror.h	/^  JMSG_LASTADDONCODE$/;"	e	enum:__anon1
JMSG_LASTMSGCODE	.\jerror.h	/^  JMSG_LASTMSGCODE$/;"	e	enum:__anon40
JMSG_LENGTH_MAX	.\jpeglib.h	652;"	d
JMSG_STR_PARM_MAX	.\jpeglib.h	660;"	d
JOCTET	.\jmorecfg.h	/^typedef char JOCTET;$/;"	t
JOCTET	.\jmorecfg.h	/^typedef unsigned char JOCTET;$/;"	t
JPEGLIB_H	.\jpeglib.h	14;"	d
JPEG_APP0	.\jpeglib.h	1047;"	d
JPEG_CJPEG_DJPEG	.\cdjpeg.h	12;"	d
JPEG_CJPEG_DJPEG	.\rdjpgcom.c	14;"	d	file:
JPEG_CJPEG_DJPEG	.\wrjpgcom.c	14;"	d	file:
JPEG_COM	.\jpeglib.h	1048;"	d
JPEG_EOI	.\jpeglib.h	1046;"	d
JPEG_HEADER_OK	.\jpeglib.h	966;"	d
JPEG_HEADER_TABLES_ONLY	.\jpeglib.h	967;"	d
JPEG_INTERNALS	.\jcapimin.c	19;"	d	file:
JPEG_INTERNALS	.\jcapistd.c	17;"	d	file:
JPEG_INTERNALS	.\jccoefct.c	13;"	d	file:
JPEG_INTERNALS	.\jccolor.c	11;"	d	file:
JPEG_INTERNALS	.\jcdctmgr.c	14;"	d	file:
JPEG_INTERNALS	.\jchuff.c	17;"	d	file:
JPEG_INTERNALS	.\jcinit.c	18;"	d	file:
JPEG_INTERNALS	.\jcmainct.c	13;"	d	file:
JPEG_INTERNALS	.\jcmarker.c	11;"	d	file:
JPEG_INTERNALS	.\jcmaster.c	14;"	d	file:
JPEG_INTERNALS	.\jcomapi.c	12;"	d	file:
JPEG_INTERNALS	.\jcparam.c	13;"	d	file:
JPEG_INTERNALS	.\jcphuff.c	15;"	d	file:
JPEG_INTERNALS	.\jcprepct.c	17;"	d	file:
JPEG_INTERNALS	.\jcsample.c	48;"	d	file:
JPEG_INTERNALS	.\jctrans.c	13;"	d	file:
JPEG_INTERNALS	.\jdapimin.c	19;"	d	file:
JPEG_INTERNALS	.\jdapistd.c	17;"	d	file:
JPEG_INTERNALS	.\jdcoefct.c	17;"	d	file:
JPEG_INTERNALS	.\jdcolor.c	11;"	d	file:
JPEG_INTERNALS	.\jddctmgr.c	18;"	d	file:
JPEG_INTERNALS	.\jdhuff.c	17;"	d	file:
JPEG_INTERNALS	.\jdinput.c	14;"	d	file:
JPEG_INTERNALS	.\jdmainct.c	16;"	d	file:
JPEG_INTERNALS	.\jdmarker.c	15;"	d	file:
JPEG_INTERNALS	.\jdmaster.c	14;"	d	file:
JPEG_INTERNALS	.\jdmerge.c	35;"	d	file:
JPEG_INTERNALS	.\jdphuff.c	17;"	d	file:
JPEG_INTERNALS	.\jdpostct.c	19;"	d	file:
JPEG_INTERNALS	.\jdsample.c	21;"	d	file:
JPEG_INTERNALS	.\jdtrans.c	13;"	d	file:
JPEG_INTERNALS	.\jfdctflt.c	37;"	d	file:
JPEG_INTERNALS	.\jfdctfst.c	33;"	d	file:
JPEG_INTERNALS	.\jfdctint.c	26;"	d	file:
JPEG_INTERNALS	.\jidctflt.c	39;"	d	file:
JPEG_INTERNALS	.\jidctfst.c	35;"	d	file:
JPEG_INTERNALS	.\jidctint.c	28;"	d	file:
JPEG_INTERNALS	.\jidctred.c	23;"	d	file:
JPEG_INTERNALS	.\jmemansi.c	15;"	d	file:
JPEG_INTERNALS	.\jmemdos.c	42;"	d	file:
JPEG_INTERNALS	.\jmemmac.c	52;"	d	file:
JPEG_INTERNALS	.\jmemmgr.c	27;"	d	file:
JPEG_INTERNALS	.\jmemname.c	15;"	d	file:
JPEG_INTERNALS	.\jmemnobs.c	18;"	d	file:
JPEG_INTERNALS	.\jquant1.c	13;"	d	file:
JPEG_INTERNALS	.\jquant2.c	20;"	d	file:
JPEG_INTERNALS	.\jutils.c	14;"	d	file:
JPEG_INTERNALS	.\transupp.c	18;"	d	file:
JPEG_INTERNAL_OPTIONS	.\cdjpeg.h	13;"	d
JPEG_INTERNAL_OPTIONS	.\jmorecfg.h	245;"	d
JPEG_LIB_VERSION	.\jpeglib.h	33;"	d
JPEG_MARKER	.\jcmarker.c	/^} JPEG_MARKER;$/;"	t	typeref:enum:__anon11	file:
JPEG_MARKER	.\jdmarker.c	/^} JPEG_MARKER;$/;"	t	typeref:enum:__anon32	file:
JPEG_MAX_DIMENSION	.\jmorecfg.h	173;"	d
JPEG_REACHED_EOI	.\jpeglib.h	997;"	d
JPEG_REACHED_SOS	.\jpeglib.h	996;"	d
JPEG_ROW_COMPLETED	.\jpeglib.h	998;"	d
JPEG_RST0	.\jpeglib.h	1045;"	d
JPEG_SCAN_COMPLETED	.\jpeglib.h	999;"	d
JPEG_SUSPENDED	.\jpeglib.h	965;"	d
JPOOL_IMAGE	.\jpeglib.h	749;"	d
JPOOL_NUMPOOLS	.\jpeglib.h	750;"	d
JPOOL_PERMANENT	.\jpeglib.h	748;"	d
JPP	.\jpeglib.h	818;"	d
JPP	.\jpeglib.h	820;"	d
JQUANT_TBL	.\jpeglib.h	/^} JQUANT_TBL;$/;"	t	typeref:struct:__anon51
JSAMPARRAY	.\jpeglib.h	/^typedef JSAMPROW *JSAMPARRAY;	\/* ptr to some rows (a 2-D sample array) *\/$/;"	t
JSAMPIMAGE	.\jpeglib.h	/^typedef JSAMPARRAY *JSAMPIMAGE;	\/* a 3-D sample array: top index is color *\/$/;"	t
JSAMPLE	.\jmorecfg.h	/^typedef char JSAMPLE;$/;"	t
JSAMPLE	.\jmorecfg.h	/^typedef short JSAMPLE;$/;"	t
JSAMPLE	.\jmorecfg.h	/^typedef unsigned char JSAMPLE;$/;"	t
JSAMPROW	.\jpeglib.h	/^typedef JSAMPLE FAR *JSAMPROW;	\/* ptr to one image row of pixel samples. *\/$/;"	t
JVERSION	.\jversion.h	12;"	d
JXFORM_CODE	.\transupp.h	/^} JXFORM_CODE;$/;"	t	typeref:enum:__anon64
JXFORM_FLIP_H	.\transupp.h	/^	JXFORM_FLIP_H,		\/* horizontal flip *\/$/;"	e	enum:__anon64
JXFORM_FLIP_V	.\transupp.h	/^	JXFORM_FLIP_V,		\/* vertical flip *\/$/;"	e	enum:__anon64
JXFORM_NONE	.\transupp.h	/^	JXFORM_NONE,		\/* no transformation *\/$/;"	e	enum:__anon64
JXFORM_ROT_180	.\transupp.h	/^	JXFORM_ROT_180,		\/* 180-degree rotation *\/$/;"	e	enum:__anon64
JXFORM_ROT_270	.\transupp.h	/^	JXFORM_ROT_270		\/* 270-degree clockwise (or 90 ccw) *\/$/;"	e	enum:__anon64
JXFORM_ROT_90	.\transupp.h	/^	JXFORM_ROT_90,		\/* 90-degree clockwise rotation *\/$/;"	e	enum:__anon64
JXFORM_TRANSPOSE	.\transupp.h	/^	JXFORM_TRANSPOSE,	\/* transpose across UL-to-LR axis *\/$/;"	e	enum:__anon64
JXFORM_TRANSVERSE	.\transupp.h	/^	JXFORM_TRANSVERSE,	\/* transpose across UR-to-LL axis *\/$/;"	e	enum:__anon64
J_BUF_MODE	.\jpegint.h	/^} J_BUF_MODE;$/;"	t	typeref:enum:__anon50
J_COLOR_SPACE	.\jpeglib.h	/^} J_COLOR_SPACE;$/;"	t	typeref:enum:__anon55
J_DCT_METHOD	.\jpeglib.h	/^} J_DCT_METHOD;$/;"	t	typeref:enum:__anon56
J_DITHER_MODE	.\jpeglib.h	/^} J_DITHER_MODE;$/;"	t	typeref:enum:__anon57
J_MESSAGE_CODE	.\jerror.h	/^} J_MESSAGE_CODE;$/;"	t	typeref:enum:__anon40
LOBYTE	.\jmemdos.c	487;"	d	file:
LOCAL	.\cjpeg.c	/^LOCAL(cjpeg_source_ptr)$/;"	f
LOCAL	.\jchuff.c	/^LOCAL(boolean)$/;"	f
LOCAL	.\jdapistd.c	/^LOCAL(boolean)$/;"	f
LOCAL	.\jdcoefct.c	/^LOCAL(boolean)$/;"	f
LOCAL	.\jdhuff.c	/^LOCAL(boolean)$/;"	f
LOCAL	.\jdmarker.c	/^LOCAL(boolean)$/;"	f
LOCAL	.\jdmaster.c	/^LOCAL(boolean)$/;"	f
LOCAL	.\jdphuff.c	/^LOCAL(boolean)$/;"	f
LOCAL	.\jmemdos.c	/^LOCAL(boolean)$/;"	f
LOCAL	.\jmorecfg.h	186;"	d
LOCAL	.\jquant1.c	/^LOCAL(ODITHER_MATRIX_PTR)$/;"	f
LOCAL	.\jquant2.c	/^LOCAL(boxptr)$/;"	f
LOCAL	.\rdswitch.c	/^LOCAL(boolean)$/;"	f
LOCFSERROR	.\jquant1.c	/^typedef INT32 LOCFSERROR;	\/* be sure calculation temps are big enough *\/$/;"	t	file:
LOCFSERROR	.\jquant1.c	/^typedef int LOCFSERROR;		\/* use 'int' for calculation temps *\/$/;"	t	file:
LOCFSERROR	.\jquant2.c	/^typedef INT32 LOCFSERROR;	\/* be sure calculation temps are big enough *\/$/;"	t	file:
LOCFSERROR	.\jquant2.c	/^typedef int LOCFSERROR;		\/* use 'int' for calculation temps *\/$/;"	t	file:
MAKESTMT	.\jerror.h	235;"	d
MAKE_BYTE_AVAIL	.\jdmarker.c	138;"	d	file:
MAPPEDGRAY	.\rdrle.c	/^  { GRAYSCALE, MAPPEDGRAY, PSEUDOCOLOR, TRUECOLOR, DIRECTCOLOR } rle_kind;$/;"	e	enum:__anon63	file:
MAX	.\jpegint.h	266;"	d
MAX	.\jpegint.h	267;"	d
MAXCODE	.\wrgif.c	72;"	d	file:
MAXJSAMPLE	.\jmorecfg.h	73;"	d
MAXJSAMPLE	.\jmorecfg.h	87;"	d
MAXNUMCOLORS	.\jquant2.c	127;"	d	file:
MAX_AH_AL	.\jcmaster.c	196;"	d	file:
MAX_ALLOC_CHUNK	.\jmemsys.h	78;"	d
MAX_CLEN	.\jchuff.c	707;"	d	file:
MAX_COEF_BITS	.\jchuff.h	20;"	d
MAX_COEF_BITS	.\jchuff.h	22;"	d
MAX_COMPONENTS	.\jmorecfg.h	35;"	d
MAX_COMPS_IN_SCAN	.\jpeglib.h	46;"	d
MAX_COM_LENGTH	.\wrjpgcom.c	66;"	d	file:
MAX_CORR_BITS	.\jcphuff.c	70;"	d	file:
MAX_Q_COMPS	.\jquant1.c	140;"	d	file:
MAX_SAMP_FACTOR	.\jpeglib.h	47;"	d
MAX_SCANS	.\rdswitch.c	179;"	d	file:
MCU_blocks	.\jpeglib.h	/^  int MCU_blocks;		\/* MCU_width * MCU_height *\/$/;"	m	struct:__anon53
MCU_buffer	.\jccoefct.c	/^  JBLOCKROW MCU_buffer[C_MAX_BLOCKS_IN_MCU];$/;"	m	struct:__anon3	file:
MCU_buffer	.\jdcoefct.c	/^  JBLOCKROW MCU_buffer[D_MAX_BLOCKS_IN_MCU];$/;"	m	struct:__anon21	file:
MCU_ctr	.\jdcoefct.c	/^  JDIMENSION MCU_ctr;		\/* counts MCUs processed in current row *\/$/;"	m	struct:__anon21	file:
MCU_height	.\jpeglib.h	/^  int MCU_height;		\/* number of blocks per MCU, vertically *\/$/;"	m	struct:__anon53
MCU_membership	.\jpeglib.h	/^  int MCU_membership[C_MAX_BLOCKS_IN_MCU];$/;"	m	struct:jpeg_compress_struct
MCU_membership	.\jpeglib.h	/^  int MCU_membership[D_MAX_BLOCKS_IN_MCU];$/;"	m	struct:jpeg_decompress_struct
MCU_rows_in_scan	.\jpeglib.h	/^  JDIMENSION MCU_rows_in_scan;	\/* # of MCU rows in the image *\/$/;"	m	struct:jpeg_compress_struct
MCU_rows_in_scan	.\jpeglib.h	/^  JDIMENSION MCU_rows_in_scan;	\/* # of MCU rows in the image *\/$/;"	m	struct:jpeg_decompress_struct
MCU_rows_per_iMCU_row	.\jccoefct.c	/^  int MCU_rows_per_iMCU_row;	\/* number of such rows needed *\/$/;"	m	struct:__anon3	file:
MCU_rows_per_iMCU_row	.\jctrans.c	/^  int MCU_rows_per_iMCU_row;	\/* number of such rows needed *\/$/;"	m	struct:__anon18	file:
MCU_rows_per_iMCU_row	.\jdcoefct.c	/^  int MCU_rows_per_iMCU_row;	\/* number of such rows needed *\/$/;"	m	struct:__anon21	file:
MCU_sample_width	.\jpeglib.h	/^  int MCU_sample_width;		\/* MCU width in samples, MCU_width*DCT_scaled_size *\/$/;"	m	struct:__anon53
MCU_vert_offset	.\jccoefct.c	/^  int MCU_vert_offset;		\/* counts MCU rows within iMCU row *\/$/;"	m	struct:__anon3	file:
MCU_vert_offset	.\jctrans.c	/^  int MCU_vert_offset;		\/* counts MCU rows within iMCU row *\/$/;"	m	struct:__anon18	file:
MCU_vert_offset	.\jdcoefct.c	/^  int MCU_vert_offset;		\/* counts MCU rows within iMCU row *\/$/;"	m	struct:__anon21	file:
MCU_width	.\jpeglib.h	/^  int MCU_width;		\/* number of blocks per MCU, horizontally *\/$/;"	m	struct:__anon53
MCUs_per_row	.\jpeglib.h	/^  JDIMENSION MCUs_per_row;	\/* # of MCUs across the image *\/$/;"	m	struct:jpeg_compress_struct
MCUs_per_row	.\jpeglib.h	/^  JDIMENSION MCUs_per_row;	\/* # of MCUs across the image *\/$/;"	m	struct:jpeg_decompress_struct
MEMCOPY	.\jinclude.h	62;"	d
MEMCOPY	.\jinclude.h	68;"	d
MEMZERO	.\jinclude.h	61;"	d
MEMZERO	.\jinclude.h	67;"	d
METHODDEF	.\djpeg.c	/^METHODDEF(boolean)$/;"	f
METHODDEF	.\jccoefct.c	/^METHODDEF(boolean)$/;"	f
METHODDEF	.\jchuff.c	/^METHODDEF(boolean)$/;"	f
METHODDEF	.\jcphuff.c	/^METHODDEF(boolean)$/;"	f
METHODDEF	.\jctrans.c	/^METHODDEF(boolean)$/;"	f
METHODDEF	.\jdatadst.c	/^METHODDEF(boolean)$/;"	f
METHODDEF	.\jdatasrc.c	/^METHODDEF(boolean)$/;"	f
METHODDEF	.\jdhuff.c	/^METHODDEF(boolean)$/;"	f
METHODDEF	.\jdmarker.c	/^METHODDEF(boolean)$/;"	f
METHODDEF	.\jdphuff.c	/^METHODDEF(boolean)$/;"	f
METHODDEF	.\jmemmgr.c	/^METHODDEF(JBLOCKARRAY)$/;"	f
METHODDEF	.\jmemmgr.c	/^METHODDEF(JSAMPARRAY)$/;"	f
METHODDEF	.\jmemmgr.c	/^METHODDEF(jvirt_barray_ptr)$/;"	f
METHODDEF	.\jmemmgr.c	/^METHODDEF(jvirt_sarray_ptr)$/;"	f
METHODDEF	.\jmorecfg.h	184;"	d
METHODDEF	.\rdbmp.c	/^METHODDEF(JDIMENSION)$/;"	f
METHODDEF	.\rdppm.c	/^METHODDEF(JDIMENSION)$/;"	f
METHODDEF	.\rdrle.c	/^METHODDEF(JDIMENSION)$/;"	f
METHODDEF	.\rdtarga.c	/^METHODDEF(JDIMENSION)$/;"	f
MIN	.\jpegint.h	268;"	d
MIN	.\jpegint.h	269;"	d
MIN_GET_BITS	.\jdhuff.c	285;"	d	file:
MIN_GET_BITS	.\jdhuff.c	287;"	d	file:
MIN_SLOP	.\jmemmgr.c	253;"	d	file:
MULTIPLIER	.\jmorecfg.h	343;"	d
MULTIPLY	.\jfdctfst.c	106;"	d	file:
MULTIPLY	.\jfdctint.c	129;"	d	file:
MULTIPLY	.\jidctfst.c	119;"	d	file:
MULTIPLY	.\jidctint.c	129;"	d	file:
MULTIPLY	.\jidctred.c	98;"	d	file:
MULTIPLY16C16	.\jdct.h	158;"	d
MULTIPLY16C16	.\jdct.h	161;"	d
MULTIPLY16C16	.\jdct.h	165;"	d
MULTIPLY16V16	.\jdct.h	171;"	d
MULTIPLY16V16	.\jdct.h	175;"	d
M_APP0	.\jcmarker.c	/^  M_APP0  = 0xe0,$/;"	e	enum:__anon11	file:
M_APP0	.\jdmarker.c	/^  M_APP0  = 0xe0,$/;"	e	enum:__anon32	file:
M_APP0	.\rdjpgcom.c	122;"	d	file:
M_APP1	.\jcmarker.c	/^  M_APP1  = 0xe1,$/;"	e	enum:__anon11	file:
M_APP1	.\jdmarker.c	/^  M_APP1  = 0xe1,$/;"	e	enum:__anon32	file:
M_APP10	.\jcmarker.c	/^  M_APP10 = 0xea,$/;"	e	enum:__anon11	file:
M_APP10	.\jdmarker.c	/^  M_APP10 = 0xea,$/;"	e	enum:__anon32	file:
M_APP11	.\jcmarker.c	/^  M_APP11 = 0xeb,$/;"	e	enum:__anon11	file:
M_APP11	.\jdmarker.c	/^  M_APP11 = 0xeb,$/;"	e	enum:__anon32	file:
M_APP12	.\jcmarker.c	/^  M_APP12 = 0xec,$/;"	e	enum:__anon11	file:
M_APP12	.\jdmarker.c	/^  M_APP12 = 0xec,$/;"	e	enum:__anon32	file:
M_APP12	.\rdjpgcom.c	123;"	d	file:
M_APP13	.\jcmarker.c	/^  M_APP13 = 0xed,$/;"	e	enum:__anon11	file:
M_APP13	.\jdmarker.c	/^  M_APP13 = 0xed,$/;"	e	enum:__anon32	file:
M_APP14	.\jcmarker.c	/^  M_APP14 = 0xee,$/;"	e	enum:__anon11	file:
M_APP14	.\jdmarker.c	/^  M_APP14 = 0xee,$/;"	e	enum:__anon32	file:
M_APP15	.\jcmarker.c	/^  M_APP15 = 0xef,$/;"	e	enum:__anon11	file:
M_APP15	.\jdmarker.c	/^  M_APP15 = 0xef,$/;"	e	enum:__anon32	file:
M_APP2	.\jcmarker.c	/^  M_APP2  = 0xe2,$/;"	e	enum:__anon11	file:
M_APP2	.\jdmarker.c	/^  M_APP2  = 0xe2,$/;"	e	enum:__anon32	file:
M_APP3	.\jcmarker.c	/^  M_APP3  = 0xe3,$/;"	e	enum:__anon11	file:
M_APP3	.\jdmarker.c	/^  M_APP3  = 0xe3,$/;"	e	enum:__anon32	file:
M_APP4	.\jcmarker.c	/^  M_APP4  = 0xe4,$/;"	e	enum:__anon11	file:
M_APP4	.\jdmarker.c	/^  M_APP4  = 0xe4,$/;"	e	enum:__anon32	file:
M_APP5	.\jcmarker.c	/^  M_APP5  = 0xe5,$/;"	e	enum:__anon11	file:
M_APP5	.\jdmarker.c	/^  M_APP5  = 0xe5,$/;"	e	enum:__anon32	file:
M_APP6	.\jcmarker.c	/^  M_APP6  = 0xe6,$/;"	e	enum:__anon11	file:
M_APP6	.\jdmarker.c	/^  M_APP6  = 0xe6,$/;"	e	enum:__anon32	file:
M_APP7	.\jcmarker.c	/^  M_APP7  = 0xe7,$/;"	e	enum:__anon11	file:
M_APP7	.\jdmarker.c	/^  M_APP7  = 0xe7,$/;"	e	enum:__anon32	file:
M_APP8	.\jcmarker.c	/^  M_APP8  = 0xe8,$/;"	e	enum:__anon11	file:
M_APP8	.\jdmarker.c	/^  M_APP8  = 0xe8,$/;"	e	enum:__anon32	file:
M_APP9	.\jcmarker.c	/^  M_APP9  = 0xe9,$/;"	e	enum:__anon11	file:
M_APP9	.\jdmarker.c	/^  M_APP9  = 0xe9,$/;"	e	enum:__anon32	file:
M_COM	.\jcmarker.c	/^  M_COM   = 0xfe,$/;"	e	enum:__anon11	file:
M_COM	.\jdmarker.c	/^  M_COM   = 0xfe,$/;"	e	enum:__anon32	file:
M_COM	.\rdjpgcom.c	124;"	d	file:
M_COM	.\wrjpgcom.c	173;"	d	file:
M_DAC	.\jcmarker.c	/^  M_DAC   = 0xcc,$/;"	e	enum:__anon11	file:
M_DAC	.\jdmarker.c	/^  M_DAC   = 0xcc,$/;"	e	enum:__anon32	file:
M_DHP	.\jcmarker.c	/^  M_DHP   = 0xde,$/;"	e	enum:__anon11	file:
M_DHP	.\jdmarker.c	/^  M_DHP   = 0xde,$/;"	e	enum:__anon32	file:
M_DHT	.\jcmarker.c	/^  M_DHT   = 0xc4,$/;"	e	enum:__anon11	file:
M_DHT	.\jdmarker.c	/^  M_DHT   = 0xc4,$/;"	e	enum:__anon32	file:
M_DNL	.\jcmarker.c	/^  M_DNL   = 0xdc,$/;"	e	enum:__anon11	file:
M_DNL	.\jdmarker.c	/^  M_DNL   = 0xdc,$/;"	e	enum:__anon32	file:
M_DQT	.\jcmarker.c	/^  M_DQT   = 0xdb,$/;"	e	enum:__anon11	file:
M_DQT	.\jdmarker.c	/^  M_DQT   = 0xdb,$/;"	e	enum:__anon32	file:
M_DRI	.\jcmarker.c	/^  M_DRI   = 0xdd,$/;"	e	enum:__anon11	file:
M_DRI	.\jdmarker.c	/^  M_DRI   = 0xdd,$/;"	e	enum:__anon32	file:
M_EOI	.\jcmarker.c	/^  M_EOI   = 0xd9,$/;"	e	enum:__anon11	file:
M_EOI	.\jdmarker.c	/^  M_EOI   = 0xd9,$/;"	e	enum:__anon32	file:
M_EOI	.\rdjpgcom.c	120;"	d	file:
M_EOI	.\wrjpgcom.c	171;"	d	file:
M_ERROR	.\jcmarker.c	/^  M_ERROR = 0x100$/;"	e	enum:__anon11	file:
M_ERROR	.\jdmarker.c	/^  M_ERROR = 0x100$/;"	e	enum:__anon32	file:
M_EXP	.\jcmarker.c	/^  M_EXP   = 0xdf,$/;"	e	enum:__anon11	file:
M_EXP	.\jdmarker.c	/^  M_EXP   = 0xdf,$/;"	e	enum:__anon32	file:
M_JPG	.\jcmarker.c	/^  M_JPG   = 0xc8,$/;"	e	enum:__anon11	file:
M_JPG	.\jdmarker.c	/^  M_JPG   = 0xc8,$/;"	e	enum:__anon32	file:
M_JPG0	.\jcmarker.c	/^  M_JPG0  = 0xf0,$/;"	e	enum:__anon11	file:
M_JPG0	.\jdmarker.c	/^  M_JPG0  = 0xf0,$/;"	e	enum:__anon32	file:
M_JPG13	.\jcmarker.c	/^  M_JPG13 = 0xfd,$/;"	e	enum:__anon11	file:
M_JPG13	.\jdmarker.c	/^  M_JPG13 = 0xfd,$/;"	e	enum:__anon32	file:
M_RST0	.\jcmarker.c	/^  M_RST0  = 0xd0,$/;"	e	enum:__anon11	file:
M_RST0	.\jdmarker.c	/^  M_RST0  = 0xd0,$/;"	e	enum:__anon32	file:
M_RST1	.\jcmarker.c	/^  M_RST1  = 0xd1,$/;"	e	enum:__anon11	file:
M_RST1	.\jdmarker.c	/^  M_RST1  = 0xd1,$/;"	e	enum:__anon32	file:
M_RST2	.\jcmarker.c	/^  M_RST2  = 0xd2,$/;"	e	enum:__anon11	file:
M_RST2	.\jdmarker.c	/^  M_RST2  = 0xd2,$/;"	e	enum:__anon32	file:
M_RST3	.\jcmarker.c	/^  M_RST3  = 0xd3,$/;"	e	enum:__anon11	file:
M_RST3	.\jdmarker.c	/^  M_RST3  = 0xd3,$/;"	e	enum:__anon32	file:
M_RST4	.\jcmarker.c	/^  M_RST4  = 0xd4,$/;"	e	enum:__anon11	file:
M_RST4	.\jdmarker.c	/^  M_RST4  = 0xd4,$/;"	e	enum:__anon32	file:
M_RST5	.\jcmarker.c	/^  M_RST5  = 0xd5,$/;"	e	enum:__anon11	file:
M_RST5	.\jdmarker.c	/^  M_RST5  = 0xd5,$/;"	e	enum:__anon32	file:
M_RST6	.\jcmarker.c	/^  M_RST6  = 0xd6,$/;"	e	enum:__anon11	file:
M_RST6	.\jdmarker.c	/^  M_RST6  = 0xd6,$/;"	e	enum:__anon32	file:
M_RST7	.\jcmarker.c	/^  M_RST7  = 0xd7,$/;"	e	enum:__anon11	file:
M_RST7	.\jdmarker.c	/^  M_RST7  = 0xd7,$/;"	e	enum:__anon32	file:
M_SOF0	.\jcmarker.c	/^  M_SOF0  = 0xc0,$/;"	e	enum:__anon11	file:
M_SOF0	.\jdmarker.c	/^  M_SOF0  = 0xc0,$/;"	e	enum:__anon32	file:
M_SOF0	.\rdjpgcom.c	106;"	d	file:
M_SOF0	.\wrjpgcom.c	157;"	d	file:
M_SOF1	.\jcmarker.c	/^  M_SOF1  = 0xc1,$/;"	e	enum:__anon11	file:
M_SOF1	.\jdmarker.c	/^  M_SOF1  = 0xc1,$/;"	e	enum:__anon32	file:
M_SOF1	.\rdjpgcom.c	107;"	d	file:
M_SOF1	.\wrjpgcom.c	158;"	d	file:
M_SOF10	.\jcmarker.c	/^  M_SOF10 = 0xca,$/;"	e	enum:__anon11	file:
M_SOF10	.\jdmarker.c	/^  M_SOF10 = 0xca,$/;"	e	enum:__anon32	file:
M_SOF10	.\rdjpgcom.c	114;"	d	file:
M_SOF10	.\wrjpgcom.c	165;"	d	file:
M_SOF11	.\jcmarker.c	/^  M_SOF11 = 0xcb,$/;"	e	enum:__anon11	file:
M_SOF11	.\jdmarker.c	/^  M_SOF11 = 0xcb,$/;"	e	enum:__anon32	file:
M_SOF11	.\rdjpgcom.c	115;"	d	file:
M_SOF11	.\wrjpgcom.c	166;"	d	file:
M_SOF13	.\jcmarker.c	/^  M_SOF13 = 0xcd,$/;"	e	enum:__anon11	file:
M_SOF13	.\jdmarker.c	/^  M_SOF13 = 0xcd,$/;"	e	enum:__anon32	file:
M_SOF13	.\rdjpgcom.c	116;"	d	file:
M_SOF13	.\wrjpgcom.c	167;"	d	file:
M_SOF14	.\jcmarker.c	/^  M_SOF14 = 0xce,$/;"	e	enum:__anon11	file:
M_SOF14	.\jdmarker.c	/^  M_SOF14 = 0xce,$/;"	e	enum:__anon32	file:
M_SOF14	.\rdjpgcom.c	117;"	d	file:
M_SOF14	.\wrjpgcom.c	168;"	d	file:
M_SOF15	.\jcmarker.c	/^  M_SOF15 = 0xcf,$/;"	e	enum:__anon11	file:
M_SOF15	.\jdmarker.c	/^  M_SOF15 = 0xcf,$/;"	e	enum:__anon32	file:
M_SOF15	.\rdjpgcom.c	118;"	d	file:
M_SOF15	.\wrjpgcom.c	169;"	d	file:
M_SOF2	.\jcmarker.c	/^  M_SOF2  = 0xc2,$/;"	e	enum:__anon11	file:
M_SOF2	.\jdmarker.c	/^  M_SOF2  = 0xc2,$/;"	e	enum:__anon32	file:
M_SOF2	.\rdjpgcom.c	108;"	d	file:
M_SOF2	.\wrjpgcom.c	159;"	d	file:
M_SOF3	.\jcmarker.c	/^  M_SOF3  = 0xc3,$/;"	e	enum:__anon11	file:
M_SOF3	.\jdmarker.c	/^  M_SOF3  = 0xc3,$/;"	e	enum:__anon32	file:
M_SOF3	.\rdjpgcom.c	109;"	d	file:
M_SOF3	.\wrjpgcom.c	160;"	d	file:
M_SOF5	.\jcmarker.c	/^  M_SOF5  = 0xc5,$/;"	e	enum:__anon11	file:
M_SOF5	.\jdmarker.c	/^  M_SOF5  = 0xc5,$/;"	e	enum:__anon32	file:
M_SOF5	.\rdjpgcom.c	110;"	d	file:
M_SOF5	.\wrjpgcom.c	161;"	d	file:
M_SOF6	.\jcmarker.c	/^  M_SOF6  = 0xc6,$/;"	e	enum:__anon11	file:
M_SOF6	.\jdmarker.c	/^  M_SOF6  = 0xc6,$/;"	e	enum:__anon32	file:
M_SOF6	.\rdjpgcom.c	111;"	d	file:
M_SOF6	.\wrjpgcom.c	162;"	d	file:
M_SOF7	.\jcmarker.c	/^  M_SOF7  = 0xc7,$/;"	e	enum:__anon11	file:
M_SOF7	.\jdmarker.c	/^  M_SOF7  = 0xc7,$/;"	e	enum:__anon32	file:
M_SOF7	.\rdjpgcom.c	112;"	d	file:
M_SOF7	.\wrjpgcom.c	163;"	d	file:
M_SOF9	.\jcmarker.c	/^  M_SOF9  = 0xc9,$/;"	e	enum:__anon11	file:
M_SOF9	.\jdmarker.c	/^  M_SOF9  = 0xc9,$/;"	e	enum:__anon32	file:
M_SOF9	.\rdjpgcom.c	113;"	d	file:
M_SOF9	.\wrjpgcom.c	164;"	d	file:
M_SOI	.\jcmarker.c	/^  M_SOI   = 0xd8,$/;"	e	enum:__anon11	file:
M_SOI	.\jdmarker.c	/^  M_SOI   = 0xd8,$/;"	e	enum:__anon32	file:
M_SOI	.\rdjpgcom.c	119;"	d	file:
M_SOI	.\wrjpgcom.c	170;"	d	file:
M_SOS	.\jcmarker.c	/^  M_SOS   = 0xda,$/;"	e	enum:__anon11	file:
M_SOS	.\jdmarker.c	/^  M_SOS   = 0xda,$/;"	e	enum:__anon32	file:
M_SOS	.\rdjpgcom.c	121;"	d	file:
M_SOS	.\wrjpgcom.c	172;"	d	file:
M_TEM	.\jcmarker.c	/^  M_TEM   = 0x01,$/;"	e	enum:__anon11	file:
M_TEM	.\jdmarker.c	/^  M_TEM   = 0x01,$/;"	e	enum:__anon32	file:
NEED_BSD_STRINGS	.\ckconfig.c	53;"	d	file:
NEED_SHORT_EXTERNAL_NAMES	.\ckconfig.c	213;"	d	file:
NEED_SPECIAL_INCLUDE	.\ckconfig.c	84;"	d	file:
NEED_SYS_TYPES_H	.\ckconfig.c	66;"	d	file:
NEXTBYTE	.\rdjpgcom.c	64;"	d	file:
NEXTBYTE	.\wrjpgcom.c	78;"	d	file:
NUM_ARITH_TBLS	.\jpeglib.h	45;"	d
NUM_HUFF_TBLS	.\jpeglib.h	44;"	d
NUM_QUANT_TBLS	.\jpeglib.h	43;"	d
Ncolors	.\jquant1.c	/^  int Ncolors[MAX_Q_COMPS];	\/* # of values alloced to each component *\/$/;"	m	struct:__anon59	file:
ODD	.\jmemdos.c	329;"	d	file:
ODITHER_CELLS	.\jquant1.c	73;"	d	file:
ODITHER_MASK	.\jquant1.c	74;"	d	file:
ODITHER_MATRIX	.\jquant1.c	/^typedef int ODITHER_MATRIX[ODITHER_SIZE][ODITHER_SIZE];$/;"	t	file:
ODITHER_MATRIX_PTR	.\jquant1.c	/^typedef int (*ODITHER_MATRIX_PTR)[ODITHER_SIZE];$/;"	t	file:
ODITHER_SIZE	.\jquant1.c	71;"	d	file:
ONE	.\jdct.h	131;"	d
ONE_HALF	.\jccolor.c	60;"	d	file:
ONE_HALF	.\jdcolor.c	61;"	d	file:
ONE_HALF	.\jdmerge.c	73;"	d	file:
OUTPUT_BUF_SIZE	.\jdatadst.c	34;"	d	file:
PASS1_BITS	.\jfdctint.c	79;"	d	file:
PASS1_BITS	.\jidctfst.c	78;"	d	file:
PASS1_BITS	.\jidctint.c	79;"	d	file:
PASS1_BITS	.\jidctred.c	44;"	d	file:
PEEK_BITS	.\jdhuff.h	147;"	d
PPM_MAXVAL	.\wrppm.c	36;"	d	file:
PPM_MAXVAL	.\wrppm.c	41;"	d	file:
PPM_MAXVAL	.\wrppm.c	50;"	d	file:
PROVIDE_ISLOW_TABLES	.\jddctmgr.c	74;"	d	file:
PROVIDE_ISLOW_TABLES	.\jddctmgr.c	77;"	d	file:
PSEUDOCOLOR	.\rdrle.c	/^  { GRAYSCALE, MAPPEDGRAY, PSEUDOCOLOR, TRUECOLOR, DIRECTCOLOR } rle_kind;$/;"	e	enum:__anon63	file:
PUTBYTE	.\wrjpgcom.c	83;"	d	file:
PUTPPMSAMPLE	.\wrppm.c	34;"	d	file:
PUTPPMSAMPLE	.\wrppm.c	39;"	d	file:
PUTPPMSAMPLE	.\wrppm.c	44;"	d	file:
PUT_2B	.\wrbmp.c	162;"	d	file:
PUT_4B	.\wrbmp.c	165;"	d	file:
Q01_POS	.\jdcoefct.c	390;"	d	file:
Q02_POS	.\jdcoefct.c	394;"	d	file:
Q10_POS	.\jdcoefct.c	391;"	d	file:
Q11_POS	.\jdcoefct.c	393;"	d	file:
Q20_POS	.\jdcoefct.c	392;"	d	file:
QUANT_1PASS_SUPPORTED	.\jmorecfg.h	293;"	d
QUANT_2PASS_SUPPORTED	.\jmorecfg.h	294;"	d
RANGE_MASK	.\jdct.h	78;"	d
READ_BINARY	.\cdjpeg.h	156;"	d
READ_BINARY	.\cdjpeg.h	160;"	d
READ_BINARY	.\cdjpeg.h	163;"	d
READ_BINARY	.\jmemdos.c	75;"	d	file:
READ_BINARY	.\jmemdos.c	77;"	d	file:
READ_BINARY	.\jmemname.c	30;"	d	file:
READ_BINARY	.\jmemname.c	34;"	d	file:
READ_BINARY	.\jmemname.c	37;"	d	file:
READ_BINARY	.\rdjpgcom.c	35;"	d	file:
READ_BINARY	.\rdjpgcom.c	38;"	d	file:
READ_BINARY	.\rdjpgcom.c	40;"	d	file:
READ_BINARY	.\wrjpgcom.c	38;"	d	file:
READ_BINARY	.\wrjpgcom.c	42;"	d	file:
READ_BINARY	.\wrjpgcom.c	45;"	d	file:
RGB_BLUE	.\jmorecfg.h	316;"	d
RGB_GREEN	.\jmorecfg.h	315;"	d
RGB_PIXELSIZE	.\jmorecfg.h	317;"	d
RGB_RED	.\jmorecfg.h	314;"	d
RIGHT_SHIFT	.\jpegint.h	284;"	d
RIGHT_SHIFT	.\jpegint.h	290;"	d
RW_BINARY	.\jmemname.c	31;"	d	file:
RW_BINARY	.\jmemname.c	35;"	d	file:
RW_BINARY	.\jmemname.c	38;"	d	file:
R_CB_OFF	.\jccolor.c	72;"	d	file:
R_CR_OFF	.\jccolor.c	75;"	d	file:
R_SCALE	.\jquant2.c	73;"	d	file:
R_Y_OFF	.\jccolor.c	69;"	d	file:
ReadOK	.\rdbmp.c	45;"	d	file:
ReadOK	.\rdppm.c	55;"	d	file:
ReadOK	.\rdtarga.c	41;"	d	file:
SAVED_COEFS	.\jdcoefct.c	58;"	d	file:
SAVE_MARKERS_SUPPORTED	.\jmorecfg.h	288;"	d
SCALEBITS	.\jccolor.c	58;"	d	file:
SCALEBITS	.\jdcolor.c	60;"	d	file:
SCALEBITS	.\jdmerge.c	72;"	d	file:
SEEK_SET	.\jmemansi.c	26;"	d	file:
SEEK_SET	.\jmemname.c	26;"	d	file:
SET_COMP	.\jcparam.c	396;"	d	file:
SHIFT_TEMPS	.\jpegint.h	283;"	d
SHIFT_TEMPS	.\jpegint.h	289;"	d
SIZEOF	.\jinclude.h	80;"	d
SRC_HANDLE	.\jmemdos.c	474;"	d	file:
SRC_OFFSET	.\jmemdos.c	475;"	d	file:
SRC_PAGE	.\jmemdos.c	476;"	d	file:
SRC_PTR	.\jmemdos.c	477;"	d	file:
SRC_TYPE	.\jmemdos.c	473;"	d	file:
STEPSIZE	.\jquant2.c	1120;"	d	file:
STEPSIZE	.\jquant2.c	1134;"	d	file:
STEP_C0	.\jquant2.c	807;"	d	file:
STEP_C1	.\jquant2.c	808;"	d	file:
STEP_C2	.\jquant2.c	809;"	d	file:
Se	.\jpeglib.h	/^  int Ss, Se, Ah, Al;		\/* progressive JPEG parameters for scan *\/$/;"	m	struct:jpeg_compress_struct
Se	.\jpeglib.h	/^  int Ss, Se, Ah, Al;		\/* progressive JPEG parameters for scan *\/$/;"	m	struct:jpeg_decompress_struct
Se	.\jpeglib.h	/^  int Ss, Se;			\/* progressive JPEG spectral selection parms *\/$/;"	m	struct:__anon54
Ss	.\jpeglib.h	/^  int Ss, Se, Ah, Al;		\/* progressive JPEG parameters for scan *\/$/;"	m	struct:jpeg_compress_struct
Ss	.\jpeglib.h	/^  int Ss, Se, Ah, Al;		\/* progressive JPEG parameters for scan *\/$/;"	m	struct:jpeg_decompress_struct
Ss	.\jpeglib.h	/^  int Ss, Se;			\/* progressive JPEG spectral selection parms *\/$/;"	m	struct:__anon54
TABLE_SIZE	.\jccolor.c	78;"	d	file:
TEMP_DIRECTORY	.\jmemname.c	70;"	d	file:
TEMP_FILE_NAME	.\jmemmac.c	68;"	d	file:
TEMP_FILE_NAME	.\jmemname.c	122;"	d	file:
TEMP_FILE_NAME	.\jmemname.c	78;"	d	file:
TEMP_NAME_LENGTH	.\jmemsys.h	116;"	d
TRACEMS	.\jerror.h	252;"	d
TRACEMS1	.\jerror.h	255;"	d
TRACEMS2	.\jerror.h	259;"	d
TRACEMS3	.\jerror.h	264;"	d
TRACEMS4	.\jerror.h	269;"	d
TRACEMS5	.\jerror.h	274;"	d
TRACEMS8	.\jerror.h	280;"	d
TRACEMSS	.\jerror.h	286;"	d
TRANSFORMS_SUPPORTED	.\transupp.h	22;"	d
TRUE	.\jmorecfg.h	233;"	d
TRUECOLOR	.\rdrle.c	/^  { GRAYSCALE, MAPPEDGRAY, PSEUDOCOLOR, TRUECOLOR, DIRECTCOLOR } rle_kind;$/;"	e	enum:__anon63	file:
UCH	.\rdbmp.c	33;"	d	file:
UCH	.\rdbmp.c	37;"	d	file:
UCH	.\rdbmp.c	40;"	d	file:
UCH	.\rdppm.c	43;"	d	file:
UCH	.\rdppm.c	47;"	d	file:
UCH	.\rdppm.c	50;"	d	file:
UCH	.\rdtarga.c	29;"	d	file:
UCH	.\rdtarga.c	33;"	d	file:
UCH	.\rdtarga.c	36;"	d	file:
UINT16	.\jmorecfg.h	/^typedef unsigned int UINT16;$/;"	t
UINT16	.\jmorecfg.h	/^typedef unsigned short UINT16;$/;"	t
UINT8	.\jmorecfg.h	/^typedef char UINT8;$/;"	t
UINT8	.\jmorecfg.h	/^typedef short UINT8;$/;"	t
UINT8	.\jmorecfg.h	/^typedef unsigned char UINT8;$/;"	t
UPSAMPLE_MERGING_SUPPORTED	.\jmorecfg.h	292;"	d
UPSAMPLE_SCALING_SUPPORTED	.\jmorecfg.h	291;"	d
U_CHAR	.\rdbmp.c	/^typedef char U_CHAR;$/;"	t	file:
U_CHAR	.\rdbmp.c	/^typedef unsigned char U_CHAR;$/;"	t	file:
U_CHAR	.\rdppm.c	/^typedef char U_CHAR;$/;"	t	file:
U_CHAR	.\rdppm.c	/^typedef unsigned char U_CHAR;$/;"	t	file:
U_CHAR	.\rdtarga.c	/^typedef char U_CHAR;$/;"	t	file:
U_CHAR	.\rdtarga.c	/^typedef unsigned char U_CHAR;$/;"	t	file:
WARNMS	.\jerror.h	238;"	d
WARNMS1	.\jerror.h	241;"	d
WARNMS2	.\jerror.h	245;"	d
WRITE_BINARY	.\cdjpeg.h	157;"	d
WRITE_BINARY	.\cdjpeg.h	161;"	d
WRITE_BINARY	.\cdjpeg.h	164;"	d
WRITE_BINARY	.\wrjpgcom.c	39;"	d	file:
WRITE_BINARY	.\wrjpgcom.c	43;"	d	file:
WRITE_BINARY	.\wrjpgcom.c	46;"	d	file:
XMSDRIVER	.\jmemdos.c	/^typedef void far * XMSDRIVER;	\/* actually a pointer to code *\/$/;"	t	file:
XMSH	.\jmemsys.h	/^typedef unsigned short XMSH;	\/* type of extended-memory handles *\/$/;"	t
XMSPTR	.\jmemdos.c	/^      } XMSPTR;$/;"	t	typeref:union:__anon43	file:
XMS_SUPPORTED	.\jmemdos.c	35;"	d	file:
XMScontext	.\jmemdos.c	/^      } XMScontext;$/;"	t	typeref:struct:__anon41	file:
XMSspec	.\jmemdos.c	/^      } XMSspec;$/;"	t	typeref:struct:__anon44	file:
X_density	.\jpeglib.h	/^  UINT16 X_density;		\/* Horizontal pixel density *\/$/;"	m	struct:jpeg_compress_struct
X_density	.\jpeglib.h	/^  UINT16 X_density;		\/* Horizontal pixel density *\/$/;"	m	struct:jpeg_decompress_struct
Y_density	.\jpeglib.h	/^  UINT16 Y_density;		\/* Vertical pixel density *\/$/;"	m	struct:jpeg_compress_struct
Y_density	.\jpeglib.h	/^  UINT16 Y_density;		\/* Vertical pixel density *\/$/;"	m	struct:jpeg_decompress_struct
_bmp_source_struct	.\rdbmp.c	/^typedef struct _bmp_source_struct {$/;"	s	file:
_jdos_close	.\jmemdosa.asm	/^_jdos_close	proc	far$/;"	l
_jdos_open	.\jmemdosa.asm	/^_jdos_open	proc	far$/;"	l
_jdos_read	.\jmemdosa.asm	/^_jdos_read	proc	far$/;"	l
_jdos_seek	.\jmemdosa.asm	/^_jdos_seek	proc	far$/;"	l
_jdos_write	.\jmemdosa.asm	/^_jdos_write	proc	far$/;"	l
_jems_available	.\jmemdosa.asm	/^_jems_available	proc	far$/;"	l
_jems_calldriver	.\jmemdosa.asm	/^_jems_calldriver	proc far$/;"	l
_jxms_calldriver	.\jmemdosa.asm	/^_jxms_calldriver 	proc	far$/;"	l
_jxms_getdriver	.\jmemdosa.asm	/^_jxms_getdriver	proc	far$/;"	l
_rle_source_struct	.\rdrle.c	/^typedef struct _rle_source_struct {$/;"	s	file:
_tga_source_struct	.\rdtarga.c	/^typedef struct _tga_source_struct {$/;"	s	file:
ac_count_ptrs	.\jchuff.c	/^  long * ac_count_ptrs[NUM_HUFF_TBLS];$/;"	m	struct:__anon7	file:
ac_cur_tbls	.\jdhuff.c	/^  d_derived_tbl * ac_cur_tbls[D_MAX_BLOCKS_IN_MCU];$/;"	m	struct:__anon26	file:
ac_derived_tbl	.\jdphuff.c	/^  d_derived_tbl * ac_derived_tbl; \/* active table during an AC scan *\/$/;"	m	struct:__anon37	file:
ac_derived_tbls	.\jchuff.c	/^  c_derived_tbl * ac_derived_tbls[NUM_HUFF_TBLS];$/;"	m	struct:__anon7	file:
ac_derived_tbls	.\jdhuff.c	/^  d_derived_tbl * ac_derived_tbls[NUM_HUFF_TBLS];$/;"	m	struct:__anon26	file:
ac_huff_tbl_ptrs	.\jpeglib.h	/^  JHUFF_TBL * ac_huff_tbl_ptrs[NUM_HUFF_TBLS];$/;"	m	struct:jpeg_compress_struct
ac_huff_tbl_ptrs	.\jpeglib.h	/^  JHUFF_TBL * ac_huff_tbl_ptrs[NUM_HUFF_TBLS];$/;"	m	struct:jpeg_decompress_struct
ac_needed	.\jdhuff.c	/^  boolean ac_needed[D_MAX_BLOCKS_IN_MCU];$/;"	m	struct:__anon26	file:
ac_tbl_no	.\jcphuff.c	/^  int ac_tbl_no;		\/* the table number of the single component *\/$/;"	m	struct:__anon15	file:
ac_tbl_no	.\jpeglib.h	/^  int ac_tbl_no;		\/* AC entropy table selector (0..3) *\/$/;"	m	struct:__anon53
actual_number_of_colors	.\jpeglib.h	/^  int actual_number_of_colors;	\/* number of entries in use *\/$/;"	m	struct:jpeg_decompress_struct
add_huff_table	.\jcparam.c	/^add_huff_table (j_compress_ptr cinfo,$/;"	f
add_map_entry	.\rdcolmap.c	/^add_map_entry (j_decompress_ptr cinfo, int R, int G, int B)$/;"	f
addon_message_table	.\jpeglib.h	/^  const char * const * addon_message_table; \/* Non-library errors *\/$/;"	m	struct:jpeg_error_mgr
alloc_fs_workspace	.\jquant1.c	/^alloc_fs_workspace (j_decompress_ptr cinfo)$/;"	f
alloc_funny_pointers	.\jdmainct.c	/^alloc_funny_pointers (j_decompress_ptr cinfo)$/;"	f
alloc_large	.\jmemmgr.c	/^alloc_large (j_common_ptr cinfo, int pool_id, size_t sizeofobject)$/;"	f
alloc_small	.\jmemmgr.c	/^alloc_small (j_common_ptr cinfo, int pool_id, size_t sizeofobject)$/;"	f
another_method	.\ckconfig.c	/^  int (*another_method) (void);$/;"	m	struct:methods_struct	file:
arith_ac_K	.\jpeglib.h	/^  UINT8 arith_ac_K[NUM_ARITH_TBLS]; \/* Kx values for AC arith-coding tables *\/$/;"	m	struct:jpeg_compress_struct
arith_ac_K	.\jpeglib.h	/^  UINT8 arith_ac_K[NUM_ARITH_TBLS]; \/* Kx values for AC arith-coding tables *\/$/;"	m	struct:jpeg_decompress_struct
arith_code	.\jpeglib.h	/^  boolean arith_code;		\/* TRUE=arithmetic coding, FALSE=Huffman *\/$/;"	m	struct:jpeg_compress_struct
arith_code	.\jpeglib.h	/^  boolean arith_code;		\/* TRUE=arithmetic coding, FALSE=Huffman *\/$/;"	m	struct:jpeg_decompress_struct
arith_dc_L	.\jpeglib.h	/^  UINT8 arith_dc_L[NUM_ARITH_TBLS]; \/* L values for DC arith-coding tables *\/$/;"	m	struct:jpeg_compress_struct
arith_dc_L	.\jpeglib.h	/^  UINT8 arith_dc_L[NUM_ARITH_TBLS]; \/* L values for DC arith-coding tables *\/$/;"	m	struct:jpeg_decompress_struct
arith_dc_U	.\jpeglib.h	/^  UINT8 arith_dc_U[NUM_ARITH_TBLS]; \/* U values for DC arith-coding tables *\/$/;"	m	struct:jpeg_compress_struct
arith_dc_U	.\jpeglib.h	/^  UINT8 arith_dc_U[NUM_ARITH_TBLS]; \/* U values for DC arith-coding tables *\/$/;"	m	struct:jpeg_decompress_struct
avail_done	.\jmemdosa.asm	/^avail_done:	pop	ds			; restore registers and exit$/;"	l
ax	.\jmemdos.c	/^	unsigned short ax, dx, bx;$/;"	m	struct:__anon41	file:
ax	.\jmemdos.c	/^	unsigned short ax, dx, bx;$/;"	m	struct:__anon42	file:
b_s_info	.\jmemmgr.c	/^  backing_store_info b_s_info;	\/* System-dependent control info *\/$/;"	m	struct:jvirt_barray_control	file:
b_s_info	.\jmemmgr.c	/^  backing_store_info b_s_info;	\/* System-dependent control info *\/$/;"	m	struct:jvirt_sarray_control	file:
b_s_open	.\jmemmgr.c	/^  boolean b_s_open;		\/* is backing-store data valid? *\/$/;"	m	struct:jvirt_barray_control	file:
b_s_open	.\jmemmgr.c	/^  boolean b_s_open;		\/* is backing-store data valid? *\/$/;"	m	struct:jvirt_sarray_control	file:
backing_store_info	.\jmemsys.h	/^} backing_store_info;$/;"	t	typeref:struct:backing_store_struct
backing_store_ptr	.\jmemsys.h	/^typedef struct backing_store_struct * backing_store_ptr;$/;"	t	typeref:struct:backing_store_struct
backing_store_struct	.\jmemsys.h	/^typedef struct backing_store_struct {$/;"	s
base_dither_matrix	.\jquant1.c	/^static const UINT8 base_dither_matrix[ODITHER_SIZE][ODITHER_SIZE] = {$/;"	v	file:
bit_buf_type	.\jdhuff.h	/^typedef INT32 bit_buf_type;	\/* type of bit-extraction buffer *\/$/;"	t
bit_buffer	.\jcphuff.c	/^  char * bit_buffer;		\/* buffer for correction bits (1 per char) *\/$/;"	m	struct:__anon15	file:
bitread_perm_state	.\jdhuff.h	/^} bitread_perm_state;$/;"	t	typeref:struct:__anon28
bitread_working_state	.\jdhuff.h	/^} bitread_working_state;$/;"	t	typeref:struct:__anon29
bits	.\jpeglib.h	/^  UINT8 bits[17];		\/* bits[k] = # of symbols with codes of *\/$/;"	m	struct:__anon52
bits_left	.\jdhuff.h	/^  int bits_left;		\/* # of unused bits in it *\/$/;"	m	struct:__anon28
bits_left	.\jdhuff.h	/^  int bits_left;		\/* # of unused bits in it *\/$/;"	m	struct:__anon29
bits_per_pixel	.\rdbmp.c	/^  int bits_per_pixel;		\/* remembers 8- or 24-bit format *\/$/;"	m	struct:_bmp_source_struct	file:
bitstate	.\jdhuff.c	/^  bitread_perm_state bitstate;	\/* Bit buffer at start of MCU *\/$/;"	m	struct:__anon26	file:
bitstate	.\jdphuff.c	/^  bitread_perm_state bitstate;	\/* Bit buffer at start of MCU *\/$/;"	m	struct:__anon37	file:
block_count	.\rdtarga.c	/^  int block_count;		\/* # of pixels remaining in RLE block *\/$/;"	m	struct:_tga_source_struct	file:
blocks_in_MCU	.\jpeglib.h	/^  int blocks_in_MCU;		\/* # of DCT blocks per MCU *\/$/;"	m	struct:jpeg_compress_struct
blocks_in_MCU	.\jpeglib.h	/^  int blocks_in_MCU;		\/* # of DCT blocks per MCU *\/$/;"	m	struct:jpeg_decompress_struct
blocksperrow	.\jmemmgr.c	/^  JDIMENSION blocksperrow;	\/* width of array (and of memory buffer) *\/$/;"	m	struct:jvirt_barray_control	file:
bmp_dest_ptr	.\wrbmp.c	/^typedef bmp_dest_struct * bmp_dest_ptr;$/;"	t	file:
bmp_dest_struct	.\wrbmp.c	/^} bmp_dest_struct;$/;"	t	typeref:struct:__anon67	file:
bmp_source_ptr	.\rdbmp.c	/^typedef struct _bmp_source_struct * bmp_source_ptr;$/;"	t	typeref:struct:_bmp_source_struct	file:
bmp_source_struct	.\rdbmp.c	/^} bmp_source_struct;$/;"	t	typeref:struct:_bmp_source_struct	file:
boolean	.\jmorecfg.h	/^typedef int boolean;$/;"	t
box	.\jquant2.c	/^} box;$/;"	t	typeref:struct:__anon61	file:
boxptr	.\jquant2.c	/^typedef box * boxptr;$/;"	t	file:
buffer	.\cdjpeg.h	/^  JSAMPARRAY buffer;$/;"	m	struct:cjpeg_source_struct
buffer	.\cdjpeg.h	/^  JSAMPARRAY buffer;$/;"	m	struct:djpeg_dest_struct
buffer	.\jcmainct.c	/^  JSAMPARRAY buffer[MAX_COMPONENTS];$/;"	m	struct:__anon10	file:
buffer	.\jdatadst.c	/^  JOCTET * buffer;		\/* start of buffer *\/$/;"	m	struct:__anon19	file:
buffer	.\jdatasrc.c	/^  JOCTET * buffer;		\/* start of buffer *\/$/;"	m	struct:__anon20	file:
buffer	.\jdmainct.c	/^  JSAMPARRAY buffer[MAX_COMPONENTS];$/;"	m	struct:__anon31	file:
buffer	.\jdpostct.c	/^  JSAMPARRAY buffer;		\/* strip buffer, or current strip of virtual *\/$/;"	m	struct:__anon38	file:
buffer_full	.\jdmainct.c	/^  boolean buffer_full;		\/* Have we gotten an iMCU row from decoder? *\/$/;"	m	struct:__anon31	file:
buffer_height	.\cdjpeg.h	/^  JDIMENSION buffer_height;$/;"	m	struct:cjpeg_source_struct
buffer_height	.\cdjpeg.h	/^  JDIMENSION buffer_height;$/;"	m	struct:djpeg_dest_struct
buffer_width	.\rdppm.c	/^  size_t buffer_width;		\/* width of I\/O buffer *\/$/;"	m	struct:__anon62	file:
buffer_width	.\wrppm.c	/^  size_t buffer_width;		\/* width of I\/O buffer *\/$/;"	m	struct:__anon69	file:
buffer_width	.\wrtarga.c	/^  JDIMENSION buffer_width;	\/* width of one row *\/$/;"	m	struct:__anon71	file:
buffered_image	.\jpeglib.h	/^  boolean buffered_image;	\/* TRUE=multiple output passes *\/$/;"	m	struct:jpeg_decompress_struct
bufsize	.\ansi2knr.c	324;"	d	file:
build_ycc_rgb_table	.\jdcolor.c	/^build_ycc_rgb_table (j_decompress_ptr cinfo)$/;"	f
build_ycc_rgb_table	.\jdmerge.c	/^build_ycc_rgb_table (j_decompress_ptr cinfo)$/;"	f
bx	.\jmemdos.c	/^	unsigned short ax, dx, bx;$/;"	m	struct:__anon41	file:
bx	.\jmemdos.c	/^	unsigned short ax, dx, bx;$/;"	m	struct:__anon42	file:
bytes	.\jmemdos.c	/^	char bytes[18];		\/* Misaligned fields in here! *\/$/;"	m	union:__anon45	file:
bytes_in_buffer	.\jdhuff.h	/^  size_t bytes_in_buffer;	\/* # of bytes remaining in source buffer *\/$/;"	m	struct:__anon29
bytes_in_buffer	.\jpeglib.h	/^  size_t bytes_in_buffer;	\/* # of bytes remaining in buffer *\/$/;"	m	struct:jpeg_source_mgr
bytes_left	.\jmemmgr.c	/^    size_t bytes_left;		\/* bytes still available in this pool *\/$/;"	m	struct:large_pool_struct::__anon47	file:
bytes_left	.\jmemmgr.c	/^    size_t bytes_left;		\/* bytes still available in this pool *\/$/;"	m	struct:small_pool_struct::__anon46	file:
bytes_read	.\jdmarker.c	/^  unsigned int bytes_read;		\/* data bytes read so far in marker *\/$/;"	m	struct:__anon33	file:
bytes_used	.\jmemmgr.c	/^    size_t bytes_used;		\/* how many bytes already used within pool *\/$/;"	m	struct:large_pool_struct::__anon47	file:
bytes_used	.\jmemmgr.c	/^    size_t bytes_used;		\/* how many bytes already used within pool *\/$/;"	m	struct:small_pool_struct::__anon46	file:
bytesinpkt	.\wrgif.c	/^  int bytesinpkt;		\/* # of bytes in current packet *\/$/;"	m	struct:__anon68	file:
c0max	.\jquant2.c	/^  int c0min, c0max;$/;"	m	struct:__anon61	file:
c0min	.\jquant2.c	/^  int c0min, c0max;$/;"	m	struct:__anon61	file:
c1max	.\jquant2.c	/^  int c1min, c1max;$/;"	m	struct:__anon61	file:
c1min	.\jquant2.c	/^  int c1min, c1max;$/;"	m	struct:__anon61	file:
c2max	.\jquant2.c	/^  int c2min, c2max;$/;"	m	struct:__anon61	file:
c2min	.\jquant2.c	/^  int c2min, c2max;$/;"	m	struct:__anon61	file:
c5to8bits	.\rdtarga.c	/^static const UINT8 c5to8bits[32] = {$/;"	v	file:
c_derived_tbl	.\jchuff.h	/^} c_derived_tbl;$/;"	t	typeref:struct:__anon9
c_pass_type	.\jcmaster.c	/^} c_pass_type;$/;"	t	typeref:enum:__anon13	file:
call_pass_startup	.\jpegint.h	/^  boolean call_pass_startup;	\/* True if pass_startup must be called *\/$/;"	m	struct:jpeg_comp_master
carray	.\ckconfig.c	/^static const int carray[3] = {1, 2, 3};$/;"	v	file:
cconvert	.\jpeglib.h	/^  struct jpeg_color_converter * cconvert;$/;"	m	struct:jpeg_compress_struct	typeref:struct:jpeg_compress_struct::jpeg_color_converter
cconvert	.\jpeglib.h	/^  struct jpeg_color_deconverter * cconvert;$/;"	m	struct:jpeg_decompress_struct	typeref:struct:jpeg_decompress_struct::jpeg_color_deconverter
cd_progress_ptr	.\cdjpeg.h	/^typedef struct cdjpeg_progress_mgr * cd_progress_ptr;$/;"	t	typeref:struct:cdjpeg_progress_mgr
cdjpeg_message_table	.\cjpeg.c	/^static const char * const cdjpeg_message_table[] = {$/;"	v	file:
cdjpeg_message_table	.\djpeg.c	/^static const char * const cdjpeg_message_table[] = {$/;"	v	file:
cdjpeg_progress_mgr	.\cdjpeg.h	/^struct cdjpeg_progress_mgr {$/;"	s
cinfo	.\jchuff.c	/^  j_compress_ptr cinfo;		\/* dump_buffer needs access to this *\/$/;"	m	struct:__anon8	file:
cinfo	.\jcphuff.c	/^  j_compress_ptr cinfo;		\/* link to cinfo (needed for dump_buffer) *\/$/;"	m	struct:__anon15	file:
cinfo	.\jdhuff.h	/^  j_decompress_ptr cinfo;	\/* back link to decompress master record *\/$/;"	m	struct:__anon29
cinfo	.\rdbmp.c	/^  j_compress_ptr cinfo;		\/* back link saves passing separate parm *\/$/;"	m	struct:_bmp_source_struct	file:
cinfo	.\rdtarga.c	/^  j_compress_ptr cinfo;		\/* back link saves passing separate parm *\/$/;"	m	struct:_tga_source_struct	file:
cinfo	.\wrgif.c	/^  j_decompress_ptr cinfo;	\/* back link saves passing separate parm *\/$/;"	m	struct:__anon68	file:
cjpeg_source_ptr	.\cdjpeg.h	/^typedef struct cjpeg_source_struct * cjpeg_source_ptr;$/;"	t	typeref:struct:cjpeg_source_struct
cjpeg_source_struct	.\cdjpeg.h	/^struct cjpeg_source_struct {$/;"	s
close_backing_store	.\jmemansi.c	/^close_backing_store (j_common_ptr cinfo, backing_store_ptr info)$/;"	f
close_backing_store	.\jmemmac.c	/^close_backing_store (j_common_ptr cinfo, backing_store_ptr info)$/;"	f
close_backing_store	.\jmemname.c	/^close_backing_store (j_common_ptr cinfo, backing_store_ptr info)$/;"	f
close_ems_store	.\jmemdos.c	/^close_ems_store (j_common_ptr cinfo, backing_store_ptr info)$/;"	f
close_err	.\jmemdosa.asm	/^close_err:	pop	ds			; restore registers and exit$/;"	l
close_file_store	.\jmemdos.c	/^close_file_store (j_common_ptr cinfo, backing_store_ptr info)$/;"	f
close_xms_store	.\jmemdos.c	/^close_xms_store (j_common_ptr cinfo, backing_store_ptr info)$/;"	f
cmyk_ycck_convert	.\jccolor.c	/^cmyk_ycck_convert (j_compress_ptr cinfo,$/;"	f
code_counter	.\wrgif.c	/^  int code_counter;		\/* counts output symbols *\/$/;"	m	struct:__anon68	file:
coef	.\jpeglib.h	/^  struct jpeg_c_coef_controller * coef;$/;"	m	struct:jpeg_compress_struct	typeref:struct:jpeg_compress_struct::jpeg_c_coef_controller
coef	.\jpeglib.h	/^  struct jpeg_d_coef_controller * coef;$/;"	m	struct:jpeg_decompress_struct	typeref:struct:jpeg_decompress_struct::jpeg_d_coef_controller
coef_arrays	.\jpegint.h	/^  jvirt_barray_ptr *coef_arrays;$/;"	m	struct:jpeg_d_coef_controller
coef_bits	.\jpeglib.h	/^  int (*coef_bits)[DCTSIZE2];	\/* -1 or current Al value for each coef *\/$/;"	m	struct:jpeg_decompress_struct
coef_bits_latch	.\jdcoefct.c	/^  int * coef_bits_latch;$/;"	m	struct:__anon21	file:
color_buf	.\jcprepct.c	/^  JSAMPARRAY color_buf[MAX_COMPONENTS];$/;"	m	struct:__anon16	file:
color_buf	.\jdsample.c	/^  JSAMPARRAY color_buf[MAX_COMPONENTS];$/;"	m	struct:__anon39	file:
color_quantize	.\jquant1.c	/^color_quantize (j_decompress_ptr cinfo, JSAMPARRAY input_buf,$/;"	f
color_quantize3	.\jquant1.c	/^color_quantize3 (j_decompress_ptr cinfo, JSAMPARRAY input_buf,$/;"	f
colorcount	.\jquant2.c	/^  long colorcount;$/;"	m	struct:__anon61	file:
colorindex	.\jquant1.c	/^  JSAMPARRAY colorindex;	\/* Precomputed mapping for speed *\/$/;"	m	struct:__anon59	file:
colormap	.\jpeglib.h	/^  JSAMPARRAY colormap;		\/* The color map as a 2-D pixel array *\/$/;"	m	struct:jpeg_decompress_struct
colormap	.\rdbmp.c	/^  JSAMPARRAY colormap;		\/* BMP colormap (converted to my format) *\/$/;"	m	struct:_bmp_source_struct	file:
colormap	.\rdtarga.c	/^  JSAMPARRAY colormap;		\/* Targa colormap (converted to my format) *\/$/;"	m	struct:_tga_source_struct	file:
colormap	.\wrrle.c	/^  rle_map *colormap;	 	\/* RLE-style color map, or NULL if none *\/$/;"	m	struct:__anon70	file:
comp_info	.\jpeglib.h	/^  jpeg_component_info * comp_info;$/;"	m	struct:jpeg_compress_struct
comp_info	.\jpeglib.h	/^  jpeg_component_info * comp_info;$/;"	m	struct:jpeg_decompress_struct
completed_extra_passes	.\cdjpeg.h	/^  int completed_extra_passes;	\/* extra passes completed *\/$/;"	m	struct:cdjpeg_progress_mgr
completed_passes	.\jpeglib.h	/^  int completed_passes;		\/* passes completed so far *\/$/;"	m	struct:jpeg_progress_mgr
component_id	.\jpeglib.h	/^  int component_id;		\/* identifier for this component (0..255) *\/$/;"	m	struct:__anon53
component_index	.\jpeglib.h	/^  int component_index;		\/* its index in SOF or cinfo->comp_info[] *\/$/;"	m	struct:__anon53
component_index	.\jpeglib.h	/^  int component_index[MAX_COMPS_IN_SCAN]; \/* their SOF\/comp_info[] indexes *\/$/;"	m	struct:__anon54
component_needed	.\jpeglib.h	/^  boolean component_needed;	\/* do we need the value of this component? *\/$/;"	m	struct:__anon53
compress_first_pass	.\jccoefct.c	/^METHODDEF(boolean) compress_first_pass$/;"	v
compress_init	.\wrgif.c	/^compress_init (gif_dest_ptr dinfo, int i_bits)$/;"	f
compress_pixel	.\wrgif.c	/^compress_pixel (gif_dest_ptr dinfo, int c)$/;"	f
compress_term	.\wrgif.c	/^compress_term (gif_dest_ptr dinfo)$/;"	f
comps_in_scan	.\jpeglib.h	/^  int comps_in_scan;		\/* # of JPEG components in this scan *\/$/;"	m	struct:jpeg_compress_struct
comps_in_scan	.\jpeglib.h	/^  int comps_in_scan;		\/* # of JPEG components in this scan *\/$/;"	m	struct:jpeg_decompress_struct
comps_in_scan	.\jpeglib.h	/^  int comps_in_scan;		\/* number of components encoded in this scan *\/$/;"	m	struct:__anon54
compute_color	.\jquant2.c	/^compute_color (j_decompress_ptr cinfo, boxptr boxp, int icolor)$/;"	f
consume_data	.\jdcoefct.c	/^consume_data (j_decompress_ptr cinfo)$/;"	f
consume_markers	.\jdinput.c	/^consume_markers (j_decompress_ptr cinfo)$/;"	f
context_state	.\jdmainct.c	/^  int context_state;		\/* process_data state machine status *\/$/;"	m	struct:__anon31	file:
convert1	.\ansi2knr.c	/^convert1(buf, out, header, convert_varargs)$/;"	f
copy_pixel_rows	.\wrppm.c	/^copy_pixel_rows (j_decompress_ptr cinfo, djpeg_dest_ptr dinfo,$/;"	f
copy_rest_of_file	.\wrjpgcom.c	/^copy_rest_of_file (void)$/;"	f	file:
copy_variable	.\wrjpgcom.c	/^copy_variable (void)$/;"	f	file:
copyoption	.\jpegtran.c	/^static JCOPY_OPTION copyoption;	\/* -copy switch *\/$/;"	v	file:
count_ptrs	.\jcphuff.c	/^  long * count_ptrs[NUM_HUFF_TBLS];$/;"	m	struct:__anon15	file:
cquantize	.\jpeglib.h	/^  struct jpeg_color_quantizer * cquantize;$/;"	m	struct:jpeg_decompress_struct	typeref:struct:jpeg_decompress_struct::jpeg_color_quantizer
create_colorindex	.\jquant1.c	/^create_colorindex (j_decompress_ptr cinfo)$/;"	f
create_colormap	.\jquant1.c	/^create_colormap (j_decompress_ptr cinfo)$/;"	f
create_context_buffer	.\jcprepct.c	/^create_context_buffer (j_compress_ptr cinfo)$/;"	f
create_odither_tables	.\jquant1.c	/^create_odither_tables (j_decompress_ptr cinfo)$/;"	f
cur	.\jchuff.c	/^  savable_state cur;		\/* Current bit buffer & DC state *\/$/;"	m	struct:__anon8	file:
cur_accum	.\wrgif.c	/^  INT32 cur_accum;		\/* holds bits not yet output *\/$/;"	m	struct:__anon68	file:
cur_bits	.\wrgif.c	/^  int cur_bits;			\/* # of bits in cur_accum *\/$/;"	m	struct:__anon68	file:
cur_comp_info	.\jpeglib.h	/^  jpeg_component_info * cur_comp_info[MAX_COMPS_IN_SCAN];$/;"	m	struct:jpeg_compress_struct
cur_comp_info	.\jpeglib.h	/^  jpeg_component_info * cur_comp_info[MAX_COMPS_IN_SCAN];$/;"	m	struct:jpeg_decompress_struct
cur_iMCU_row	.\jcmainct.c	/^  JDIMENSION cur_iMCU_row;	\/* number of current iMCU row *\/$/;"	m	struct:__anon10	file:
cur_marker	.\jdmarker.c	/^  jpeg_saved_marker_ptr cur_marker;	\/* NULL if not processing a marker *\/$/;"	m	struct:__anon33	file:
cur_method	.\jddctmgr.c	/^  int cur_method[MAX_COMPONENTS];$/;"	m	struct:__anon23	file:
cur_output_row	.\wrbmp.c	/^  JDIMENSION cur_output_row;	\/* next row# to write to virtual array *\/$/;"	m	struct:__anon67	file:
cur_start_row	.\jmemmgr.c	/^  JDIMENSION cur_start_row;	\/* first logical row # in the buffer *\/$/;"	m	struct:jvirt_barray_control	file:
cur_start_row	.\jmemmgr.c	/^  JDIMENSION cur_start_row;	\/* first logical row # in the buffer *\/$/;"	m	struct:jvirt_sarray_control	file:
current_row	.\rdtarga.c	/^  JDIMENSION current_row;	\/* Current logical row number to read *\/$/;"	m	struct:_tga_source_struct	file:
d_derived_tbl	.\jdhuff.h	/^} d_derived_tbl;$/;"	t	typeref:struct:__anon27
data	.\jpeglib.h	/^  JOCTET FAR * data;		\/* the data contained in the marker *\/$/;"	m	struct:jpeg_marker_struct
data_length	.\jpeglib.h	/^  unsigned int data_length;	\/* # bytes of data saved at data[] *\/$/;"	m	struct:jpeg_marker_struct
data_precision	.\jpeglib.h	/^  int data_precision;		\/* bits of precision in image data *\/$/;"	m	struct:jpeg_compress_struct
data_precision	.\jpeglib.h	/^  int data_precision;		\/* bits of precision in image data *\/$/;"	m	struct:jpeg_decompress_struct
data_width	.\wrbmp.c	/^  JDIMENSION data_width;	\/* JSAMPLEs per row *\/$/;"	m	struct:__anon67	file:
dc_count_ptrs	.\jchuff.c	/^  long * dc_count_ptrs[NUM_HUFF_TBLS];$/;"	m	struct:__anon7	file:
dc_cur_tbls	.\jdhuff.c	/^  d_derived_tbl * dc_cur_tbls[D_MAX_BLOCKS_IN_MCU];$/;"	m	struct:__anon26	file:
dc_derived_tbls	.\jchuff.c	/^  c_derived_tbl * dc_derived_tbls[NUM_HUFF_TBLS];$/;"	m	struct:__anon7	file:
dc_derived_tbls	.\jdhuff.c	/^  d_derived_tbl * dc_derived_tbls[NUM_HUFF_TBLS];$/;"	m	struct:__anon26	file:
dc_huff_tbl_ptrs	.\jpeglib.h	/^  JHUFF_TBL * dc_huff_tbl_ptrs[NUM_HUFF_TBLS];$/;"	m	struct:jpeg_compress_struct
dc_huff_tbl_ptrs	.\jpeglib.h	/^  JHUFF_TBL * dc_huff_tbl_ptrs[NUM_HUFF_TBLS];$/;"	m	struct:jpeg_decompress_struct
dc_needed	.\jdhuff.c	/^  boolean dc_needed[D_MAX_BLOCKS_IN_MCU];$/;"	m	struct:__anon26	file:
dc_tbl_no	.\jpeglib.h	/^  int dc_tbl_no;		\/* DC entropy table selector (0..3) *\/$/;"	m	struct:__anon53
dct_method	.\jpeglib.h	/^  J_DCT_METHOD dct_method;	\/* DCT algorithm selector *\/$/;"	m	struct:jpeg_compress_struct
dct_method	.\jpeglib.h	/^  J_DCT_METHOD dct_method;	\/* IDCT algorithm selector *\/$/;"	m	struct:jpeg_decompress_struct
dct_table	.\jpeglib.h	/^  void * dct_table;$/;"	m	struct:__anon53
decode_mcu_AC_first	.\jdphuff.c	/^METHODDEF(boolean) decode_mcu_AC_first JPP((j_decompress_ptr cinfo,$/;"	v
decode_mcu_AC_refine	.\jdphuff.c	/^METHODDEF(boolean) decode_mcu_AC_refine JPP((j_decompress_ptr cinfo,$/;"	v
decompress_data	.\jdcoefct.c	/^decompress_data (j_decompress_ptr cinfo, JSAMPIMAGE output_buf)$/;"	f
decompress_onepass	.\jdcoefct.c	/^decompress_onepass (j_decompress_ptr cinfo, JSAMPIMAGE output_buf)$/;"	f
decompress_smooth_data	.\jdcoefct.c	/^METHODDEF(int) decompress_smooth_data$/;"	v
decompress_smooth_data	.\jdcoefct.c	/^decompress_smooth_data (j_decompress_ptr cinfo, JSAMPIMAGE output_buf)$/;"	f
default_decompress_parms	.\jdapimin.c	/^default_decompress_parms (j_decompress_ptr cinfo)$/;"	f
density_unit	.\jpeglib.h	/^  UINT8 density_unit;		\/* JFIF code for pixel size units *\/$/;"	m	struct:jpeg_compress_struct
density_unit	.\jpeglib.h	/^  UINT8 density_unit;		\/* JFIF code for pixel size units *\/$/;"	m	struct:jpeg_decompress_struct
derived_tbls	.\jcphuff.c	/^  c_derived_tbl * derived_tbls[NUM_HUFF_TBLS];$/;"	m	struct:__anon15	file:
derived_tbls	.\jdphuff.c	/^  d_derived_tbl * derived_tbls[NUM_HUFF_TBLS];$/;"	m	struct:__anon37	file:
desired	.\jquant2.c	/^  int desired;			\/* desired # of colors = size of colormap *\/$/;"	m	struct:__anon60	file:
desired_number_of_colors	.\jpeglib.h	/^  int desired_number_of_colors;	\/* max # colors to use in created colormap *\/$/;"	m	struct:jpeg_decompress_struct
dest	.\jpeglib.h	/^  struct jpeg_destination_mgr * dest;$/;"	m	struct:jpeg_compress_struct	typeref:struct:jpeg_compress_struct::jpeg_destination_mgr
dirty	.\jmemmgr.c	/^  boolean dirty;		\/* do current buffer contents need written? *\/$/;"	m	struct:jvirt_barray_control	file:
dirty	.\jmemmgr.c	/^  boolean dirty;		\/* do current buffer contents need written? *\/$/;"	m	struct:jvirt_sarray_control	file:
discarded_bytes	.\jpegint.h	/^  unsigned int discarded_bytes;	\/* # of bytes skipped looking for a marker *\/$/;"	m	struct:jpeg_marker_reader
dither_mode	.\jpeglib.h	/^  J_DITHER_MODE dither_mode;	\/* type of color dithering to use *\/$/;"	m	struct:jpeg_decompress_struct
divisors	.\jcdctmgr.c	/^  DCTELEM * divisors[NUM_QUANT_TBLS];$/;"	m	struct:__anon5	file:
djpeg_dest_ptr	.\cdjpeg.h	/^typedef struct djpeg_dest_struct * djpeg_dest_ptr;$/;"	t	typeref:struct:djpeg_dest_struct
djpeg_dest_struct	.\cdjpeg.h	/^struct djpeg_dest_struct {$/;"	s
do_barray_io	.\jmemmgr.c	/^do_barray_io (j_common_ptr cinfo, jvirt_barray_ptr ptr, boolean writing)$/;"	f
do_block_smoothing	.\jpeglib.h	/^  boolean do_block_smoothing;	\/* TRUE=apply interblock smoothing *\/$/;"	m	struct:jpeg_decompress_struct
do_dct	.\jcdctmgr.c	/^  forward_DCT_method_ptr do_dct;$/;"	m	struct:__anon5	file:
do_fancy_upsampling	.\jpeglib.h	/^  boolean do_fancy_upsampling;	\/* TRUE=apply fancy upsampling *\/$/;"	m	struct:jpeg_decompress_struct
do_flip_h	.\transupp.c	/^do_flip_h (j_decompress_ptr srcinfo, j_compress_ptr dstinfo,$/;"	f
do_flip_v	.\transupp.c	/^do_flip_v (j_decompress_ptr srcinfo, j_compress_ptr dstinfo,$/;"	f
do_float_dct	.\jcdctmgr.c	/^  float_DCT_method_ptr do_float_dct;$/;"	m	struct:__anon5	file:
do_rot_180	.\transupp.c	/^do_rot_180 (j_decompress_ptr srcinfo, j_compress_ptr dstinfo,$/;"	f
do_rot_270	.\transupp.c	/^do_rot_270 (j_decompress_ptr srcinfo, j_compress_ptr dstinfo,$/;"	f
do_rot_90	.\transupp.c	/^do_rot_90 (j_decompress_ptr srcinfo, j_compress_ptr dstinfo,$/;"	f
do_sarray_io	.\jmemmgr.c	/^do_sarray_io (j_common_ptr cinfo, jvirt_sarray_ptr ptr, boolean writing)$/;"	f
do_transpose	.\transupp.c	/^do_transpose (j_decompress_ptr srcinfo, j_compress_ptr dstinfo,$/;"	f
do_transverse	.\transupp.c	/^do_transverse (j_decompress_ptr srcinfo, j_compress_ptr dstinfo,$/;"	f
downsample	.\jpeglib.h	/^  struct jpeg_downsampler * downsample;$/;"	m	struct:jpeg_compress_struct	typeref:struct:jpeg_compress_struct::jpeg_downsampler
downsampled_height	.\jpeglib.h	/^  JDIMENSION downsampled_height; \/* actual height in samples *\/$/;"	m	struct:__anon53
downsampled_width	.\jpeglib.h	/^  JDIMENSION downsampled_width;	 \/* actual width in samples *\/$/;"	m	struct:__anon53
ds_si	.\jmemdos.c	/^	void far * ds_si;$/;"	m	struct:__anon41	file:
ds_si	.\jmemdos.c	/^	void far * ds_si;$/;"	m	struct:__anon42	file:
dst	.\jmemdos.c	/^	XMSPTR dst;$/;"	m	struct:__anon44	file:
dst_handle	.\jmemdos.c	/^	XMSH dst_handle;$/;"	m	struct:__anon44	file:
dummy	.\jmemmgr.c	/^  ALIGN_TYPE dummy;		\/* included in union to ensure alignment *\/$/;"	m	union:large_pool_struct	file:
dummy	.\jmemmgr.c	/^  ALIGN_TYPE dummy;		\/* included in union to ensure alignment *\/$/;"	m	union:small_pool_struct	file:
dummy	.\jpegint.h	/^struct jvirt_barray_control { long dummy; };$/;"	m	struct:jvirt_barray_control
dummy	.\jpegint.h	/^struct jvirt_sarray_control { long dummy; };$/;"	m	struct:jvirt_sarray_control
dummy	.\jpeglib.h	/^struct jpeg_c_coef_controller { long dummy; };$/;"	m	struct:jpeg_c_coef_controller
dummy	.\jpeglib.h	/^struct jpeg_c_main_controller { long dummy; };$/;"	m	struct:jpeg_c_main_controller
dummy	.\jpeglib.h	/^struct jpeg_c_prep_controller { long dummy; };$/;"	m	struct:jpeg_c_prep_controller
dummy	.\jpeglib.h	/^struct jpeg_color_converter { long dummy; };$/;"	m	struct:jpeg_color_converter
dummy	.\jpeglib.h	/^struct jpeg_color_deconverter { long dummy; };$/;"	m	struct:jpeg_color_deconverter
dummy	.\jpeglib.h	/^struct jpeg_color_quantizer { long dummy; };$/;"	m	struct:jpeg_color_quantizer
dummy	.\jpeglib.h	/^struct jpeg_comp_master { long dummy; };$/;"	m	struct:jpeg_comp_master
dummy	.\jpeglib.h	/^struct jpeg_d_coef_controller { long dummy; };$/;"	m	struct:jpeg_d_coef_controller
dummy	.\jpeglib.h	/^struct jpeg_d_main_controller { long dummy; };$/;"	m	struct:jpeg_d_main_controller
dummy	.\jpeglib.h	/^struct jpeg_d_post_controller { long dummy; };$/;"	m	struct:jpeg_d_post_controller
dummy	.\jpeglib.h	/^struct jpeg_decomp_master { long dummy; };$/;"	m	struct:jpeg_decomp_master
dummy	.\jpeglib.h	/^struct jpeg_downsampler { long dummy; };$/;"	m	struct:jpeg_downsampler
dummy	.\jpeglib.h	/^struct jpeg_entropy_decoder { long dummy; };$/;"	m	struct:jpeg_entropy_decoder
dummy	.\jpeglib.h	/^struct jpeg_entropy_encoder { long dummy; };$/;"	m	struct:jpeg_entropy_encoder
dummy	.\jpeglib.h	/^struct jpeg_forward_dct { long dummy; };$/;"	m	struct:jpeg_forward_dct
dummy	.\jpeglib.h	/^struct jpeg_input_controller { long dummy; };$/;"	m	struct:jpeg_input_controller
dummy	.\jpeglib.h	/^struct jpeg_inverse_dct { long dummy; };$/;"	m	struct:jpeg_inverse_dct
dummy	.\jpeglib.h	/^struct jpeg_marker_reader { long dummy; };$/;"	m	struct:jpeg_marker_reader
dummy	.\jpeglib.h	/^struct jpeg_marker_writer { long dummy; };$/;"	m	struct:jpeg_marker_writer
dummy	.\jpeglib.h	/^struct jpeg_upsampler { long dummy; };$/;"	m	struct:jpeg_upsampler
dummy	.\jpeglib.h	/^struct jvirt_barray_control { long dummy; };$/;"	m	struct:jvirt_barray_control
dummy	.\jpeglib.h	/^struct jvirt_sarray_control { long dummy; };$/;"	m	struct:jvirt_sarray_control
dummy_buffer	.\jctrans.c	/^  JBLOCKROW dummy_buffer[C_MAX_BLOCKS_IN_MCU];$/;"	m	struct:__anon18	file:
dummy_consume_data	.\jdcoefct.c	/^dummy_consume_data (j_decompress_ptr cinfo)$/;"	f
dump_buffer	.\jcphuff.c	/^dump_buffer (phuff_entropy_ptr entropy)$/;"	f
dup_pixel_count	.\rdtarga.c	/^  int dup_pixel_count;		\/* # of times to duplicate previous pixel *\/$/;"	m	struct:_tga_source_struct	file:
dx	.\jmemdos.c	/^	unsigned short ax, dx, bx;$/;"	m	struct:__anon41	file:
dx	.\jmemdos.c	/^	unsigned short ax, dx, bx;$/;"	m	struct:__anon42	file:
ehufco	.\jchuff.h	/^  unsigned int ehufco[256];	\/* code for each symbol *\/$/;"	m	struct:__anon9
ehufsi	.\jchuff.h	/^  char ehufsi[256];		\/* length of code for each symbol *\/$/;"	m	struct:__anon9
emit_2bytes	.\jcmarker.c	/^emit_2bytes (j_compress_ptr cinfo, int value)$/;"	f
emit_adobe_app14	.\jcmarker.c	/^emit_adobe_app14 (j_compress_ptr cinfo)$/;"	f
emit_bits	.\jcphuff.c	/^emit_bits (phuff_entropy_ptr entropy, unsigned int code, int size)$/;"	f
emit_buffered_bits	.\jcphuff.c	/^emit_buffered_bits (phuff_entropy_ptr entropy, char * bufstart,$/;"	f
emit_byte	.\jchuff.c	270;"	d	file:
emit_byte	.\jcmarker.c	/^emit_byte (j_compress_ptr cinfo, int val)$/;"	f
emit_byte	.\jcphuff.c	198;"	d	file:
emit_dac	.\jcmarker.c	/^emit_dac (j_compress_ptr cinfo)$/;"	f
emit_dht	.\jcmarker.c	/^emit_dht (j_compress_ptr cinfo, int index, boolean is_ac)$/;"	f
emit_dqt	.\jcmarker.c	/^emit_dqt (j_compress_ptr cinfo, int index)$/;"	f
emit_dri	.\jcmarker.c	/^emit_dri (j_compress_ptr cinfo)$/;"	f
emit_eobrun	.\jcphuff.c	/^emit_eobrun (phuff_entropy_ptr entropy)$/;"	f
emit_header	.\wrgif.c	/^emit_header (gif_dest_ptr dinfo, int num_colors, JSAMPARRAY colormap)$/;"	f
emit_jfif_app0	.\jcmarker.c	/^emit_jfif_app0 (j_compress_ptr cinfo)$/;"	f
emit_marker	.\jcmarker.c	/^emit_marker (j_compress_ptr cinfo, JPEG_MARKER mark)$/;"	f
emit_message	.\jerror.c	/^emit_message (j_common_ptr cinfo, int msg_level)$/;"	f
emit_restart	.\jcphuff.c	/^emit_restart (phuff_entropy_ptr entropy, int restart_num)$/;"	f
emit_sof	.\jcmarker.c	/^emit_sof (j_compress_ptr cinfo, JPEG_MARKER code)$/;"	f
emit_sos	.\jcmarker.c	/^emit_sos (j_compress_ptr cinfo)$/;"	f
emit_symbol	.\jcphuff.c	/^emit_symbol (phuff_entropy_ptr entropy, int tbl_no, int symbol)$/;"	f
ems_handle	.\jmemsys.h	/^  EMSH ems_handle;		\/* handle if it's a chunk of EMS *\/$/;"	m	union:__anon49
enable_1pass_quant	.\jpeglib.h	/^  boolean enable_1pass_quant;	\/* enable future use of 1-pass quantizer *\/$/;"	m	struct:jpeg_decompress_struct
enable_2pass_quant	.\jpeglib.h	/^  boolean enable_2pass_quant;	\/* enable future use of 2-pass quantizer *\/$/;"	m	struct:jpeg_decompress_struct
enable_external_quant	.\jpeglib.h	/^  boolean enable_external_quant;\/* enable future use of external colormap *\/$/;"	m	struct:jpeg_decompress_struct
enable_signal_catcher	.\cdjpeg.c	/^enable_signal_catcher (j_common_ptr cinfo)$/;"	f
enable_signal_catcher	.\cdjpeg.h	110;"	d
encode_mcu_AC_first	.\jcphuff.c	/^METHODDEF(boolean) encode_mcu_AC_first JPP((j_compress_ptr cinfo,$/;"	v
encode_mcu_AC_refine	.\jcphuff.c	/^METHODDEF(boolean) encode_mcu_AC_refine JPP((j_compress_ptr cinfo,$/;"	v
end_progress_monitor	.\cdjpeg.c	/^end_progress_monitor (j_common_ptr cinfo)$/;"	f
end_progress_monitor	.\cdjpeg.h	112;"	d
entropy	.\jpeglib.h	/^  struct jpeg_entropy_decoder * entropy;$/;"	m	struct:jpeg_decompress_struct	typeref:struct:jpeg_decompress_struct::jpeg_entropy_decoder
entropy	.\jpeglib.h	/^  struct jpeg_entropy_encoder * entropy;$/;"	m	struct:jpeg_compress_struct	typeref:struct:jpeg_compress_struct::jpeg_entropy_encoder
eoi_reached	.\jpegint.h	/^  boolean eoi_reached;		\/* True when EOI has been consumed *\/$/;"	m	struct:jpeg_input_controller
error_exit	.\ckconfig.c	/^  int (*error_exit) (char *msgtext);$/;"	m	struct:methods_struct	file:
error_exit	.\jerror.c	/^error_exit (j_common_ptr cinfo)$/;"	f
error_limiter	.\jquant2.c	/^  int * error_limiter;		\/* table for clamping the applied error *\/$/;"	m	struct:__anon60	file:
examine_app0	.\jdmarker.c	/^examine_app0 (j_decompress_ptr cinfo, JOCTET FAR * data,$/;"	f
examine_app14	.\jdmarker.c	/^examine_app14 (j_decompress_ptr cinfo, JOCTET FAR * data,$/;"	f
expand_bottom_edge	.\jcprepct.c	/^expand_bottom_edge (JSAMPARRAY image_data, JDIMENSION num_cols,$/;"	f
expand_right_edge	.\jcsample.c	/^expand_right_edge (JSAMPARRAY image_data, int num_rows,$/;"	f
extend_offset	.\jdhuff.c	/^static const int extend_offset[16] = \/* entry n is (-1 << n) + 1 *\/$/;"	v	file:
extend_offset	.\jdphuff.c	/^static const int extend_offset[16] = \/* entry n is (-1 << n) + 1 *\/$/;"	v	file:
extend_test	.\jdhuff.c	/^static const int extend_test[16] =   \/* entry n is 2**(n-1) *\/$/;"	v	file:
extend_test	.\jdphuff.c	/^static const int extend_test[16] =   \/* entry n is 2**(n-1) *\/$/;"	v	file:
extra_pool_slop	.\jmemmgr.c	/^static const size_t extra_pool_slop[JPOOL_NUMPOOLS] = $/;"	v	file:
far_free	.\jmemdos.c	59;"	d	file:
far_free	.\jmemdos.c	64;"	d	file:
far_free	.\jmemdos.c	70;"	d	file:
far_malloc	.\jmemdos.c	58;"	d	file:
far_malloc	.\jmemdos.c	63;"	d	file:
far_malloc	.\jmemdos.c	69;"	d	file:
fdct	.\jpeglib.h	/^  struct jpeg_forward_dct * fdct;$/;"	m	struct:jpeg_compress_struct	typeref:struct:jpeg_compress_struct::jpeg_forward_dct
file_handle	.\jmemsys.h	/^  short file_handle;		\/* DOS file handle if it's a temp file *\/$/;"	m	union:__anon49
fill_a_scan	.\jcparam.c	/^fill_a_scan (jpeg_scan_info * scanptr, int ci,$/;"	f
fill_dc_scans	.\jcparam.c	/^fill_dc_scans (jpeg_scan_info * scanptr, int ncomps, int Ah, int Al)$/;"	f
fill_inverse_cmap	.\jquant2.c	/^fill_inverse_cmap (j_decompress_ptr cinfo, int c0, int c1, int c2)$/;"	f
fill_scans	.\jcparam.c	/^fill_scans (jpeg_scan_info * scanptr, int ncomps,$/;"	f
find_best_colors	.\jquant2.c	/^find_best_colors (j_decompress_ptr cinfo, int minc0, int minc1, int minc2,$/;"	f
find_nearby_colors	.\jquant2.c	/^find_nearby_colors (j_decompress_ptr cinfo, int minc0, int minc1, int minc2,$/;"	f
finish_input_bmp	.\rdbmp.c	/^finish_input_bmp (j_compress_ptr cinfo, cjpeg_source_ptr sinfo)$/;"	f
finish_input_pass	.\jdinput.c	/^finish_input_pass (j_decompress_ptr cinfo)$/;"	f
finish_input_ppm	.\rdppm.c	/^finish_input_ppm (j_compress_ptr cinfo, cjpeg_source_ptr sinfo)$/;"	f
finish_input_rle	.\rdrle.c	/^finish_input_rle (j_compress_ptr cinfo, cjpeg_source_ptr sinfo)$/;"	f
finish_input_tga	.\rdtarga.c	/^finish_input_tga (j_compress_ptr cinfo, cjpeg_source_ptr sinfo)$/;"	f
finish_output_bmp	.\wrbmp.c	/^finish_output_bmp (j_decompress_ptr cinfo, djpeg_dest_ptr dinfo)$/;"	f
finish_output_gif	.\wrgif.c	/^finish_output_gif (j_decompress_ptr cinfo, djpeg_dest_ptr dinfo)$/;"	f
finish_output_pass	.\jdmaster.c	/^finish_output_pass (j_decompress_ptr cinfo)$/;"	f
finish_output_ppm	.\wrppm.c	/^finish_output_ppm (j_decompress_ptr cinfo, djpeg_dest_ptr dinfo)$/;"	f
finish_output_rle	.\wrrle.c	/^finish_output_rle (j_decompress_ptr cinfo, djpeg_dest_ptr dinfo)$/;"	f
finish_output_tga	.\wrtarga.c	/^finish_output_tga (j_decompress_ptr cinfo, djpeg_dest_ptr dinfo)$/;"	f
finish_pass1	.\jquant2.c	/^finish_pass1 (j_decompress_ptr cinfo)$/;"	f
finish_pass2	.\jquant2.c	/^finish_pass2 (j_decompress_ptr cinfo)$/;"	f
finish_pass_1_quant	.\jquant1.c	/^finish_pass_1_quant (j_decompress_ptr cinfo)$/;"	f
finish_pass_gather	.\jchuff.c	/^METHODDEF(void) finish_pass_gather JPP((j_compress_ptr cinfo));$/;"	v
finish_pass_gather	.\jchuff.c	/^finish_pass_gather (j_compress_ptr cinfo)$/;"	f
finish_pass_gather_phuff	.\jcphuff.c	/^finish_pass_gather_phuff (j_compress_ptr cinfo)$/;"	f
finish_pass_huff	.\jchuff.c	/^METHODDEF(void) finish_pass_huff JPP((j_compress_ptr cinfo));$/;"	v
finish_pass_huff	.\jchuff.c	/^finish_pass_huff (j_compress_ptr cinfo)$/;"	f
finish_pass_master	.\jcmaster.c	/^finish_pass_master (j_compress_ptr cinfo)$/;"	f
finish_pass_phuff	.\jcphuff.c	/^finish_pass_phuff (j_compress_ptr cinfo)$/;"	f
first_addon_message	.\jpeglib.h	/^  int first_addon_message;	\/* code for first string in addon table *\/$/;"	m	struct:jpeg_error_mgr
first_marker	.\rdjpgcom.c	/^first_marker (void)$/;"	f	file:
first_marker	.\wrjpgcom.c	/^first_marker (void)$/;"	f	file:
first_pool_slop	.\jmemmgr.c	/^static const size_t first_pool_slop[JPOOL_NUMPOOLS] = $/;"	v	file:
first_undef_row	.\jmemmgr.c	/^  JDIMENSION first_undef_row;	\/* row # of first uninitialized row *\/$/;"	m	struct:jvirt_barray_control	file:
first_undef_row	.\jmemmgr.c	/^  JDIMENSION first_undef_row;	\/* row # of first uninitialized row *\/$/;"	m	struct:jvirt_sarray_control	file:
float_array	.\jddctmgr.c	/^  FLOAT_MULT_TYPE float_array[DCTSIZE2];$/;"	m	union:__anon24	file:
float_divisors	.\jcdctmgr.c	/^  FAST_FLOAT * float_divisors[NUM_QUANT_TBLS];$/;"	m	struct:__anon5	file:
flush_bits	.\jcphuff.c	/^flush_bits (phuff_entropy_ptr entropy)$/;"	f
flush_packet	.\wrgif.c	/^flush_packet (gif_dest_ptr dinfo)$/;"	f
force_grayscale	.\transupp.h	/^  boolean force_grayscale;	\/* if TRUE, convert color image to grayscale *\/$/;"	m	struct:__anon65
format_message	.\jerror.c	/^format_message (j_common_ptr cinfo, char * buffer)$/;"	f
forward_DCT	.\jcdctmgr.c	/^forward_DCT (j_compress_ptr cinfo, jpeg_component_info * compptr,$/;"	f
forward_DCT_float	.\jcdctmgr.c	/^forward_DCT_float (j_compress_ptr cinfo, jpeg_component_info * compptr,$/;"	f
free_in_buffer	.\jchuff.c	/^  size_t free_in_buffer;	\/* # of byte spaces remaining in buffer *\/$/;"	m	struct:__anon8	file:
free_in_buffer	.\jcphuff.c	/^  size_t free_in_buffer;	\/* # of byte spaces remaining in buffer *\/$/;"	m	struct:__anon15	file:
free_in_buffer	.\jpeglib.h	/^  size_t free_in_buffer;	\/* # of byte spaces remaining in buffer *\/$/;"	m	struct:jpeg_destination_mgr
free_pool	.\jmemmgr.c	/^free_pool (j_common_ptr cinfo, int pool_id)$/;"	f
fserrors	.\jquant1.c	/^  FSERRPTR fserrors[MAX_Q_COMPS]; \/* accumulated errors *\/$/;"	m	struct:__anon59	file:
fserrors	.\jquant2.c	/^  FSERRPTR fserrors;		\/* accumulated errors *\/$/;"	m	struct:__anon60	file:
fullsize_downsample	.\jcsample.c	/^fullsize_downsample (j_compress_ptr cinfo, jpeg_component_info * compptr,$/;"	f
fullsize_smooth_downsample	.\jcsample.c	/^fullsize_smooth_downsample (j_compress_ptr cinfo, jpeg_component_info *compptr,$/;"	f
fullsize_upsample	.\jdsample.c	/^fullsize_upsample (j_decompress_ptr cinfo, jpeg_component_info * compptr,$/;"	f
gather_statistics	.\jcphuff.c	/^  boolean gather_statistics;$/;"	m	struct:__anon15	file:
get_32bit_row	.\rdtarga.c	263;"	d	file:
get_buffer	.\jdhuff.h	/^  bit_buf_type get_buffer;	\/* current bit-extraction buffer *\/$/;"	m	struct:__anon28
get_buffer	.\jdhuff.h	/^  bit_buf_type get_buffer;	\/* current bit-extraction buffer *\/$/;"	m	struct:__anon29
get_dac	.\jdmarker.c	413;"	d	file:
gif_dest_ptr	.\wrgif.c	/^typedef gif_dest_struct * gif_dest_ptr;$/;"	t	file:
gif_dest_struct	.\wrgif.c	/^} gif_dest_struct;$/;"	t	typeref:struct:__anon68	file:
gray_rgb_convert	.\jdcolor.c	/^gray_rgb_convert (j_decompress_ptr cinfo,$/;"	f
grayscale_convert	.\jccolor.c	/^grayscale_convert (j_compress_ptr cinfo,$/;"	f
grayscale_convert	.\jdcolor.c	/^grayscale_convert (j_decompress_ptr cinfo,$/;"	f
h2v1_downsample	.\jcsample.c	/^h2v1_downsample (j_compress_ptr cinfo, jpeg_component_info * compptr,$/;"	f
h2v1_fancy_upsample	.\jdsample.c	/^h2v1_fancy_upsample (j_decompress_ptr cinfo, jpeg_component_info * compptr,$/;"	f
h2v1_merged_upsample	.\jdmerge.c	/^h2v1_merged_upsample (j_decompress_ptr cinfo,$/;"	f
h2v1_upsample	.\jdsample.c	/^h2v1_upsample (j_decompress_ptr cinfo, jpeg_component_info * compptr,$/;"	f
h2v2_downsample	.\jcsample.c	/^h2v2_downsample (j_compress_ptr cinfo, jpeg_component_info * compptr,$/;"	f
h2v2_fancy_upsample	.\jdsample.c	/^h2v2_fancy_upsample (j_decompress_ptr cinfo, jpeg_component_info * compptr,$/;"	f
h2v2_merged_upsample	.\jdmerge.c	/^h2v2_merged_upsample (j_decompress_ptr cinfo,$/;"	f
h2v2_smooth_downsample	.\jcsample.c	/^h2v2_smooth_downsample (j_compress_ptr cinfo, jpeg_component_info * compptr,$/;"	f
h2v2_upsample	.\jdsample.c	/^h2v2_upsample (j_decompress_ptr cinfo, jpeg_component_info * compptr,$/;"	f
h_expand	.\jdsample.c	/^  UINT8 h_expand[MAX_COMPONENTS];$/;"	m	struct:__anon39	file:
h_samp_factor	.\jpeglib.h	/^  int h_samp_factor;		\/* horizontal sampling factor (1..4) *\/$/;"	m	struct:__anon53
handle	.\jmemsys.h	/^  handle_union handle;		\/* reference to backing-store storage object *\/$/;"	m	struct:backing_store_struct
handle_union	.\jmemsys.h	/^} handle_union;$/;"	t	typeref:union:__anon49
has_multiple_scans	.\jpegint.h	/^  boolean has_multiple_scans;	\/* True if file has multiple scans *\/$/;"	m	struct:jpeg_input_controller
hdr	.\jmemmgr.c	/^  } hdr;$/;"	m	union:large_pool_struct	typeref:struct:large_pool_struct::__anon47	file:
hdr	.\jmemmgr.c	/^  } hdr;$/;"	m	union:small_pool_struct	typeref:struct:small_pool_struct::__anon46	file:
header	.\rdrle.c	/^  rle_hdr header;               \/* Input file information *\/$/;"	m	struct:_rle_source_struct	file:
height_in_blocks	.\jpeglib.h	/^  JDIMENSION height_in_blocks;$/;"	m	struct:__anon53
hist1d	.\jquant2.c	/^typedef histcell hist1d[HIST_C2_ELEMS]; \/* typedefs for the array *\/$/;"	t	file:
hist2d	.\jquant2.c	/^typedef hist1d FAR * hist2d;	\/* type for the 2nd-level pointers *\/$/;"	t	file:
hist3d	.\jquant2.c	/^typedef hist2d * hist3d;	\/* type for top-level pointer *\/$/;"	t	file:
histcell	.\jquant2.c	/^typedef UINT16 histcell;	\/* histogram cell; prefer an unsigned type *\/$/;"	t	file:
histogram	.\jquant2.c	/^  hist3d histogram;		\/* pointer to the histogram *\/$/;"	m	struct:__anon60	file:
histptr	.\jquant2.c	/^typedef histcell FAR * histptr;	\/* for pointers to histogram cells *\/$/;"	t	file:
htest_one_block	.\jchuff.c	/^htest_one_block (j_compress_ptr cinfo, JCOEFPTR block, int last_dc_val,$/;"	f
huff_entropy_decoder	.\jdhuff.c	/^} huff_entropy_decoder;$/;"	t	typeref:struct:__anon26	file:
huff_entropy_encoder	.\jchuff.c	/^} huff_entropy_encoder;$/;"	t	typeref:struct:__anon7	file:
huff_entropy_ptr	.\jchuff.c	/^typedef huff_entropy_encoder * huff_entropy_ptr;$/;"	t	file:
huff_entropy_ptr	.\jdhuff.c	/^typedef huff_entropy_decoder * huff_entropy_ptr;$/;"	t	file:
huff_opt_pass	.\jcmaster.c	/^	huff_opt_pass,		\/* Huffman code optimization pass *\/$/;"	e	enum:__anon13	file:
huffval	.\jpeglib.h	/^  UINT8 huffval[256];		\/* The symbols, in order of incr code length *\/$/;"	m	struct:__anon52
i	.\jpeglib.h	/^    int i[8];$/;"	m	union:jpeg_error_mgr::__anon58
iMCU_row_ctr	.\jdmainct.c	/^  JDIMENSION iMCU_row_ctr;	\/* counts iMCU rows to detect image top\/bot *\/$/;"	m	struct:__anon31	file:
iMCU_row_num	.\jccoefct.c	/^  JDIMENSION iMCU_row_num;	\/* iMCU row # within image *\/$/;"	m	struct:__anon3	file:
iMCU_row_num	.\jctrans.c	/^  JDIMENSION iMCU_row_num;	\/* iMCU row # within image *\/$/;"	m	struct:__anon18	file:
idct	.\jpeglib.h	/^  struct jpeg_inverse_dct * idct;$/;"	m	struct:jpeg_decompress_struct	typeref:struct:jpeg_decompress_struct::jpeg_inverse_dct
ifast_array	.\jddctmgr.c	/^  IFAST_MULT_TYPE ifast_array[DCTSIZE2];$/;"	m	union:__anon24	file:
image	.\rdrle.c	/^  jvirt_sarray_ptr image;       \/* virtual array to hold the image *\/$/;"	m	struct:_rle_source_struct	file:
image	.\wrrle.c	/^  jvirt_sarray_ptr image;	\/* virtual array to store the output image *\/$/;"	m	struct:__anon70	file:
image_height	.\jpeglib.h	/^  JDIMENSION image_height;	\/* input image height *\/$/;"	m	struct:jpeg_compress_struct
image_height	.\jpeglib.h	/^  JDIMENSION image_height;	\/* nominal image height *\/$/;"	m	struct:jpeg_decompress_struct
image_width	.\jpeglib.h	/^  JDIMENSION image_width;	\/* input image width *\/$/;"	m	struct:jpeg_compress_struct
image_width	.\jpeglib.h	/^  JDIMENSION image_width;	\/* nominal image width (from SOF marker) *\/$/;"	m	struct:jpeg_decompress_struct
in_color_space	.\jpeglib.h	/^  J_COLOR_SPACE in_color_space;	\/* colorspace of input image *\/$/;"	m	struct:jpeg_compress_struct
infile	.\jdatasrc.c	/^  FILE * infile;		\/* source stream *\/$/;"	m	struct:__anon20	file:
infile	.\rdjpgcom.c	/^static FILE * infile;		\/* input JPEG file *\/$/;"	v	file:
infile	.\wrjpgcom.c	/^static FILE * infile;		\/* input JPEG file *\/$/;"	v	file:
inheaders	.\jdinput.c	/^  boolean inheaders;		\/* TRUE until first SOS is reached *\/$/;"	m	struct:__anon30	file:
init_destination	.\jdatadst.c	/^init_destination (j_compress_ptr cinfo)$/;"	f
init_error_limit	.\jquant2.c	/^init_error_limit (j_decompress_ptr cinfo)$/;"	f
init_source	.\jdatasrc.c	/^init_source (j_decompress_ptr cinfo)$/;"	f
initial_setup	.\jcmaster.c	/^initial_setup (j_compress_ptr cinfo)$/;"	f
initial_setup	.\jdinput.c	/^initial_setup (j_decompress_ptr cinfo)$/;"	f
input_components	.\jpeglib.h	/^  int input_components;		\/* # of color components in input image *\/$/;"	m	struct:jpeg_compress_struct
input_file	.\cdjpeg.h	/^  FILE *input_file;$/;"	m	struct:cjpeg_source_struct
input_gamma	.\jpeglib.h	/^  double input_gamma;		\/* image gamma of input image *\/$/;"	m	struct:jpeg_compress_struct
input_iMCU_row	.\jpeglib.h	/^  JDIMENSION input_iMCU_row;	\/* Number of iMCU rows completed *\/$/;"	m	struct:jpeg_decompress_struct
input_scan_number	.\jpeglib.h	/^  int input_scan_number;	\/* Number of SOS markers seen so far *\/$/;"	m	struct:jpeg_decompress_struct
inputctl	.\jpeglib.h	/^  struct jpeg_input_controller * inputctl;$/;"	m	struct:jpeg_decompress_struct	typeref:struct:jpeg_decompress_struct::jpeg_input_controller
insufficient_data	.\jpegint.h	/^  boolean insufficient_data;	\/* set TRUE after emitting warning *\/$/;"	m	struct:jpeg_entropy_decoder
int_downsample	.\jcsample.c	/^int_downsample (j_compress_ptr cinfo, jpeg_component_info * compptr,$/;"	f
int_upsample	.\jdsample.c	/^int_upsample (j_decompress_ptr cinfo, jpeg_component_info * compptr,$/;"	f
inverse_DCT	.\jpegint.h	/^  inverse_DCT_method_ptr inverse_DCT[MAX_COMPONENTS];$/;"	m	struct:jpeg_inverse_dct
iobuffer	.\rdppm.c	/^  U_CHAR *iobuffer;		\/* non-FAR pointer to I\/O buffer *\/$/;"	m	struct:__anon62	file:
iobuffer	.\wrppm.c	/^  char *iobuffer;		\/* fwrite's I\/O buffer *\/$/;"	m	struct:__anon69	file:
iobuffer	.\wrtarga.c	/^  char *iobuffer;		\/* physical I\/O buffer *\/$/;"	m	struct:__anon71	file:
is_alnum	.\ansi2knr.c	306;"	d	file:
is_alpha	.\ansi2knr.c	305;"	d	file:
is_ascii	.\ansi2knr.c	299;"	d	file:
is_ascii	.\ansi2knr.c	301;"	d	file:
is_char_signed	.\ckconfig.c	/^int is_char_signed (int arg)$/;"	f
is_dummy_pass	.\jpegint.h	/^  boolean is_dummy_pass;	\/* True during 1st pass for 2-pass quant *\/$/;"	m	struct:jpeg_decomp_master
is_last_pass	.\jpegint.h	/^  boolean is_last_pass;		\/* True during last pass *\/$/;"	m	struct:jpeg_comp_master
is_os2	.\wrbmp.c	/^  boolean is_os2;		\/* saves the OS2 format request flag *\/$/;"	m	struct:__anon67	file:
is_padded	.\jquant1.c	/^  boolean is_padded;		\/* is the colorindex padded for odither? *\/$/;"	m	struct:__anon59	file:
is_shifting_signed	.\ckconfig.c	/^int is_shifting_signed (long arg)$/;"	f
is_space	.\ansi2knr.c	304;"	d	file:
is_targa	.\cjpeg.c	/^static boolean is_targa;	\/* records user -targa switch *\/$/;"	v	file:
isidchar	.\ansi2knr.c	309;"	d	file:
isidfirstchar	.\ansi2knr.c	310;"	d	file:
islow_array	.\jddctmgr.c	/^  ISLOW_MULT_TYPE islow_array[DCTSIZE2];$/;"	m	union:__anon24	file:
j_common_ptr	.\jpeglib.h	/^typedef struct jpeg_common_struct * j_common_ptr;$/;"	t	typeref:struct:jpeg_common_struct
j_compress_ptr	.\jpeglib.h	/^typedef struct jpeg_compress_struct * j_compress_ptr;$/;"	t	typeref:struct:jpeg_compress_struct
j_decompress_ptr	.\jpeglib.h	/^typedef struct jpeg_decompress_struct * j_decompress_ptr;$/;"	t	typeref:struct:jpeg_decompress_struct
jcopy_block_row	.\jpegint.h	326;"	d
jcopy_block_row	.\jutils.c	/^jcopy_block_row (JBLOCKROW input_row, JBLOCKROW output_row,$/;"	f
jcopy_markers_execute	.\transupp.c	/^jcopy_markers_execute (j_decompress_ptr srcinfo, j_compress_ptr dstinfo,$/;"	f
jcopy_markers_execute	.\transupp.h	32;"	d
jcopy_markers_setup	.\transupp.c	/^jcopy_markers_setup (j_decompress_ptr srcinfo, JCOPY_OPTION option)$/;"	f
jcopy_markers_setup	.\transupp.h	31;"	d
jcopy_sample_rows	.\jpegint.h	325;"	d
jcopy_sample_rows	.\jutils.c	/^jcopy_sample_rows (JSAMPARRAY input_array, int source_row,$/;"	f
jdiv_round_up	.\jpegint.h	323;"	d
jdiv_round_up	.\jutils.c	/^jdiv_round_up (long a, long b)$/;"	f
jinit_1pass_quantizer	.\jpegint.h	319;"	d
jinit_1pass_quantizer	.\jquant1.c	/^jinit_1pass_quantizer (j_decompress_ptr cinfo)$/;"	f
jinit_2pass_quantizer	.\jpegint.h	320;"	d
jinit_2pass_quantizer	.\jquant2.c	/^jinit_2pass_quantizer (j_decompress_ptr cinfo)$/;"	f
jinit_c_coef_controller	.\jccoefct.c	/^jinit_c_coef_controller (j_compress_ptr cinfo, boolean need_full_buffer)$/;"	f
jinit_c_coef_controller	.\jpegint.h	301;"	d
jinit_c_main_controller	.\jcmainct.c	/^jinit_c_main_controller (j_compress_ptr cinfo, boolean need_full_buffer)$/;"	f
jinit_c_main_controller	.\jpegint.h	299;"	d
jinit_c_master_control	.\jcmaster.c	/^jinit_c_master_control (j_compress_ptr cinfo, boolean transcode_only)$/;"	f
jinit_c_master_control	.\jpegint.h	298;"	d
jinit_c_prep_controller	.\jcprepct.c	/^jinit_c_prep_controller (j_compress_ptr cinfo, boolean need_full_buffer)$/;"	f
jinit_c_prep_controller	.\jpegint.h	300;"	d
jinit_color_converter	.\jccolor.c	/^jinit_color_converter (j_compress_ptr cinfo)$/;"	f
jinit_color_converter	.\jpegint.h	302;"	d
jinit_color_deconverter	.\jdcolor.c	/^jinit_color_deconverter (j_decompress_ptr cinfo)$/;"	f
jinit_color_deconverter	.\jpegint.h	318;"	d
jinit_compress_master	.\jcinit.c	/^jinit_compress_master (j_compress_ptr cinfo)$/;"	f
jinit_compress_master	.\jpegint.h	297;"	d
jinit_d_coef_controller	.\jdcoefct.c	/^jinit_d_coef_controller (j_decompress_ptr cinfo, boolean need_full_buffer)$/;"	f
jinit_d_coef_controller	.\jpegint.h	310;"	d
jinit_d_main_controller	.\jdmainct.c	/^jinit_d_main_controller (j_decompress_ptr cinfo, boolean need_full_buffer)$/;"	f
jinit_d_main_controller	.\jpegint.h	309;"	d
jinit_d_post_controller	.\jdpostct.c	/^jinit_d_post_controller (j_decompress_ptr cinfo, boolean need_full_buffer)$/;"	f
jinit_d_post_controller	.\jpegint.h	311;"	d
jinit_downsampler	.\jcsample.c	/^jinit_downsampler (j_compress_ptr cinfo)$/;"	f
jinit_downsampler	.\jpegint.h	303;"	d
jinit_forward_dct	.\jcdctmgr.c	/^jinit_forward_dct (j_compress_ptr cinfo)$/;"	f
jinit_forward_dct	.\jpegint.h	304;"	d
jinit_huff_decoder	.\jdhuff.c	/^jinit_huff_decoder (j_decompress_ptr cinfo)$/;"	f
jinit_huff_decoder	.\jpegint.h	314;"	d
jinit_huff_encoder	.\jchuff.c	/^jinit_huff_encoder (j_compress_ptr cinfo)$/;"	f
jinit_huff_encoder	.\jpegint.h	305;"	d
jinit_input_controller	.\jdinput.c	/^jinit_input_controller (j_decompress_ptr cinfo)$/;"	f
jinit_input_controller	.\jpegint.h	312;"	d
jinit_inverse_dct	.\jddctmgr.c	/^jinit_inverse_dct (j_decompress_ptr cinfo)$/;"	f
jinit_inverse_dct	.\jpegint.h	316;"	d
jinit_marker_reader	.\jdmarker.c	/^jinit_marker_reader (j_decompress_ptr cinfo)$/;"	f
jinit_marker_reader	.\jpegint.h	313;"	d
jinit_marker_writer	.\jcmarker.c	/^jinit_marker_writer (j_compress_ptr cinfo)$/;"	f
jinit_marker_writer	.\jpegint.h	307;"	d
jinit_master_decompress	.\jdmaster.c	/^jinit_master_decompress (j_decompress_ptr cinfo)$/;"	f
jinit_master_decompress	.\jpegint.h	308;"	d
jinit_memory_mgr	.\jmemmgr.c	/^jinit_memory_mgr (j_common_ptr cinfo)$/;"	f
jinit_memory_mgr	.\jpegint.h	322;"	d
jinit_merged_upsampler	.\jdmerge.c	/^jinit_merged_upsampler (j_decompress_ptr cinfo)$/;"	f
jinit_merged_upsampler	.\jpegint.h	321;"	d
jinit_phuff_decoder	.\jdphuff.c	/^jinit_phuff_decoder (j_decompress_ptr cinfo)$/;"	f
jinit_phuff_decoder	.\jpegint.h	315;"	d
jinit_phuff_encoder	.\jcphuff.c	/^jinit_phuff_encoder (j_compress_ptr cinfo)$/;"	f
jinit_phuff_encoder	.\jpegint.h	306;"	d
jinit_read_bmp	.\cdjpeg.h	95;"	d
jinit_read_gif	.\cdjpeg.h	97;"	d
jinit_read_ppm	.\cdjpeg.h	99;"	d
jinit_read_rle	.\cdjpeg.h	101;"	d
jinit_read_targa	.\cdjpeg.h	103;"	d
jinit_upsampler	.\jdsample.c	/^jinit_upsampler (j_decompress_ptr cinfo)$/;"	f
jinit_upsampler	.\jpegint.h	317;"	d
jinit_write_bmp	.\cdjpeg.h	96;"	d
jinit_write_gif	.\cdjpeg.h	98;"	d
jinit_write_ppm	.\cdjpeg.h	100;"	d
jinit_write_rle	.\cdjpeg.h	102;"	d
jinit_write_targa	.\cdjpeg.h	104;"	d
jpeg_CreateCompress	.\jcapimin.c	/^jpeg_CreateCompress (j_compress_ptr cinfo, int version, size_t structsize)$/;"	f
jpeg_CreateCompress	.\jpeglib.h	833;"	d
jpeg_CreateDecompress	.\jdapimin.c	/^jpeg_CreateDecompress (j_decompress_ptr cinfo, int version, size_t structsize)$/;"	f
jpeg_CreateDecompress	.\jpeglib.h	834;"	d
jpeg_abort	.\jcomapi.c	/^jpeg_abort (j_common_ptr cinfo)$/;"	f
jpeg_abort	.\jpeglib.h	877;"	d
jpeg_abort_compress	.\jcapimin.c	/^jpeg_abort_compress (j_compress_ptr cinfo)$/;"	f
jpeg_abort_compress	.\jpeglib.h	875;"	d
jpeg_abort_decompress	.\jdapimin.c	/^jpeg_abort_decompress (j_decompress_ptr cinfo)$/;"	f
jpeg_abort_decompress	.\jpeglib.h	876;"	d
jpeg_add_quant_table	.\jcparam.c	/^jpeg_add_quant_table (j_compress_ptr cinfo, int which_tbl,$/;"	f
jpeg_add_quant_table	.\jpeglib.h	844;"	d
jpeg_alloc_huff_table	.\jcomapi.c	/^jpeg_alloc_huff_table (j_common_ptr cinfo)$/;"	f
jpeg_alloc_huff_table	.\jpeglib.h	849;"	d
jpeg_alloc_quant_table	.\jcomapi.c	/^jpeg_alloc_quant_table (j_common_ptr cinfo)$/;"	f
jpeg_alloc_quant_table	.\jpeglib.h	848;"	d
jpeg_c_coef_controller	.\jpegint.h	/^struct jpeg_c_coef_controller {$/;"	s
jpeg_c_coef_controller	.\jpeglib.h	/^struct jpeg_c_coef_controller { long dummy; };$/;"	s
jpeg_c_main_controller	.\jpegint.h	/^struct jpeg_c_main_controller {$/;"	s
jpeg_c_main_controller	.\jpeglib.h	/^struct jpeg_c_main_controller { long dummy; };$/;"	s
jpeg_c_prep_controller	.\jpegint.h	/^struct jpeg_c_prep_controller {$/;"	s
jpeg_c_prep_controller	.\jpeglib.h	/^struct jpeg_c_prep_controller { long dummy; };$/;"	s
jpeg_calc_output_dimensions	.\jdmaster.c	/^jpeg_calc_output_dimensions (j_decompress_ptr cinfo)$/;"	f
jpeg_calc_output_dimensions	.\jpeglib.h	869;"	d
jpeg_color_converter	.\jpegint.h	/^struct jpeg_color_converter {$/;"	s
jpeg_color_converter	.\jpeglib.h	/^struct jpeg_color_converter { long dummy; };$/;"	s
jpeg_color_deconverter	.\jpegint.h	/^struct jpeg_color_deconverter {$/;"	s
jpeg_color_deconverter	.\jpeglib.h	/^struct jpeg_color_deconverter { long dummy; };$/;"	s
jpeg_color_quantizer	.\jpegint.h	/^struct jpeg_color_quantizer {$/;"	s
jpeg_color_quantizer	.\jpeglib.h	/^struct jpeg_color_quantizer { long dummy; };$/;"	s
jpeg_color_space	.\jpeglib.h	/^  J_COLOR_SPACE jpeg_color_space; \/* colorspace of JPEG image *\/$/;"	m	struct:jpeg_compress_struct
jpeg_color_space	.\jpeglib.h	/^  J_COLOR_SPACE jpeg_color_space; \/* colorspace of JPEG image *\/$/;"	m	struct:jpeg_decompress_struct
jpeg_common_fields	.\jpeglib.h	/^  jpeg_common_fields;		\/* Fields common to both master struct types *\/$/;"	m	struct:jpeg_common_struct
jpeg_common_fields	.\jpeglib.h	/^  jpeg_common_fields;		\/* Fields shared with jpeg_compress_struct *\/$/;"	m	struct:jpeg_decompress_struct
jpeg_common_fields	.\jpeglib.h	/^  jpeg_common_fields;		\/* Fields shared with jpeg_decompress_struct *\/$/;"	m	struct:jpeg_compress_struct
jpeg_common_fields	.\jpeglib.h	241;"	d
jpeg_common_struct	.\jpeglib.h	/^struct jpeg_common_struct {$/;"	s
jpeg_comp_master	.\jpegint.h	/^struct jpeg_comp_master {$/;"	s
jpeg_comp_master	.\jpeglib.h	/^struct jpeg_comp_master { long dummy; };$/;"	s
jpeg_component_info	.\jpeglib.h	/^} jpeg_component_info;$/;"	t	typeref:struct:__anon53
jpeg_compress_struct	.\jpeglib.h	/^struct jpeg_compress_struct {$/;"	s
jpeg_consume_input	.\jdapimin.c	/^jpeg_consume_input (j_decompress_ptr cinfo)$/;"	f
jpeg_consume_input	.\jpeglib.h	868;"	d
jpeg_copy_critical_parameters	.\jctrans.c	/^jpeg_copy_critical_parameters (j_decompress_ptr srcinfo,$/;"	f
jpeg_copy_critical_parameters	.\jpeglib.h	874;"	d
jpeg_create_compress	.\jpeglib.h	894;"	d
jpeg_create_decompress	.\jpeglib.h	897;"	d
jpeg_d_coef_controller	.\jpegint.h	/^struct jpeg_d_coef_controller {$/;"	s
jpeg_d_coef_controller	.\jpeglib.h	/^struct jpeg_d_coef_controller { long dummy; };$/;"	s
jpeg_d_main_controller	.\jpegint.h	/^struct jpeg_d_main_controller {$/;"	s
jpeg_d_main_controller	.\jpeglib.h	/^struct jpeg_d_main_controller { long dummy; };$/;"	s
jpeg_d_post_controller	.\jpegint.h	/^struct jpeg_d_post_controller {$/;"	s
jpeg_d_post_controller	.\jpeglib.h	/^struct jpeg_d_post_controller { long dummy; };$/;"	s
jpeg_decomp_master	.\jpegint.h	/^struct jpeg_decomp_master {$/;"	s
jpeg_decomp_master	.\jpeglib.h	/^struct jpeg_decomp_master { long dummy; };$/;"	s
jpeg_decompress_struct	.\jpeglib.h	/^struct jpeg_decompress_struct {$/;"	s
jpeg_default_colorspace	.\jcparam.c	/^jpeg_default_colorspace (j_compress_ptr cinfo)$/;"	f
jpeg_default_colorspace	.\jpeglib.h	841;"	d
jpeg_destination_mgr	.\jpeglib.h	/^struct jpeg_destination_mgr {$/;"	s
jpeg_destroy	.\jcomapi.c	/^jpeg_destroy (j_common_ptr cinfo)$/;"	f
jpeg_destroy	.\jpeglib.h	878;"	d
jpeg_destroy_compress	.\jcapimin.c	/^jpeg_destroy_compress (j_compress_ptr cinfo)$/;"	f
jpeg_destroy_compress	.\jpeglib.h	835;"	d
jpeg_destroy_decompress	.\jdapimin.c	/^jpeg_destroy_decompress (j_decompress_ptr cinfo)$/;"	f
jpeg_destroy_decompress	.\jpeglib.h	836;"	d
jpeg_downsampler	.\jpegint.h	/^struct jpeg_downsampler {$/;"	s
jpeg_downsampler	.\jpeglib.h	/^struct jpeg_downsampler { long dummy; };$/;"	s
jpeg_entropy_decoder	.\jpegint.h	/^struct jpeg_entropy_decoder {$/;"	s
jpeg_entropy_decoder	.\jpeglib.h	/^struct jpeg_entropy_decoder { long dummy; };$/;"	s
jpeg_entropy_encoder	.\jpegint.h	/^struct jpeg_entropy_encoder {$/;"	s
jpeg_entropy_encoder	.\jpeglib.h	/^struct jpeg_entropy_encoder { long dummy; };$/;"	s
jpeg_error_mgr	.\jpeglib.h	/^struct jpeg_error_mgr {$/;"	s
jpeg_fdct_float	.\jdct.h	86;"	d
jpeg_fdct_float	.\jfdctflt.c	/^jpeg_fdct_float (FAST_FLOAT * data)$/;"	f
jpeg_fdct_ifast	.\jdct.h	85;"	d
jpeg_fdct_ifast	.\jfdctfst.c	/^jpeg_fdct_ifast (DCTELEM * data)$/;"	f
jpeg_fdct_islow	.\jdct.h	84;"	d
jpeg_fdct_islow	.\jfdctint.c	/^jpeg_fdct_islow (DCTELEM * data)$/;"	f
jpeg_fill_bit_buffer	.\jdhuff.h	17;"	d
jpeg_finish_compress	.\jcapimin.c	/^jpeg_finish_compress (j_compress_ptr cinfo)$/;"	f
jpeg_finish_compress	.\jpeglib.h	852;"	d
jpeg_finish_decompress	.\jpeglib.h	861;"	d
jpeg_finish_output	.\jpeglib.h	865;"	d
jpeg_forward_dct	.\jpegint.h	/^struct jpeg_forward_dct {$/;"	s
jpeg_forward_dct	.\jpeglib.h	/^struct jpeg_forward_dct { long dummy; };$/;"	s
jpeg_free_large	.\jmemansi.c	/^jpeg_free_large (j_common_ptr cinfo, void FAR * object, size_t sizeofobject)$/;"	f
jpeg_free_large	.\jmemdos.c	/^jpeg_free_large (j_common_ptr cinfo, void FAR * object, size_t sizeofobject)$/;"	f
jpeg_free_large	.\jmemmac.c	/^jpeg_free_large (j_common_ptr cinfo, void FAR * object, size_t sizeofobject)$/;"	f
jpeg_free_large	.\jmemname.c	/^jpeg_free_large (j_common_ptr cinfo, void FAR * object, size_t sizeofobject)$/;"	f
jpeg_free_large	.\jmemnobs.c	/^jpeg_free_large (j_common_ptr cinfo, void FAR * object, size_t sizeofobject)$/;"	f
jpeg_free_large	.\jmemsys.h	28;"	d
jpeg_free_small	.\jmemansi.c	/^jpeg_free_small (j_common_ptr cinfo, void * object, size_t sizeofobject)$/;"	f
jpeg_free_small	.\jmemdos.c	/^jpeg_free_small (j_common_ptr cinfo, void * object, size_t sizeofobject)$/;"	f
jpeg_free_small	.\jmemmac.c	/^jpeg_free_small (j_common_ptr cinfo, void * object, size_t sizeofobject)$/;"	f
jpeg_free_small	.\jmemname.c	/^jpeg_free_small (j_common_ptr cinfo, void * object, size_t sizeofobject)$/;"	f
jpeg_free_small	.\jmemnobs.c	/^jpeg_free_small (j_common_ptr cinfo, void * object, size_t sizeofobject)$/;"	f
jpeg_free_small	.\jmemsys.h	26;"	d
jpeg_gen_optimal_table	.\jchuff.c	/^jpeg_gen_optimal_table (j_compress_ptr cinfo, JHUFF_TBL * htbl, long freq[])$/;"	f
jpeg_gen_optimal_table	.\jchuff.h	37;"	d
jpeg_get_large	.\jmemansi.c	/^jpeg_get_large (j_common_ptr cinfo, size_t sizeofobject)$/;"	f
jpeg_get_large	.\jmemdos.c	/^jpeg_get_large (j_common_ptr cinfo, size_t sizeofobject)$/;"	f
jpeg_get_large	.\jmemmac.c	/^jpeg_get_large (j_common_ptr cinfo, size_t sizeofobject)$/;"	f
jpeg_get_large	.\jmemname.c	/^jpeg_get_large (j_common_ptr cinfo, size_t sizeofobject)$/;"	f
jpeg_get_large	.\jmemnobs.c	/^jpeg_get_large (j_common_ptr cinfo, size_t sizeofobject)$/;"	f
jpeg_get_large	.\jmemsys.h	27;"	d
jpeg_get_small	.\jmemansi.c	/^jpeg_get_small (j_common_ptr cinfo, size_t sizeofobject)$/;"	f
jpeg_get_small	.\jmemdos.c	/^jpeg_get_small (j_common_ptr cinfo, size_t sizeofobject)$/;"	f
jpeg_get_small	.\jmemmac.c	/^jpeg_get_small (j_common_ptr cinfo, size_t sizeofobject)$/;"	f
jpeg_get_small	.\jmemname.c	/^jpeg_get_small (j_common_ptr cinfo, size_t sizeofobject)$/;"	f
jpeg_get_small	.\jmemnobs.c	/^jpeg_get_small (j_common_ptr cinfo, size_t sizeofobject)$/;"	f
jpeg_get_small	.\jmemsys.h	25;"	d
jpeg_getc	.\djpeg.c	/^jpeg_getc (j_decompress_ptr cinfo)$/;"	f
jpeg_has_multiple_scans	.\jpeglib.h	863;"	d
jpeg_huff_decode	.\jdhuff.c	/^jpeg_huff_decode (bitread_working_state * state,$/;"	f
jpeg_huff_decode	.\jdhuff.h	18;"	d
jpeg_idct_1x1	.\jdct.h	92;"	d
jpeg_idct_1x1	.\jidctred.c	/^jpeg_idct_1x1 (j_decompress_ptr cinfo, jpeg_component_info * compptr,$/;"	f
jpeg_idct_2x2	.\jdct.h	91;"	d
jpeg_idct_2x2	.\jidctred.c	/^jpeg_idct_2x2 (j_decompress_ptr cinfo, jpeg_component_info * compptr,$/;"	f
jpeg_idct_4x4	.\jdct.h	90;"	d
jpeg_idct_4x4	.\jidctred.c	/^jpeg_idct_4x4 (j_decompress_ptr cinfo, jpeg_component_info * compptr,$/;"	f
jpeg_idct_float	.\jdct.h	89;"	d
jpeg_idct_float	.\jidctflt.c	/^jpeg_idct_float (j_decompress_ptr cinfo, jpeg_component_info * compptr,$/;"	f
jpeg_idct_ifast	.\jdct.h	88;"	d
jpeg_idct_ifast	.\jidctfst.c	/^jpeg_idct_ifast (j_decompress_ptr cinfo, jpeg_component_info * compptr,$/;"	f
jpeg_idct_islow	.\jdct.h	87;"	d
jpeg_idct_islow	.\jidctint.c	/^jpeg_idct_islow (j_decompress_ptr cinfo, jpeg_component_info * compptr,$/;"	f
jpeg_input_complete	.\jpeglib.h	866;"	d
jpeg_input_controller	.\jpegint.h	/^struct jpeg_input_controller {$/;"	s
jpeg_input_controller	.\jpeglib.h	/^struct jpeg_input_controller { long dummy; };$/;"	s
jpeg_inverse_dct	.\jpegint.h	/^struct jpeg_inverse_dct {$/;"	s
jpeg_inverse_dct	.\jpeglib.h	/^struct jpeg_inverse_dct { long dummy; };$/;"	s
jpeg_make_c_derived_tbl	.\jchuff.c	/^jpeg_make_c_derived_tbl (j_compress_ptr cinfo, boolean isDC, int tblno,$/;"	f
jpeg_make_c_derived_tbl	.\jchuff.h	36;"	d
jpeg_make_d_derived_tbl	.\jdhuff.c	/^jpeg_make_d_derived_tbl (j_decompress_ptr cinfo, boolean isDC, int tblno,$/;"	f
jpeg_make_d_derived_tbl	.\jdhuff.h	16;"	d
jpeg_marker_reader	.\jpegint.h	/^struct jpeg_marker_reader {$/;"	s
jpeg_marker_reader	.\jpeglib.h	/^struct jpeg_marker_reader { long dummy; };$/;"	s
jpeg_marker_struct	.\jpeglib.h	/^struct jpeg_marker_struct {$/;"	s
jpeg_marker_writer	.\jpegint.h	/^struct jpeg_marker_writer {$/;"	s
jpeg_marker_writer	.\jpeglib.h	/^struct jpeg_marker_writer { long dummy; };$/;"	s
jpeg_mem_available	.\jmemansi.c	/^jpeg_mem_available (j_common_ptr cinfo, long min_bytes_needed,$/;"	f
jpeg_mem_available	.\jmemdos.c	/^jpeg_mem_available (j_common_ptr cinfo, long min_bytes_needed,$/;"	f
jpeg_mem_available	.\jmemmac.c	/^jpeg_mem_available (j_common_ptr cinfo, long min_bytes_needed,$/;"	f
jpeg_mem_available	.\jmemname.c	/^jpeg_mem_available (j_common_ptr cinfo, long min_bytes_needed,$/;"	f
jpeg_mem_available	.\jmemnobs.c	/^jpeg_mem_available (j_common_ptr cinfo, long min_bytes_needed,$/;"	f
jpeg_mem_available	.\jmemsys.h	29;"	d
jpeg_mem_init	.\jmemansi.c	/^jpeg_mem_init (j_common_ptr cinfo)$/;"	f
jpeg_mem_init	.\jmemdos.c	/^jpeg_mem_init (j_common_ptr cinfo)$/;"	f
jpeg_mem_init	.\jmemmac.c	/^jpeg_mem_init (j_common_ptr cinfo)$/;"	f
jpeg_mem_init	.\jmemname.c	/^jpeg_mem_init (j_common_ptr cinfo)$/;"	f
jpeg_mem_init	.\jmemnobs.c	/^jpeg_mem_init (j_common_ptr cinfo)$/;"	f
jpeg_mem_init	.\jmemsys.h	31;"	d
jpeg_mem_term	.\jmemansi.c	/^jpeg_mem_term (j_common_ptr cinfo)$/;"	f
jpeg_mem_term	.\jmemdos.c	/^jpeg_mem_term (j_common_ptr cinfo)$/;"	f
jpeg_mem_term	.\jmemmac.c	/^jpeg_mem_term (j_common_ptr cinfo)$/;"	f
jpeg_mem_term	.\jmemname.c	/^jpeg_mem_term (j_common_ptr cinfo)$/;"	f
jpeg_mem_term	.\jmemnobs.c	/^jpeg_mem_term (j_common_ptr cinfo)$/;"	f
jpeg_mem_term	.\jmemsys.h	32;"	d
jpeg_memory_mgr	.\jpeglib.h	/^struct jpeg_memory_mgr {$/;"	s
jpeg_message_table	.\jpeglib.h	/^  const char * const * jpeg_message_table; \/* Library errors *\/$/;"	m	struct:jpeg_error_mgr
jpeg_natural_order	.\jpegint.h	329;"	d
jpeg_natural_order	.\jutils.c	/^const int jpeg_natural_order[DCTSIZE2+16] = {$/;"	v
jpeg_new_colormap	.\jdmaster.c	/^jpeg_new_colormap (j_decompress_ptr cinfo)$/;"	f
jpeg_new_colormap	.\jpeglib.h	867;"	d
jpeg_open_backing_store	.\jmemansi.c	/^jpeg_open_backing_store (j_common_ptr cinfo, backing_store_ptr info,$/;"	f
jpeg_open_backing_store	.\jmemdos.c	/^jpeg_open_backing_store (j_common_ptr cinfo, backing_store_ptr info,$/;"	f
jpeg_open_backing_store	.\jmemmac.c	/^jpeg_open_backing_store (j_common_ptr cinfo, backing_store_ptr info,$/;"	f
jpeg_open_backing_store	.\jmemname.c	/^jpeg_open_backing_store (j_common_ptr cinfo, backing_store_ptr info,$/;"	f
jpeg_open_backing_store	.\jmemnobs.c	/^jpeg_open_backing_store (j_common_ptr cinfo, backing_store_ptr info,$/;"	f
jpeg_open_backing_store	.\jmemsys.h	30;"	d
jpeg_progress_mgr	.\jpeglib.h	/^struct jpeg_progress_mgr {$/;"	s
jpeg_quality_scaling	.\jcparam.c	/^jpeg_quality_scaling (int quality)$/;"	f
jpeg_quality_scaling	.\jpeglib.h	845;"	d
jpeg_read_coefficients	.\jdtrans.c	/^jpeg_read_coefficients (j_decompress_ptr cinfo)$/;"	f
jpeg_read_coefficients	.\jpeglib.h	872;"	d
jpeg_read_header	.\jdapimin.c	/^jpeg_read_header (j_decompress_ptr cinfo, boolean require_image)$/;"	f
jpeg_read_header	.\jpeglib.h	858;"	d
jpeg_read_raw_data	.\jpeglib.h	862;"	d
jpeg_read_scanlines	.\jpeglib.h	860;"	d
jpeg_resync_to_restart	.\jpeglib.h	879;"	d
jpeg_save_markers	.\jdmarker.c	/^jpeg_save_markers (j_decompress_ptr cinfo, int marker_code,$/;"	f
jpeg_save_markers	.\jpeglib.h	870;"	d
jpeg_saved_marker_ptr	.\jpeglib.h	/^typedef struct jpeg_marker_struct FAR * jpeg_saved_marker_ptr;$/;"	t	typeref:struct:FAR
jpeg_scan_info	.\jpeglib.h	/^} jpeg_scan_info;$/;"	t	typeref:struct:__anon54
jpeg_set_colorspace	.\jcparam.c	/^jpeg_set_colorspace (j_compress_ptr cinfo, J_COLOR_SPACE colorspace)$/;"	f
jpeg_set_colorspace	.\jpeglib.h	840;"	d
jpeg_set_defaults	.\jcparam.c	/^jpeg_set_defaults (j_compress_ptr cinfo)$/;"	f
jpeg_set_defaults	.\jpeglib.h	839;"	d
jpeg_set_linear_quality	.\jcparam.c	/^jpeg_set_linear_quality (j_compress_ptr cinfo, int scale_factor,$/;"	f
jpeg_set_linear_quality	.\jpeglib.h	843;"	d
jpeg_set_marker_processor	.\jdmarker.c	/^jpeg_set_marker_processor (j_decompress_ptr cinfo, int marker_code,$/;"	f
jpeg_set_marker_processor	.\jpeglib.h	871;"	d
jpeg_set_quality	.\jcparam.c	/^jpeg_set_quality (j_compress_ptr cinfo, int quality, boolean force_baseline)$/;"	f
jpeg_set_quality	.\jpeglib.h	842;"	d
jpeg_simple_progression	.\jcparam.c	/^jpeg_simple_progression (j_compress_ptr cinfo)$/;"	f
jpeg_simple_progression	.\jpeglib.h	846;"	d
jpeg_source_mgr	.\jpeglib.h	/^struct jpeg_source_mgr {$/;"	s
jpeg_start_compress	.\jcapistd.c	/^jpeg_start_compress (j_compress_ptr cinfo, boolean write_all_tables)$/;"	f
jpeg_start_compress	.\jpeglib.h	850;"	d
jpeg_start_decompress	.\jpeglib.h	859;"	d
jpeg_start_output	.\jpeglib.h	864;"	d
jpeg_std_error	.\jerror.c	/^jpeg_std_error (struct jpeg_error_mgr * err)$/;"	f
jpeg_std_error	.\jpeglib.h	832;"	d
jpeg_std_message_table	.\jerror.c	/^const char * const jpeg_std_message_table[] = {$/;"	v
jpeg_std_message_table	.\jerror.c	45;"	d	file:
jpeg_stdio_dest	.\jdatadst.c	/^jpeg_stdio_dest (j_compress_ptr cinfo, FILE * outfile)$/;"	f
jpeg_stdio_dest	.\jpeglib.h	837;"	d
jpeg_stdio_src	.\jdatasrc.c	/^jpeg_stdio_src (j_decompress_ptr cinfo, FILE * infile)$/;"	f
jpeg_stdio_src	.\jpeglib.h	838;"	d
jpeg_suppress_tables	.\jcapimin.c	/^jpeg_suppress_tables (j_compress_ptr cinfo, boolean suppress)$/;"	f
jpeg_suppress_tables	.\jpeglib.h	847;"	d
jpeg_transform_info	.\transupp.h	/^} jpeg_transform_info;$/;"	t	typeref:struct:__anon65
jpeg_upsampler	.\jpegint.h	/^struct jpeg_upsampler {$/;"	s
jpeg_upsampler	.\jpeglib.h	/^struct jpeg_upsampler { long dummy; };$/;"	s
jpeg_write_coefficients	.\jctrans.c	/^jpeg_write_coefficients (j_compress_ptr cinfo, jvirt_barray_ptr * coef_arrays)$/;"	f
jpeg_write_coefficients	.\jpeglib.h	873;"	d
jpeg_write_m_byte	.\jcapimin.c	/^jpeg_write_m_byte (j_compress_ptr cinfo, int val)$/;"	f
jpeg_write_m_byte	.\jpeglib.h	856;"	d
jpeg_write_m_header	.\jcapimin.c	/^jpeg_write_m_header (j_compress_ptr cinfo, int marker, unsigned int datalen)$/;"	f
jpeg_write_m_header	.\jpeglib.h	855;"	d
jpeg_write_marker	.\jcapimin.c	/^jpeg_write_marker (j_compress_ptr cinfo, int marker,$/;"	f
jpeg_write_marker	.\jpeglib.h	854;"	d
jpeg_write_raw_data	.\jpeglib.h	853;"	d
jpeg_write_scanlines	.\jpeglib.h	851;"	d
jpeg_write_tables	.\jcapimin.c	/^jpeg_write_tables (j_compress_ptr cinfo)$/;"	f
jpeg_write_tables	.\jpeglib.h	857;"	d
jpeg_zigzag_order	.\jpegint.h	328;"	d
jround_up	.\jpegint.h	324;"	d
jround_up	.\jutils.c	/^jround_up (long a, long b)$/;"	f
jtransform_adjust_parameters	.\transupp.c	/^jtransform_adjust_parameters (j_decompress_ptr srcinfo,$/;"	f
jtransform_adjust_parameters	.\transupp.h	29;"	d
jtransform_execute_transformation	.\transupp.c	/^jtransform_execute_transformation (j_decompress_ptr srcinfo,$/;"	f
jtransform_execute_transformation	.\transupp.h	30;"	d
jtransform_request_workspace	.\transupp.c	/^jtransform_request_workspace (j_decompress_ptr srcinfo,$/;"	f
jtransform_request_workspace	.\transupp.h	28;"	d
jvirt_barray_control	.\jmemmgr.c	/^struct jvirt_barray_control {$/;"	s	file:
jvirt_barray_control	.\jpegint.h	/^struct jvirt_barray_control { long dummy; };$/;"	s
jvirt_barray_control	.\jpeglib.h	/^struct jvirt_barray_control { long dummy; };$/;"	s
jvirt_barray_ptr	.\jpeglib.h	/^typedef struct jvirt_barray_control * jvirt_barray_ptr;$/;"	t	typeref:struct:jvirt_barray_control
jvirt_sarray_control	.\jmemmgr.c	/^struct jvirt_sarray_control {$/;"	s	file:
jvirt_sarray_control	.\jpegint.h	/^struct jvirt_sarray_control { long dummy; };$/;"	s
jvirt_sarray_control	.\jpeglib.h	/^struct jvirt_sarray_control { long dummy; };$/;"	s
jvirt_sarray_ptr	.\jpeglib.h	/^typedef struct jvirt_sarray_control * jvirt_sarray_ptr;$/;"	t	typeref:struct:jvirt_sarray_control
jzero_far	.\jpegint.h	327;"	d
jzero_far	.\jutils.c	/^jzero_far (void FAR * target, size_t bytestozero)$/;"	f
keymatch	.\rdjpgcom.c	/^keymatch (char * arg, const char * keyword, int minchars)$/;"	f	file:
keymatch	.\wrjpgcom.c	/^keymatch (char * arg, const char * keyword, int minchars)$/;"	f	file:
large_list	.\jmemmgr.c	/^  large_pool_ptr large_list[JPOOL_NUMPOOLS];$/;"	m	struct:__anon48	file:
large_pool_hdr	.\jmemmgr.c	/^} large_pool_hdr;$/;"	t	typeref:union:large_pool_struct	file:
large_pool_ptr	.\jmemmgr.c	/^typedef union large_pool_struct FAR * large_pool_ptr;$/;"	t	typeref:union:FAR	file:
large_pool_struct	.\jmemmgr.c	/^typedef union large_pool_struct {$/;"	u	file:
largest_input_value	.\jquant1.c	/^largest_input_value (j_decompress_ptr cinfo, int ci, int j, int maxj)$/;"	f
last_addon_message	.\jpeglib.h	/^  int last_addon_message;	\/* code for last string in addon table *\/$/;"	m	struct:jpeg_error_mgr
last_col_width	.\jpeglib.h	/^  int last_col_width;		\/* # of non-dummy blocks across in last MCU *\/$/;"	m	struct:__anon53
last_dc_val	.\jchuff.c	/^  int last_dc_val[MAX_COMPS_IN_SCAN]; \/* last DC coef for each component *\/$/;"	m	struct:__anon6	file:
last_dc_val	.\jcphuff.c	/^  int last_dc_val[MAX_COMPS_IN_SCAN]; \/* last DC coef for each component *\/$/;"	m	struct:__anon15	file:
last_dc_val	.\jdhuff.c	/^  int last_dc_val[MAX_COMPS_IN_SCAN]; \/* last DC coef for each component *\/$/;"	m	struct:__anon25	file:
last_dc_val	.\jdphuff.c	/^  int last_dc_val[MAX_COMPS_IN_SCAN];	\/* last DC coef for each component *\/$/;"	m	struct:__anon36	file:
last_jpeg_message	.\jpeglib.h	/^  int last_jpeg_message;    \/* Table contains strings 0..last_jpeg_message *\/$/;"	m	struct:jpeg_error_mgr
last_restart_interval	.\jcmarker.c	/^  unsigned int last_restart_interval; \/* last DRI value emitted; 0 after SOI *\/$/;"	m	struct:__anon12	file:
last_row_height	.\jpeglib.h	/^  int last_row_height;		\/* # of non-dummy blocks down in last MCU *\/$/;"	m	struct:__anon53
last_rowsperchunk	.\jmemmgr.c	/^  JDIMENSION last_rowsperchunk;	\/* from most recent alloc_sarray\/barray *\/$/;"	m	struct:__anon48	file:
latch_quant_tables	.\jdinput.c	/^latch_quant_tables (j_decompress_ptr cinfo)$/;"	f
length	.\jmemdos.c	/^	long length;		\/* It's easy to access first 4 bytes *\/$/;"	m	union:__anon45	file:
length	.\jmemdos.c	/^	long length;$/;"	m	struct:__anon44	file:
length_limit_APPn	.\jdmarker.c	/^  unsigned int length_limit_APPn[16];$/;"	m	struct:__anon33	file:
length_limit_COM	.\jdmarker.c	/^  unsigned int length_limit_COM;$/;"	m	struct:__anon33	file:
look_nbits	.\jdhuff.h	/^  int look_nbits[1<<HUFF_LOOKAHEAD]; \/* # bits, or 0 if too long *\/$/;"	m	struct:__anon27
look_sym	.\jdhuff.h	/^  UINT8 look_sym[1<<HUFF_LOOKAHEAD]; \/* symbol, or unused *\/$/;"	m	struct:__anon27
main	.\ansi2knr.c	/^main(argc, argv)$/;"	f
main	.\cjpeg.c	/^main (int argc, char **argv)$/;"	f
main	.\ckconfig.c	/^int main (int argc, char ** argv)$/;"	f
main	.\djpeg.c	/^main (int argc, char **argv)$/;"	f
main	.\jpeglib.h	/^  struct jpeg_c_main_controller * main;$/;"	m	struct:jpeg_compress_struct	typeref:struct:jpeg_compress_struct::jpeg_c_main_controller
main	.\jpeglib.h	/^  struct jpeg_d_main_controller * main;$/;"	m	struct:jpeg_decompress_struct	typeref:struct:jpeg_decompress_struct::jpeg_d_main_controller
main	.\jpegtran.c	/^main (int argc, char **argv)$/;"	f
main	.\rdjpgcom.c	/^main (int argc, char **argv)$/;"	f
main	.\wrjpgcom.c	/^main (int argc, char **argv)$/;"	f
main_pass	.\jcmaster.c	/^	main_pass,		\/* input data, also do first output step *\/$/;"	e	enum:__anon13	file:
make_funny_pointers	.\jdmainct.c	/^make_funny_pointers (j_decompress_ptr cinfo)$/;"	f
marker	.\jpeglib.h	/^  UINT8 marker;			\/* marker code: JPEG_COM, or JPEG_APP0+n *\/$/;"	m	struct:jpeg_marker_struct
marker	.\jpeglib.h	/^  struct jpeg_marker_reader * marker;$/;"	m	struct:jpeg_decompress_struct	typeref:struct:jpeg_decompress_struct::jpeg_marker_reader
marker	.\jpeglib.h	/^  struct jpeg_marker_writer * marker;$/;"	m	struct:jpeg_compress_struct	typeref:struct:jpeg_compress_struct::jpeg_marker_writer
marker_list	.\jpeglib.h	/^  jpeg_saved_marker_ptr marker_list; \/* Head of list of saved markers *\/$/;"	m	struct:jpeg_decompress_struct
master	.\jpeglib.h	/^  struct jpeg_comp_master * master;$/;"	m	struct:jpeg_compress_struct	typeref:struct:jpeg_compress_struct::jpeg_comp_master
master	.\jpeglib.h	/^  struct jpeg_decomp_master * master;$/;"	m	struct:jpeg_decompress_struct	typeref:struct:jpeg_decompress_struct::jpeg_decomp_master
master_selection	.\jdmaster.c	/^master_selection (j_decompress_ptr cinfo)$/;"	f
max_alloc_chunk	.\jpeglib.h	/^  long max_alloc_chunk;$/;"	m	struct:jpeg_memory_mgr
max_h_samp_factor	.\jpeglib.h	/^  int max_h_samp_factor;	\/* largest h_samp_factor *\/$/;"	m	struct:jpeg_compress_struct
max_h_samp_factor	.\jpeglib.h	/^  int max_h_samp_factor;	\/* largest h_samp_factor *\/$/;"	m	struct:jpeg_decompress_struct
max_memory_to_use	.\jpeglib.h	/^  long max_memory_to_use;$/;"	m	struct:jpeg_memory_mgr
max_v_samp_factor	.\jpeglib.h	/^  int max_v_samp_factor;	\/* largest v_samp_factor *\/$/;"	m	struct:jpeg_compress_struct
max_v_samp_factor	.\jpeglib.h	/^  int max_v_samp_factor;	\/* largest v_samp_factor *\/$/;"	m	struct:jpeg_decompress_struct
maxaccess	.\jmemmgr.c	/^  JDIMENSION maxaccess;		\/* max rows accessed by access_virt_barray *\/$/;"	m	struct:jvirt_barray_control	file:
maxaccess	.\jmemmgr.c	/^  JDIMENSION maxaccess;		\/* max rows accessed by access_virt_sarray *\/$/;"	m	struct:jvirt_sarray_control	file:
maxcode	.\jdhuff.h	/^  INT32 maxcode[18];		\/* largest code of length k (-1 if none) *\/$/;"	m	struct:__anon27
maxcode	.\wrgif.c	/^  int maxcode;			\/* maximum code, given n_bits *\/$/;"	m	struct:__anon68	file:
mcu_ctr	.\jccoefct.c	/^  JDIMENSION mcu_ctr;		\/* counts MCUs processed in current row *\/$/;"	m	struct:__anon3	file:
mcu_ctr	.\jctrans.c	/^  JDIMENSION mcu_ctr;		\/* counts MCUs processed in current row *\/$/;"	m	struct:__anon18	file:
median_cut	.\jquant2.c	/^median_cut (j_decompress_ptr cinfo, boxptr boxlist, int numboxes,$/;"	f
mem_buffer	.\jmemmgr.c	/^  JBLOCKARRAY mem_buffer;	\/* => the in-memory buffer *\/$/;"	m	struct:jvirt_barray_control	file:
mem_buffer	.\jmemmgr.c	/^  JSAMPARRAY mem_buffer;	\/* => the in-memory buffer *\/$/;"	m	struct:jvirt_sarray_control	file:
merged_1v_upsample	.\jdmerge.c	/^merged_1v_upsample (j_decompress_ptr cinfo,$/;"	f
merged_2v_upsample	.\jdmerge.c	/^merged_2v_upsample (j_decompress_ptr cinfo,$/;"	f
methods	.\jcsample.c	/^  downsample1_ptr methods[MAX_COMPONENTS];$/;"	m	struct:__anon17	file:
methods	.\jdsample.c	/^  upsample1_ptr methods[MAX_COMPONENTS];$/;"	m	struct:__anon39	file:
methods_struct	.\ckconfig.c	/^struct methods_struct {		\/* check method-pointer declarations *\/$/;"	s	file:
min_DCT_scaled_size	.\jpeglib.h	/^  int min_DCT_scaled_size;	\/* smallest DCT_scaled_size of any component *\/$/;"	m	struct:jpeg_decompress_struct
msg_code	.\jpeglib.h	/^  int msg_code;$/;"	m	struct:jpeg_error_mgr
msg_parm	.\jpeglib.h	/^  } msg_parm;$/;"	m	struct:jpeg_error_mgr	typeref:union:jpeg_error_mgr::__anon58
multiplier_table	.\jddctmgr.c	/^} multiplier_table;$/;"	t	typeref:union:__anon24	file:
my_cconvert_ptr	.\jccolor.c	/^typedef my_color_converter * my_cconvert_ptr;$/;"	t	file:
my_cconvert_ptr	.\jdcolor.c	/^typedef my_color_deconverter * my_cconvert_ptr;$/;"	t	file:
my_coef_controller	.\jccoefct.c	/^} my_coef_controller;$/;"	t	typeref:struct:__anon3	file:
my_coef_controller	.\jctrans.c	/^} my_coef_controller;$/;"	t	typeref:struct:__anon18	file:
my_coef_controller	.\jdcoefct.c	/^} my_coef_controller;$/;"	t	typeref:struct:__anon21	file:
my_coef_ptr	.\jccoefct.c	/^typedef my_coef_controller * my_coef_ptr;$/;"	t	file:
my_coef_ptr	.\jctrans.c	/^typedef my_coef_controller * my_coef_ptr;$/;"	t	file:
my_coef_ptr	.\jdcoefct.c	/^typedef my_coef_controller * my_coef_ptr;$/;"	t	file:
my_color_converter	.\jccolor.c	/^} my_color_converter;$/;"	t	typeref:struct:__anon4	file:
my_color_deconverter	.\jdcolor.c	/^} my_color_deconverter;$/;"	t	typeref:struct:__anon22	file:
my_comp_master	.\jcmaster.c	/^} my_comp_master;$/;"	t	typeref:struct:__anon14	file:
my_cquantize_ptr	.\jquant1.c	/^typedef my_cquantizer * my_cquantize_ptr;$/;"	t	file:
my_cquantize_ptr	.\jquant2.c	/^typedef my_cquantizer * my_cquantize_ptr;$/;"	t	file:
my_cquantizer	.\jquant1.c	/^} my_cquantizer;$/;"	t	typeref:struct:__anon59	file:
my_cquantizer	.\jquant2.c	/^} my_cquantizer;$/;"	t	typeref:struct:__anon60	file:
my_decomp_master	.\jdmaster.c	/^} my_decomp_master;$/;"	t	typeref:struct:__anon34	file:
my_dest_ptr	.\jdatadst.c	/^typedef my_destination_mgr * my_dest_ptr;$/;"	t	file:
my_destination_mgr	.\jdatadst.c	/^} my_destination_mgr;$/;"	t	typeref:struct:__anon19	file:
my_downsample_ptr	.\jcsample.c	/^typedef my_downsampler * my_downsample_ptr;$/;"	t	file:
my_downsampler	.\jcsample.c	/^} my_downsampler;$/;"	t	typeref:struct:__anon17	file:
my_error_exit	.\example.c	/^my_error_exit (j_common_ptr cinfo)$/;"	f
my_error_mgr	.\example.c	/^struct my_error_mgr {$/;"	s	file:
my_error_ptr	.\example.c	/^typedef struct my_error_mgr * my_error_ptr;$/;"	t	typeref:struct:my_error_mgr	file:
my_fdct_controller	.\jcdctmgr.c	/^} my_fdct_controller;$/;"	t	typeref:struct:__anon5	file:
my_fdct_ptr	.\jcdctmgr.c	/^typedef my_fdct_controller * my_fdct_ptr;$/;"	t	file:
my_idct_controller	.\jddctmgr.c	/^} my_idct_controller;$/;"	t	typeref:struct:__anon23	file:
my_idct_ptr	.\jddctmgr.c	/^typedef my_idct_controller * my_idct_ptr;$/;"	t	file:
my_input_controller	.\jdinput.c	/^} my_input_controller;$/;"	t	typeref:struct:__anon30	file:
my_inputctl_ptr	.\jdinput.c	/^typedef my_input_controller * my_inputctl_ptr;$/;"	t	file:
my_main_controller	.\jcmainct.c	/^} my_main_controller;$/;"	t	typeref:struct:__anon10	file:
my_main_controller	.\jdmainct.c	/^} my_main_controller;$/;"	t	typeref:struct:__anon31	file:
my_main_ptr	.\jcmainct.c	/^typedef my_main_controller * my_main_ptr;$/;"	t	file:
my_main_ptr	.\jdmainct.c	/^typedef my_main_controller * my_main_ptr;$/;"	t	file:
my_marker_ptr	.\jcmarker.c	/^typedef my_marker_writer * my_marker_ptr;$/;"	t	file:
my_marker_ptr	.\jdmarker.c	/^typedef my_marker_reader * my_marker_ptr;$/;"	t	file:
my_marker_reader	.\jdmarker.c	/^} my_marker_reader;$/;"	t	typeref:struct:__anon33	file:
my_marker_writer	.\jcmarker.c	/^} my_marker_writer;$/;"	t	typeref:struct:__anon12	file:
my_master_ptr	.\jcmaster.c	/^typedef my_comp_master * my_master_ptr;$/;"	t	file:
my_master_ptr	.\jdmaster.c	/^typedef my_decomp_master * my_master_ptr;$/;"	t	file:
my_mem_ptr	.\jmemmgr.c	/^typedef my_memory_mgr * my_mem_ptr;$/;"	t	file:
my_memory_mgr	.\jmemmgr.c	/^} my_memory_mgr;$/;"	t	typeref:struct:__anon48	file:
my_post_controller	.\jdpostct.c	/^} my_post_controller;$/;"	t	typeref:struct:__anon38	file:
my_post_ptr	.\jdpostct.c	/^typedef my_post_controller * my_post_ptr;$/;"	t	file:
my_prep_controller	.\jcprepct.c	/^} my_prep_controller;$/;"	t	typeref:struct:__anon16	file:
my_prep_ptr	.\jcprepct.c	/^typedef my_prep_controller * my_prep_ptr;$/;"	t	file:
my_size_t	.\ckconfig.c	/^typedef size_t my_size_t;	\/* The payoff: do we have size_t now? *\/$/;"	t	file:
my_source_mgr	.\jdatasrc.c	/^} my_source_mgr;$/;"	t	typeref:struct:__anon20	file:
my_src_ptr	.\jdatasrc.c	/^typedef my_source_mgr * my_src_ptr;$/;"	t	file:
my_upsample_ptr	.\jdmerge.c	/^typedef my_upsampler * my_upsample_ptr;$/;"	t	file:
my_upsample_ptr	.\jdsample.c	/^typedef my_upsampler * my_upsample_ptr;$/;"	t	file:
my_upsampler	.\jdmerge.c	/^} my_upsampler;$/;"	t	typeref:struct:__anon35	file:
my_upsampler	.\jdsample.c	/^} my_upsampler;$/;"	t	typeref:struct:__anon39	file:
n_bits	.\wrgif.c	/^  int n_bits;			\/* current number of bits\/code *\/$/;"	m	struct:__anon68	file:
need_context_rows	.\jpegint.h	/^  boolean need_context_rows;	\/* TRUE if need rows above & below *\/$/;"	m	struct:jpeg_downsampler
need_context_rows	.\jpegint.h	/^  boolean need_context_rows;	\/* TRUE if need rows above & below *\/$/;"	m	struct:jpeg_upsampler
needs_zeroed	.\jquant2.c	/^  boolean needs_zeroed;		\/* TRUE if next pass must zero histogram *\/$/;"	m	struct:__anon60	file:
new_color_map_1_quant	.\jquant1.c	/^new_color_map_1_quant (j_decompress_ptr cinfo)$/;"	f
new_color_map_2_quant	.\jquant2.c	/^new_color_map_2_quant (j_decompress_ptr cinfo)$/;"	f
next	.\jmemmgr.c	/^    large_pool_ptr next;	\/* next in list of pools *\/$/;"	m	struct:large_pool_struct::__anon47	file:
next	.\jmemmgr.c	/^    small_pool_ptr next;	\/* next in list of pools *\/$/;"	m	struct:small_pool_struct::__anon46	file:
next	.\jmemmgr.c	/^  jvirt_barray_ptr next;	\/* link to next virtual barray control block *\/$/;"	m	struct:jvirt_barray_control	file:
next	.\jmemmgr.c	/^  jvirt_sarray_ptr next;	\/* link to next virtual sarray control block *\/$/;"	m	struct:jvirt_sarray_control	file:
next	.\jpeglib.h	/^  jpeg_saved_marker_ptr next;	\/* next in list, or NULL *\/$/;"	m	struct:jpeg_marker_struct
next_buf_row	.\jcprepct.c	/^  int next_buf_row;		\/* index of next row to store in color_buf *\/$/;"	m	struct:__anon16	file:
next_buf_stop	.\jcprepct.c	/^  int next_buf_stop;		\/* downsample when we reach this index *\/$/;"	m	struct:__anon16	file:
next_file_num	.\jmemdos.c	/^static int next_file_num;	\/* to distinguish among several temp files *\/$/;"	v	file:
next_file_num	.\jmemmac.c	/^static int next_file_num;	\/* to distinguish among several temp files *\/$/;"	v	file:
next_file_num	.\jmemname.c	/^static int next_file_num;	\/* to distinguish among several temp files *\/$/;"	v	file:
next_input_byte	.\jdhuff.h	/^  const JOCTET * next_input_byte; \/* => next byte to read from source *\/$/;"	m	struct:__anon29
next_input_byte	.\jpeglib.h	/^  const JOCTET * next_input_byte; \/* => next byte to read from buffer *\/$/;"	m	struct:jpeg_source_mgr
next_marker	.\rdjpgcom.c	/^next_marker (void)$/;"	f	file:
next_marker	.\wrjpgcom.c	/^next_marker (void)$/;"	f	file:
next_output_byte	.\jchuff.c	/^  JOCTET * next_output_byte;	\/* => next byte to write in buffer *\/$/;"	m	struct:__anon8	file:
next_output_byte	.\jcphuff.c	/^  JOCTET * next_output_byte;	\/* => next byte to write in buffer *\/$/;"	m	struct:__anon15	file:
next_output_byte	.\jpeglib.h	/^  JOCTET * next_output_byte;	\/* => next byte to write in buffer *\/$/;"	m	struct:jpeg_destination_mgr
next_restart_num	.\jchuff.c	/^  int next_restart_num;		\/* next restart number to write (0-7) *\/$/;"	m	struct:__anon7	file:
next_restart_num	.\jcphuff.c	/^  int next_restart_num;		\/* next restart number to write (0-7) *\/$/;"	m	struct:__anon15	file:
next_restart_num	.\jpegint.h	/^  int next_restart_num;		\/* next restart number expected (0-7) *\/$/;"	m	struct:jpeg_marker_reader
next_row	.\jdpostct.c	/^  JDIMENSION next_row;		\/* index of next row to fill\/empty in strip *\/$/;"	m	struct:__anon38	file:
next_row_out	.\jdsample.c	/^  int next_row_out;		\/* counts rows emitted from color_buf *\/$/;"	m	struct:__anon39	file:
next_scanline	.\jpeglib.h	/^  JDIMENSION next_scanline;	\/* 0 .. image_height-1  *\/$/;"	m	struct:jpeg_compress_struct
no_ems	.\jmemdosa.asm	/^no_ems:		xor	ax,ax			; it's not there$/;"	l
noop_upsample	.\jdsample.c	/^noop_upsample (j_decompress_ptr cinfo, jpeg_component_info * compptr,$/;"	f
null_convert	.\jccolor.c	/^null_convert (j_compress_ptr cinfo,$/;"	f
null_convert	.\jdcolor.c	/^null_convert (j_decompress_ptr cinfo,$/;"	f
null_method	.\jccolor.c	/^null_method (j_compress_ptr cinfo)$/;"	f
num_components	.\jpeglib.h	/^  int num_components;		\/* # of color components in JPEG image *\/$/;"	m	struct:jpeg_compress_struct
num_components	.\jpeglib.h	/^  int num_components;		\/* # of color components in JPEG image *\/$/;"	m	struct:jpeg_decompress_struct
num_components	.\transupp.h	/^  int num_components;		\/* # of components in workspace *\/$/;"	m	struct:__anon65
num_scans	.\jpeglib.h	/^  int num_scans;		\/* # of entries in scan_info array *\/$/;"	m	struct:jpeg_compress_struct
num_warnings	.\jpeglib.h	/^  long num_warnings;		\/* number of corrupt-data warnings *\/$/;"	m	struct:jpeg_error_mgr
odither	.\jquant1.c	/^  ODITHER_MATRIX_PTR odither[MAX_Q_COMPS]; \/* one dither array per component *\/$/;"	m	struct:__anon59	file:
offset	.\jmemdos.c	/^	long offset;$/;"	m	union:__anon43	file:
on_odd_row	.\jquant1.c	/^  boolean on_odd_row;		\/* flag to remember which row we are on *\/$/;"	m	struct:__anon59	file:
on_odd_row	.\jquant2.c	/^  boolean on_odd_row;		\/* flag to remember which row we are on *\/$/;"	m	struct:__anon60	file:
open_err	.\jmemdosa.asm	/^open_err:	pop	ds			; restore registers and exit$/;"	l
optimize_coding	.\jpeglib.h	/^  boolean optimize_coding;	\/* TRUE=optimize entropy encoding parms *\/$/;"	m	struct:jpeg_compress_struct
original_length	.\jpeglib.h	/^  unsigned int original_length;	\/* # bytes of data in the file *\/$/;"	m	struct:jpeg_marker_struct
out_color_components	.\jpeglib.h	/^  int out_color_components;	\/* # of color components in out_color_space *\/$/;"	m	struct:jpeg_decompress_struct
out_color_space	.\jpeglib.h	/^  J_COLOR_SPACE out_color_space; \/* colorspace for output *\/$/;"	m	struct:jpeg_decompress_struct
out_of_memory	.\jmemmgr.c	/^out_of_memory (j_common_ptr cinfo, int which)$/;"	f
out_row_width	.\jdmerge.c	/^  JDIMENSION out_row_width;	\/* samples per output row *\/$/;"	m	struct:__anon35	file:
outfile	.\jdatadst.c	/^  FILE * outfile;		\/* target stream *\/$/;"	m	struct:__anon19	file:
outfile	.\wrjpgcom.c	/^static FILE * outfile;		\/* output JPEG file *\/$/;"	v	file:
outfilename	.\cjpeg.c	/^static char * outfilename;	\/* for -outfile switch *\/$/;"	v	file:
outfilename	.\djpeg.c	/^static char * outfilename;	\/* for -outfile switch *\/$/;"	v	file:
outfilename	.\jpegtran.c	/^static char * outfilename;	\/* for -outfile switch *\/$/;"	v	file:
output	.\wrgif.c	/^output (gif_dest_ptr dinfo, int code)$/;"	f
output_components	.\jpeglib.h	/^  int output_components;	\/* # of color components returned *\/$/;"	m	struct:jpeg_decompress_struct
output_file	.\cdjpeg.h	/^  FILE * output_file;$/;"	m	struct:djpeg_dest_struct
output_gamma	.\jpeglib.h	/^  double output_gamma;		\/* image gamma wanted in output *\/$/;"	m	struct:jpeg_decompress_struct
output_height	.\jpeglib.h	/^  JDIMENSION output_height;	\/* scaled image height *\/$/;"	m	struct:jpeg_decompress_struct
output_iMCU_row	.\jpeglib.h	/^  JDIMENSION output_iMCU_row;	\/* Number of iMCU rows read *\/$/;"	m	struct:jpeg_decompress_struct
output_message	.\jerror.c	/^output_message (j_common_ptr cinfo)$/;"	f
output_pass	.\jcmaster.c	/^	output_pass		\/* data output pass *\/$/;"	e	enum:__anon13	file:
output_scan_number	.\jpeglib.h	/^  int output_scan_number;	\/* Nominal scan number being displayed *\/$/;"	m	struct:jpeg_decompress_struct
output_scanline	.\jpeglib.h	/^  JDIMENSION output_scanline;	\/* 0 .. output_height-1  *\/$/;"	m	struct:jpeg_decompress_struct
output_value	.\jquant1.c	/^output_value (j_decompress_ptr cinfo, int ci, int j, int maxj)$/;"	f
output_width	.\jpeglib.h	/^  JDIMENSION output_width;	\/* scaled image width *\/$/;"	m	struct:jpeg_decompress_struct
packetbuf	.\wrgif.c	/^  char packetbuf[256];		\/* workspace for accumulating packet *\/$/;"	m	struct:__anon68	file:
pad_bytes	.\wrbmp.c	/^  int pad_bytes;		\/* number of padding bytes needed per row *\/$/;"	m	struct:__anon67	file:
parse_switches	.\cjpeg.c	/^parse_switches (j_compress_ptr cinfo, int argc, char **argv,$/;"	f
parse_switches	.\djpeg.c	/^parse_switches (j_decompress_ptr cinfo, int argc, char **argv,$/;"	f
parse_switches	.\jpegtran.c	/^parse_switches (j_compress_ptr cinfo, int argc, char **argv,$/;"	f
pass2_fs_dither	.\jquant2.c	/^pass2_fs_dither (j_decompress_ptr cinfo,$/;"	f
pass2_no_dither	.\jquant2.c	/^pass2_no_dither (j_decompress_ptr cinfo,$/;"	f
pass_counter	.\jpeglib.h	/^  long pass_counter;		\/* work units completed in this pass *\/$/;"	m	struct:jpeg_progress_mgr
pass_limit	.\jpeglib.h	/^  long pass_limit;		\/* total number of work units in this pass *\/$/;"	m	struct:jpeg_progress_mgr
pass_mode	.\jcmainct.c	/^  J_BUF_MODE pass_mode;		\/* current operating mode *\/$/;"	m	struct:__anon10	file:
pass_number	.\jcmaster.c	/^  int pass_number;		\/* # of passes completed *\/$/;"	m	struct:__anon14	file:
pass_number	.\jdmaster.c	/^  int pass_number;		\/* # of passes completed *\/$/;"	m	struct:__anon34	file:
pass_startup	.\jcmaster.c	/^pass_startup (j_compress_ptr cinfo)$/;"	f
pass_type	.\jcmaster.c	/^  c_pass_type pass_type;	\/* the type of the current pass *\/$/;"	m	struct:__anon14	file:
pbm_getc	.\rdcolmap.c	/^pbm_getc (FILE * infile)$/;"	f
pbm_getc	.\rdppm.c	/^pbm_getc (FILE * infile)$/;"	f
per_scan_setup	.\jcmaster.c	/^per_scan_setup (j_compress_ptr cinfo)$/;"	f
per_scan_setup	.\jdinput.c	/^per_scan_setup (j_decompress_ptr cinfo)$/;"	f
percent_done	.\cdjpeg.h	/^  int percent_done;$/;"	m	struct:cdjpeg_progress_mgr
phuff_entropy_decoder	.\jdphuff.c	/^} phuff_entropy_decoder;$/;"	t	typeref:struct:__anon37	file:
phuff_entropy_encoder	.\jcphuff.c	/^} phuff_entropy_encoder;$/;"	t	typeref:struct:__anon15	file:
phuff_entropy_ptr	.\jcphuff.c	/^typedef phuff_entropy_encoder * phuff_entropy_ptr;$/;"	t	file:
phuff_entropy_ptr	.\jdphuff.c	/^typedef phuff_entropy_decoder * phuff_entropy_ptr;$/;"	t	file:
pixel_size	.\rdtarga.c	/^  int pixel_size;		\/* Bytes per Targa pixel (1 to 4) *\/$/;"	m	struct:_tga_source_struct	file:
pixrow	.\rdppm.c	/^  JSAMPROW pixrow;		\/* FAR pointer to same *\/$/;"	m	struct:__anon62	file:
pixrow	.\wrppm.c	/^  JSAMPROW pixrow;		\/* decompressor output buffer *\/$/;"	m	struct:__anon69	file:
pop	.\jmemdosa.asm	/^		pop	di$/;"	d
pop	.\jmemdosa.asm	/^		pop	ds			; restore registers and exit$/;"	d
pop	.\jmemdosa.asm	/^		pop	ds$/;"	d
pop	.\jmemdosa.asm	/^		pop	dx$/;"	d
possibly_dupli_function	.\ckconfig.c	/^int possibly_dupli_function ()$/;"	f
possibly_duplicate_function	.\ckconfig.c	/^int possibly_duplicate_function ()$/;"	f
post	.\jpeglib.h	/^  struct jpeg_d_post_controller * post;$/;"	m	struct:jpeg_decompress_struct	typeref:struct:jpeg_decompress_struct::jpeg_d_post_controller
post_process_1pass	.\jdpostct.c	/^post_process_1pass (j_decompress_ptr cinfo,$/;"	f
post_process_2pass	.\jdpostct.c	/^post_process_2pass (j_decompress_ptr cinfo,$/;"	f
post_process_prepass	.\jdpostct.c	/^post_process_prepass (j_decompress_ptr cinfo,$/;"	f
ppm_dest_ptr	.\wrppm.c	/^typedef ppm_dest_struct * ppm_dest_ptr;$/;"	t	file:
ppm_dest_struct	.\wrppm.c	/^} ppm_dest_struct;$/;"	t	typeref:struct:__anon69	file:
ppm_source_ptr	.\rdppm.c	/^typedef ppm_source_struct * ppm_source_ptr;$/;"	t	file:
ppm_source_struct	.\rdppm.c	/^} ppm_source_struct;$/;"	t	typeref:struct:__anon62	file:
pre_process_context	.\jcprepct.c	/^pre_process_context (j_compress_ptr cinfo,$/;"	f
pre_process_data	.\jcprepct.c	/^pre_process_data (j_compress_ptr cinfo,$/;"	f
pre_zero	.\jmemmgr.c	/^  boolean pre_zero;		\/* pre-zero mode requested? *\/$/;"	m	struct:jvirt_barray_control	file:
pre_zero	.\jmemmgr.c	/^  boolean pre_zero;		\/* pre-zero mode requested? *\/$/;"	m	struct:jvirt_sarray_control	file:
prep	.\jpeglib.h	/^  struct jpeg_c_prep_controller * prep;$/;"	m	struct:jpeg_compress_struct	typeref:struct:jpeg_compress_struct::jpeg_c_prep_controller
prepare_for_output_pass	.\jdmaster.c	/^prepare_for_output_pass (j_decompress_ptr cinfo)$/;"	f
prepare_for_pass	.\jcmaster.c	/^prepare_for_pass (j_compress_ptr cinfo)$/;"	f
prepare_range_limit_table	.\jdmaster.c	/^prepare_range_limit_table (j_decompress_ptr cinfo)$/;"	f
prescan_quantize	.\jquant2.c	/^prescan_quantize (j_decompress_ptr cinfo, JSAMPARRAY input_buf,$/;"	f
print_mem_stats	.\jmemmgr.c	/^print_mem_stats (j_common_ptr cinfo, int pool_id)$/;"	f
process_APPn	.\jdmarker.c	/^  jpeg_marker_parser_method process_APPn[16];$/;"	m	struct:__anon33	file:
process_COM	.\jdmarker.c	/^  jpeg_marker_parser_method process_COM;$/;"	m	struct:__anon33	file:
process_COM	.\rdjpgcom.c	/^process_COM (void)$/;"	f	file:
process_SOFn	.\rdjpgcom.c	/^process_SOFn (int marker)$/;"	f	file:
process_data_buffer_main	.\jcmainct.c	/^process_data_buffer_main (j_compress_ptr cinfo,$/;"	f
process_data_context_main	.\jdmainct.c	/^process_data_context_main (j_decompress_ptr cinfo,$/;"	f
process_data_crank_post	.\jdmainct.c	/^process_data_crank_post (j_decompress_ptr cinfo,$/;"	f
process_data_simple_main	.\jcmainct.c	/^process_data_simple_main (j_compress_ptr cinfo,$/;"	f
process_data_simple_main	.\jdmainct.c	/^process_data_simple_main (j_decompress_ptr cinfo,$/;"	f
progname	.\cjpeg.c	/^static const char * progname;	\/* program name for error messages *\/$/;"	v	file:
progname	.\djpeg.c	/^static const char * progname;	\/* program name for error messages *\/$/;"	v	file:
progname	.\jpegtran.c	/^static const char * progname;	\/* program name for error messages *\/$/;"	v	file:
progname	.\rdjpgcom.c	/^static const char * progname;	\/* program name for error messages *\/$/;"	v	file:
progname	.\wrjpgcom.c	/^static const char * progname;	\/* program name for error messages *\/$/;"	v	file:
progress_monitor	.\cdjpeg.c	/^progress_monitor (j_common_ptr cinfo)$/;"	f
progressive_mode	.\jpeglib.h	/^  boolean progressive_mode;	\/* TRUE if SOFn specifies progressive mode *\/$/;"	m	struct:jpeg_decompress_struct
progressive_mode	.\jpeglib.h	/^  boolean progressive_mode;	\/* TRUE if scan script uses progressive mode *\/$/;"	m	struct:jpeg_compress_struct
ptr	.\jmemdos.c	/^	void far * ptr;$/;"	m	union:__anon43	file:
pub	.\cdjpeg.h	/^  struct jpeg_progress_mgr pub;	\/* fields known to JPEG library *\/$/;"	m	struct:cdjpeg_progress_mgr	typeref:struct:cdjpeg_progress_mgr::jpeg_progress_mgr
pub	.\example.c	/^  struct jpeg_error_mgr pub;	\/* "public" fields *\/$/;"	m	struct:my_error_mgr	typeref:struct:my_error_mgr::jpeg_error_mgr	file:
pub	.\jccoefct.c	/^  struct jpeg_c_coef_controller pub; \/* public fields *\/$/;"	m	struct:__anon3	typeref:struct:__anon3::jpeg_c_coef_controller	file:
pub	.\jccolor.c	/^  struct jpeg_color_converter pub; \/* public fields *\/$/;"	m	struct:__anon4	typeref:struct:__anon4::jpeg_color_converter	file:
pub	.\jcdctmgr.c	/^  struct jpeg_forward_dct pub;	\/* public fields *\/$/;"	m	struct:__anon5	typeref:struct:__anon5::jpeg_forward_dct	file:
pub	.\jchuff.c	/^  struct jpeg_entropy_encoder pub; \/* public fields *\/$/;"	m	struct:__anon7	typeref:struct:__anon7::jpeg_entropy_encoder	file:
pub	.\jcmainct.c	/^  struct jpeg_c_main_controller pub; \/* public fields *\/$/;"	m	struct:__anon10	typeref:struct:__anon10::jpeg_c_main_controller	file:
pub	.\jcmarker.c	/^  struct jpeg_marker_writer pub; \/* public fields *\/$/;"	m	struct:__anon12	typeref:struct:__anon12::jpeg_marker_writer	file:
pub	.\jcmaster.c	/^  struct jpeg_comp_master pub;	\/* public fields *\/$/;"	m	struct:__anon14	typeref:struct:__anon14::jpeg_comp_master	file:
pub	.\jcphuff.c	/^  struct jpeg_entropy_encoder pub; \/* public fields *\/$/;"	m	struct:__anon15	typeref:struct:__anon15::jpeg_entropy_encoder	file:
pub	.\jcprepct.c	/^  struct jpeg_c_prep_controller pub; \/* public fields *\/$/;"	m	struct:__anon16	typeref:struct:__anon16::jpeg_c_prep_controller	file:
pub	.\jcsample.c	/^  struct jpeg_downsampler pub;	\/* public fields *\/$/;"	m	struct:__anon17	typeref:struct:__anon17::jpeg_downsampler	file:
pub	.\jctrans.c	/^  struct jpeg_c_coef_controller pub; \/* public fields *\/$/;"	m	struct:__anon18	typeref:struct:__anon18::jpeg_c_coef_controller	file:
pub	.\jdatadst.c	/^  struct jpeg_destination_mgr pub; \/* public fields *\/$/;"	m	struct:__anon19	typeref:struct:__anon19::jpeg_destination_mgr	file:
pub	.\jdatasrc.c	/^  struct jpeg_source_mgr pub;	\/* public fields *\/$/;"	m	struct:__anon20	typeref:struct:__anon20::jpeg_source_mgr	file:
pub	.\jdcoefct.c	/^  struct jpeg_d_coef_controller pub; \/* public fields *\/$/;"	m	struct:__anon21	typeref:struct:__anon21::jpeg_d_coef_controller	file:
pub	.\jdcolor.c	/^  struct jpeg_color_deconverter pub; \/* public fields *\/$/;"	m	struct:__anon22	typeref:struct:__anon22::jpeg_color_deconverter	file:
pub	.\jddctmgr.c	/^  struct jpeg_inverse_dct pub;	\/* public fields *\/$/;"	m	struct:__anon23	typeref:struct:__anon23::jpeg_inverse_dct	file:
pub	.\jdhuff.c	/^  struct jpeg_entropy_decoder pub; \/* public fields *\/$/;"	m	struct:__anon26	typeref:struct:__anon26::jpeg_entropy_decoder	file:
pub	.\jdhuff.h	/^  JHUFF_TBL *pub;$/;"	m	struct:__anon27
pub	.\jdinput.c	/^  struct jpeg_input_controller pub; \/* public fields *\/$/;"	m	struct:__anon30	typeref:struct:__anon30::jpeg_input_controller	file:
pub	.\jdmainct.c	/^  struct jpeg_d_main_controller pub; \/* public fields *\/$/;"	m	struct:__anon31	typeref:struct:__anon31::jpeg_d_main_controller	file:
pub	.\jdmarker.c	/^  struct jpeg_marker_reader pub; \/* public fields *\/$/;"	m	struct:__anon33	typeref:struct:__anon33::jpeg_marker_reader	file:
pub	.\jdmaster.c	/^  struct jpeg_decomp_master pub; \/* public fields *\/$/;"	m	struct:__anon34	typeref:struct:__anon34::jpeg_decomp_master	file:
pub	.\jdmerge.c	/^  struct jpeg_upsampler pub;	\/* public fields *\/$/;"	m	struct:__anon35	typeref:struct:__anon35::jpeg_upsampler	file:
pub	.\jdphuff.c	/^  struct jpeg_entropy_decoder pub; \/* public fields *\/$/;"	m	struct:__anon37	typeref:struct:__anon37::jpeg_entropy_decoder	file:
pub	.\jdpostct.c	/^  struct jpeg_d_post_controller pub; \/* public fields *\/$/;"	m	struct:__anon38	typeref:struct:__anon38::jpeg_d_post_controller	file:
pub	.\jdsample.c	/^  struct jpeg_upsampler pub;	\/* public fields *\/$/;"	m	struct:__anon39	typeref:struct:__anon39::jpeg_upsampler	file:
pub	.\jmemmgr.c	/^  struct jpeg_memory_mgr pub;	\/* public fields *\/$/;"	m	struct:__anon48	typeref:struct:__anon48::jpeg_memory_mgr	file:
pub	.\jquant1.c	/^  struct jpeg_color_quantizer pub; \/* public fields *\/$/;"	m	struct:__anon59	typeref:struct:__anon59::jpeg_color_quantizer	file:
pub	.\jquant2.c	/^  struct jpeg_color_quantizer pub; \/* public fields *\/$/;"	m	struct:__anon60	typeref:struct:__anon60::jpeg_color_quantizer	file:
pub	.\rdbmp.c	/^  struct cjpeg_source_struct pub; \/* public fields *\/$/;"	m	struct:_bmp_source_struct	typeref:struct:_bmp_source_struct::cjpeg_source_struct	file:
pub	.\rdppm.c	/^  struct cjpeg_source_struct pub; \/* public fields *\/$/;"	m	struct:__anon62	typeref:struct:__anon62::cjpeg_source_struct	file:
pub	.\rdrle.c	/^  struct cjpeg_source_struct pub; \/* public fields *\/$/;"	m	struct:_rle_source_struct	typeref:struct:_rle_source_struct::cjpeg_source_struct	file:
pub	.\rdtarga.c	/^  struct cjpeg_source_struct pub; \/* public fields *\/$/;"	m	struct:_tga_source_struct	typeref:struct:_tga_source_struct::cjpeg_source_struct	file:
pub	.\wrbmp.c	/^  struct djpeg_dest_struct pub;	\/* public fields *\/$/;"	m	struct:__anon67	typeref:struct:__anon67::djpeg_dest_struct	file:
pub	.\wrgif.c	/^  struct djpeg_dest_struct pub;	\/* public fields *\/$/;"	m	struct:__anon68	typeref:struct:__anon68::djpeg_dest_struct	file:
pub	.\wrppm.c	/^  struct djpeg_dest_struct pub;	\/* public fields *\/$/;"	m	struct:__anon69	typeref:struct:__anon69::djpeg_dest_struct	file:
pub	.\wrrle.c	/^  struct djpeg_dest_struct pub; \/* public fields *\/$/;"	m	struct:__anon70	typeref:struct:__anon70::djpeg_dest_struct	file:
pub	.\wrtarga.c	/^  struct djpeg_dest_struct pub;	\/* public fields *\/$/;"	m	struct:__anon71	typeref:struct:__anon71::djpeg_dest_struct	file:
push	.\jmemdosa.asm	/^		push	di$/;"	d
push	.\jmemdosa.asm	/^		push	ds$/;"	d
push	.\jmemdosa.asm	/^		push	dx$/;"	d
put_3bytes	.\wrgif.c	/^put_3bytes (gif_dest_ptr dinfo, int val)$/;"	f
put_bits	.\jchuff.c	/^  int put_bits;			\/* # of bits now in it *\/$/;"	m	struct:__anon6	file:
put_bits	.\jcphuff.c	/^  int put_bits;			\/* # of bits now in it *\/$/;"	m	struct:__anon15	file:
put_buffer	.\jchuff.c	/^  INT32 put_buffer;		\/* current bit-accumulation buffer *\/$/;"	m	struct:__anon6	file:
put_buffer	.\jcphuff.c	/^  INT32 put_buffer;		\/* current bit-accumulation buffer *\/$/;"	m	struct:__anon15	file:
put_demapped_gray	.\wrppm.c	/^put_demapped_gray (j_decompress_ptr cinfo, djpeg_dest_ptr dinfo,$/;"	f
put_demapped_gray	.\wrtarga.c	/^put_demapped_gray (j_decompress_ptr cinfo, djpeg_dest_ptr dinfo,$/;"	f
put_demapped_rgb	.\wrppm.c	/^put_demapped_rgb (j_decompress_ptr cinfo, djpeg_dest_ptr dinfo,$/;"	f
put_gray_rows	.\wrbmp.c	/^put_gray_rows (j_decompress_ptr cinfo, djpeg_dest_ptr dinfo,$/;"	f
put_gray_rows	.\wrtarga.c	/^put_gray_rows (j_decompress_ptr cinfo, djpeg_dest_ptr dinfo,$/;"	f
put_pixel_rows	.\wrbmp.c	/^put_pixel_rows (j_decompress_ptr cinfo, djpeg_dest_ptr dinfo,$/;"	f
put_pixel_rows	.\wrgif.c	/^put_pixel_rows (j_decompress_ptr cinfo, djpeg_dest_ptr dinfo,$/;"	f
put_pixel_rows	.\wrppm.c	/^put_pixel_rows (j_decompress_ptr cinfo, djpeg_dest_ptr dinfo,$/;"	f
put_pixel_rows	.\wrtarga.c	/^put_pixel_rows (j_decompress_ptr cinfo, djpeg_dest_ptr dinfo,$/;"	f
put_word	.\wrgif.c	/^put_word (gif_dest_ptr dinfo, unsigned int w)$/;"	f
quant_table	.\jpeglib.h	/^  JQUANT_TBL * quant_table;$/;"	m	struct:__anon53
quant_tbl_no	.\jpeglib.h	/^  int quant_tbl_no;		\/* quantization table selector (0..3) *\/$/;"	m	struct:__anon53
quant_tbl_ptrs	.\jpeglib.h	/^  JQUANT_TBL * quant_tbl_ptrs[NUM_QUANT_TBLS];$/;"	m	struct:jpeg_compress_struct
quant_tbl_ptrs	.\jpeglib.h	/^  JQUANT_TBL * quant_tbl_ptrs[NUM_QUANT_TBLS];$/;"	m	struct:jpeg_decompress_struct
quantize3_ord_dither	.\jquant1.c	/^quantize3_ord_dither (j_decompress_ptr cinfo, JSAMPARRAY input_buf,$/;"	f
quantize_colors	.\jpeglib.h	/^  boolean quantize_colors;	\/* TRUE=colormapped output wanted *\/$/;"	m	struct:jpeg_decompress_struct
quantize_fs_dither	.\jquant1.c	/^quantize_fs_dither (j_decompress_ptr cinfo, JSAMPARRAY input_buf,$/;"	f
quantize_ord_dither	.\jquant1.c	/^quantize_ord_dither (j_decompress_ptr cinfo, JSAMPARRAY input_buf,$/;"	f
quantizer_1pass	.\jdmaster.c	/^  struct jpeg_color_quantizer * quantizer_1pass;$/;"	m	struct:__anon34	typeref:struct:__anon34::jpeg_color_quantizer	file:
quantizer_2pass	.\jdmaster.c	/^  struct jpeg_color_quantizer * quantizer_2pass;$/;"	m	struct:__anon34	typeref:struct:__anon34::jpeg_color_quantizer	file:
quantval	.\jpeglib.h	/^  UINT16 quantval[DCTSIZE2];	\/* quantization step for each coefficient *\/$/;"	m	struct:__anon51
raw_data_in	.\jpeglib.h	/^  boolean raw_data_in;		\/* TRUE=caller supplies downsampled data *\/$/;"	m	struct:jpeg_compress_struct
raw_data_out	.\jpeglib.h	/^  boolean raw_data_out;		\/* TRUE=downsampled data wanted *\/$/;"	m	struct:jpeg_decompress_struct
read_1_byte	.\rdjpgcom.c	/^read_1_byte (void)$/;"	f	file:
read_1_byte	.\wrjpgcom.c	/^read_1_byte (void)$/;"	f	file:
read_2_bytes	.\rdjpgcom.c	/^read_2_bytes (void)$/;"	f	file:
read_2_bytes	.\wrjpgcom.c	/^read_2_bytes (void)$/;"	f	file:
read_JPEG_file	.\example.c	/^read_JPEG_file (char * filename)$/;"	f
read_backing_store	.\jmemansi.c	/^read_backing_store (j_common_ptr cinfo, backing_store_ptr info,$/;"	f
read_backing_store	.\jmemmac.c	/^read_backing_store (j_common_ptr cinfo, backing_store_ptr info,$/;"	f
read_backing_store	.\jmemname.c	/^read_backing_store (j_common_ptr cinfo, backing_store_ptr info,$/;"	f
read_byte	.\rdbmp.c	/^read_byte (bmp_source_ptr sinfo)$/;"	f
read_byte	.\rdtarga.c	/^read_byte (tga_source_ptr sinfo)$/;"	f
read_color_map	.\cdjpeg.h	109;"	d
read_color_map	.\rdcolmap.c	/^read_color_map (j_decompress_ptr cinfo, FILE * infile)$/;"	f
read_colormap	.\rdbmp.c	/^read_colormap (bmp_source_ptr sinfo, int cmaplen, int mapentrysize)$/;"	f
read_colormap	.\rdtarga.c	/^read_colormap (tga_source_ptr sinfo, int cmaplen, int mapentrysize)$/;"	f
read_ems_store	.\jmemdos.c	/^read_ems_store (j_common_ptr cinfo, backing_store_ptr info,$/;"	f
read_err	.\jmemdosa.asm	/^read_err:	pop	ds			; restore registers and exit$/;"	l
read_file_store	.\jmemdos.c	/^read_file_store (j_common_ptr cinfo, backing_store_ptr info,$/;"	f
read_gif_map	.\rdcolmap.c	/^read_gif_map (j_decompress_ptr cinfo, FILE * infile)$/;"	f
read_markers	.\jdmarker.c	/^read_markers (j_decompress_ptr cinfo)$/;"	f
read_non_rle_pixel	.\rdtarga.c	/^read_non_rle_pixel (tga_source_ptr sinfo)$/;"	f
read_ok	.\jmemdosa.asm	/^read_ok:	xor	ax,ax			; return zero for OK$/;"	l
read_pbm_integer	.\rdcolmap.c	/^read_pbm_integer (j_decompress_ptr cinfo, FILE * infile)$/;"	f
read_pbm_integer	.\rdppm.c	/^read_pbm_integer (j_compress_ptr cinfo, FILE * infile)$/;"	f
read_ppm_map	.\rdcolmap.c	/^read_ppm_map (j_decompress_ptr cinfo, FILE * infile)$/;"	f
read_quant_tables	.\cdjpeg.h	105;"	d
read_restart_marker	.\jpegint.h	/^  jpeg_marker_parser_method read_restart_marker;$/;"	m	struct:jpeg_marker_reader
read_rle_pixel	.\rdtarga.c	/^read_rle_pixel (tga_source_ptr sinfo)$/;"	f
read_scan_script	.\cdjpeg.h	106;"	d
read_stdin	.\cdjpeg.c	/^read_stdin (void)$/;"	f
read_stdin	.\cdjpeg.h	113;"	d
read_xms_store	.\jmemdos.c	/^read_xms_store (j_common_ptr cinfo, backing_store_ptr info,$/;"	f
realize_virt_arrays	.\jmemmgr.c	/^realize_virt_arrays (j_common_ptr cinfo)$/;"	f
rec_outbuf_height	.\jpeglib.h	/^  int rec_outbuf_height;	\/* min recommended height of scanline buffer *\/$/;"	m	struct:jpeg_decompress_struct
requested_fmt	.\djpeg.c	/^static IMAGE_FORMATS requested_fmt;$/;"	v	file:
rescale	.\rdppm.c	/^  JSAMPLE *rescale;		\/* => maxval-remapping array, or NULL *\/$/;"	m	struct:__anon62	file:
reset_error_mgr	.\jerror.c	/^reset_error_mgr (j_common_ptr cinfo)$/;"	f
reset_input_controller	.\jdinput.c	/^reset_input_controller (j_decompress_ptr cinfo)$/;"	f
reset_marker_reader	.\jdmarker.c	/^reset_marker_reader (j_decompress_ptr cinfo)$/;"	f
restart_in_rows	.\jpeglib.h	/^  int restart_in_rows;		\/* if > 0, MCU rows per restart interval *\/$/;"	m	struct:jpeg_compress_struct
restart_interval	.\jpeglib.h	/^  unsigned int restart_interval; \/* MCUs per restart interval, or 0 for no restart *\/$/;"	m	struct:jpeg_decompress_struct
restart_interval	.\jpeglib.h	/^  unsigned int restart_interval; \/* MCUs per restart, or 0 for no restart *\/$/;"	m	struct:jpeg_compress_struct
restarts_to_go	.\jchuff.c	/^  unsigned int restarts_to_go;	\/* MCUs left in this restart interval *\/$/;"	m	struct:__anon7	file:
restarts_to_go	.\jcphuff.c	/^  unsigned int restarts_to_go;	\/* MCUs left in this restart interval *\/$/;"	m	struct:__anon15	file:
restarts_to_go	.\jdhuff.c	/^  unsigned int restarts_to_go;	\/* MCUs left in this restart interval *\/$/;"	m	struct:__anon26	file:
restarts_to_go	.\jdphuff.c	/^  unsigned int restarts_to_go;	\/* MCUs left in this restart interval *\/$/;"	m	struct:__anon37	file:
rgb_gray_convert	.\jccolor.c	/^rgb_gray_convert (j_compress_ptr cinfo,$/;"	f
rgb_ycc_convert	.\jccolor.c	/^rgb_ycc_convert (j_compress_ptr cinfo,$/;"	f
rgb_ycc_start	.\jccolor.c	/^rgb_ycc_start (j_compress_ptr cinfo)$/;"	f
rgb_ycc_tab	.\jccolor.c	/^  INT32 * rgb_ycc_tab;		\/* => table for RGB to YCbCr conversion *\/$/;"	m	struct:__anon4	file:
rle_dest_ptr	.\wrrle.c	/^typedef rle_dest_struct * rle_dest_ptr;$/;"	t	file:
rle_dest_struct	.\wrrle.c	/^} rle_dest_struct;$/;"	t	typeref:struct:__anon70	file:
rle_kind	.\rdrle.c	/^  { GRAYSCALE, MAPPEDGRAY, PSEUDOCOLOR, TRUECOLOR, DIRECTCOLOR } rle_kind;$/;"	t	typeref:enum:__anon63	file:
rle_put_pixel_rows	.\wrrle.c	/^rle_put_pixel_rows (j_decompress_ptr cinfo, djpeg_dest_ptr dinfo,$/;"	f
rle_row	.\rdrle.c	/^  rle_pixel** rle_row;          \/* holds a row returned by rle_getrow() *\/$/;"	m	struct:_rle_source_struct	file:
rle_row	.\wrrle.c	/^  rle_pixel **rle_row;		\/* To pass rows to rle_putrow() *\/$/;"	m	struct:__anon70	file:
rle_source_ptr	.\rdrle.c	/^typedef struct _rle_source_struct * rle_source_ptr;$/;"	t	typeref:struct:_rle_source_struct	file:
rle_source_struct	.\rdrle.c	/^} rle_source_struct;$/;"	t	typeref:struct:_rle_source_struct	file:
row	.\rdrle.c	/^  JDIMENSION row;		\/* current row # in the virtual array *\/$/;"	m	struct:_rle_source_struct	file:
row_index	.\jquant1.c	/^  int row_index;		\/* cur row's vertical index in dither matrix *\/$/;"	m	struct:__anon59	file:
row_width	.\rdbmp.c	/^  JDIMENSION row_width;		\/* Physical width of scanlines in file *\/$/;"	m	struct:_bmp_source_struct	file:
row_width	.\wrbmp.c	/^  JDIMENSION row_width;		\/* physical width of one row in the BMP file *\/$/;"	m	struct:__anon67	file:
rowgroup_ctr	.\jcmainct.c	/^  JDIMENSION rowgroup_ctr;	\/* counts row groups received in iMCU row *\/$/;"	m	struct:__anon10	file:
rowgroup_ctr	.\jdmainct.c	/^  JDIMENSION rowgroup_ctr;	\/* counts row groups output to postprocessor *\/$/;"	m	struct:__anon31	file:
rowgroup_height	.\jdsample.c	/^  int rowgroup_height[MAX_COMPONENTS];$/;"	m	struct:__anon39	file:
rowgroups_avail	.\jdmainct.c	/^  JDIMENSION rowgroups_avail;	\/* row groups available to postprocessor *\/$/;"	m	struct:__anon31	file:
rows_in_array	.\jmemmgr.c	/^  JDIMENSION rows_in_array;	\/* total virtual array height *\/$/;"	m	struct:jvirt_barray_control	file:
rows_in_array	.\jmemmgr.c	/^  JDIMENSION rows_in_array;	\/* total virtual array height *\/$/;"	m	struct:jvirt_sarray_control	file:
rows_in_mem	.\jmemmgr.c	/^  JDIMENSION rows_in_mem;	\/* height of memory buffer *\/$/;"	m	struct:jvirt_barray_control	file:
rows_in_mem	.\jmemmgr.c	/^  JDIMENSION rows_in_mem;	\/* height of memory buffer *\/$/;"	m	struct:jvirt_sarray_control	file:
rows_to_go	.\jcprepct.c	/^  JDIMENSION rows_to_go;	\/* counts rows remaining in source image *\/$/;"	m	struct:__anon16	file:
rows_to_go	.\jdmerge.c	/^  JDIMENSION rows_to_go;	\/* counts rows remaining in image *\/$/;"	m	struct:__anon35	file:
rows_to_go	.\jdsample.c	/^  JDIMENSION rows_to_go;	\/* counts rows remaining in image *\/$/;"	m	struct:__anon39	file:
rowsperchunk	.\jmemmgr.c	/^  JDIMENSION rowsperchunk;	\/* allocation chunk size in mem_buffer *\/$/;"	m	struct:jvirt_barray_control	file:
rowsperchunk	.\jmemmgr.c	/^  JDIMENSION rowsperchunk;	\/* allocation chunk size in mem_buffer *\/$/;"	m	struct:jvirt_sarray_control	file:
s	.\jpeglib.h	/^    char s[JMSG_STR_PARM_MAX];$/;"	m	union:jpeg_error_mgr::__anon58
sample_range_limit	.\jpeglib.h	/^  JSAMPLE * sample_range_limit; \/* table for fast range-limiting *\/$/;"	m	struct:jpeg_decompress_struct
samples_per_row	.\wrppm.c	/^  JDIMENSION samples_per_row;	\/* JSAMPLEs per output row *\/$/;"	m	struct:__anon69	file:
samplesperrow	.\jmemmgr.c	/^  JDIMENSION samplesperrow;	\/* width of array (and of memory buffer) *\/$/;"	m	struct:jvirt_sarray_control	file:
savable_state	.\jchuff.c	/^} savable_state;$/;"	t	typeref:struct:__anon6	file:
savable_state	.\jdhuff.c	/^} savable_state;$/;"	t	typeref:struct:__anon25	file:
savable_state	.\jdphuff.c	/^} savable_state;$/;"	t	typeref:struct:__anon36	file:
saved	.\jchuff.c	/^  savable_state saved;		\/* Bit buffer & DC state at start of MCU *\/$/;"	m	struct:__anon7	file:
saved	.\jdhuff.c	/^  savable_state saved;		\/* Other state at start of MCU *\/$/;"	m	struct:__anon26	file:
saved	.\jdphuff.c	/^  savable_state saved;		\/* Other state at start of MCU *\/$/;"	m	struct:__anon37	file:
saw_Adobe_marker	.\jpeglib.h	/^  boolean saw_Adobe_marker;	\/* TRUE iff an Adobe APP14 marker was found *\/$/;"	m	struct:jpeg_decompress_struct
saw_JFIF_marker	.\jpeglib.h	/^  boolean saw_JFIF_marker;	\/* TRUE iff a JFIF APP0 marker was found *\/$/;"	m	struct:jpeg_decompress_struct
saw_SOF	.\jpegint.h	/^  boolean saw_SOF;		\/* found SOF? *\/$/;"	m	struct:jpeg_marker_reader
saw_SOI	.\jpegint.h	/^  boolean saw_SOI;		\/* found SOI? *\/$/;"	m	struct:jpeg_marker_reader
scale_denom	.\jpeglib.h	/^  unsigned int scale_num, scale_denom; \/* fraction by which to scale image *\/$/;"	m	struct:jpeg_decompress_struct
scale_num	.\jpeglib.h	/^  unsigned int scale_num, scale_denom; \/* fraction by which to scale image *\/$/;"	m	struct:jpeg_decompress_struct
scan_JPEG_header	.\rdjpgcom.c	/^scan_JPEG_header (int verbose)$/;"	f	file:
scan_JPEG_header	.\wrjpgcom.c	/^scan_JPEG_header (int keep_COM)$/;"	f	file:
scan_info	.\jpeglib.h	/^  const jpeg_scan_info * scan_info; \/* script for multi-scan file, or NULL *\/$/;"	m	struct:jpeg_compress_struct
scan_number	.\jcmaster.c	/^  int scan_number;		\/* current index in scan_info[] *\/$/;"	m	struct:__anon14	file:
script_space	.\jpeglib.h	/^  jpeg_scan_info * script_space; \/* workspace for jpeg_simple_progression *\/$/;"	m	struct:jpeg_compress_struct
script_space_size	.\jpeglib.h	/^  int script_space_size;$/;"	m	struct:jpeg_compress_struct
seek_err	.\jmemdosa.asm	/^seek_err:	pop	ds			; restore registers and exit$/;"	l
select_colors	.\jquant2.c	/^select_colors (j_decompress_ptr cinfo, int desired_colors)$/;"	f
select_file_name	.\jmemdos.c	/^select_file_name (char * fname)$/;"	f
select_file_name	.\jmemname.c	/^select_file_name (char * fname)$/;"	f
select_ncolors	.\jquant1.c	/^select_ncolors (j_decompress_ptr cinfo, int Ncolors[])$/;"	f
select_scan_parameters	.\jcmaster.c	/^select_scan_parameters (j_compress_ptr cinfo)$/;"	f
select_transform	.\jpegtran.c	/^select_transform (JXFORM_CODE transform)$/;"	f
self_destruct	.\jmemmgr.c	/^self_destruct (j_common_ptr cinfo)$/;"	f
sent_table	.\jpeglib.h	/^  boolean sent_table;		\/* TRUE when table has been output *\/$/;"	m	struct:__anon51
sent_table	.\jpeglib.h	/^  boolean sent_table;		\/* TRUE when table has been output *\/$/;"	m	struct:__anon52
sep_downsample	.\jcsample.c	/^sep_downsample (j_compress_ptr cinfo,$/;"	f
sep_upsample	.\jdsample.c	/^sep_upsample (j_decompress_ptr cinfo,$/;"	f
set_bottom_pointers	.\jdmainct.c	/^set_bottom_pointers (j_decompress_ptr cinfo)$/;"	f
set_quant_slots	.\cdjpeg.h	107;"	d
set_sample_factors	.\cdjpeg.h	108;"	d
set_wraparound_pointers	.\jdmainct.c	/^set_wraparound_pointers (j_decompress_ptr cinfo)$/;"	f
setjmp_buffer	.\example.c	/^  jmp_buf setjmp_buffer;	\/* for return to caller *\/$/;"	m	struct:my_error_mgr	file:
sig_cinfo	.\cdjpeg.c	/^static j_common_ptr sig_cinfo;$/;"	v	file:
signal_catcher	.\cdjpeg.c	/^signal_catcher (int signum)$/;"	f
skip_input_data	.\jdatasrc.c	/^skip_input_data (j_decompress_ptr cinfo, long num_bytes)$/;"	f
skip_variable	.\rdjpgcom.c	/^skip_variable (void)$/;"	f	file:
skip_variable	.\wrjpgcom.c	/^skip_variable (void)$/;"	f	file:
skipspace	.\ansi2knr.c	/^skipspace(p, dir)$/;"	f
small_list	.\jmemmgr.c	/^  small_pool_ptr small_list[JPOOL_NUMPOOLS];$/;"	m	struct:__anon48	file:
small_pool_hdr	.\jmemmgr.c	/^} small_pool_hdr;$/;"	t	typeref:union:small_pool_struct	file:
small_pool_ptr	.\jmemmgr.c	/^typedef union small_pool_struct * small_pool_ptr;$/;"	t	typeref:union:small_pool_struct	file:
small_pool_struct	.\jmemmgr.c	/^typedef union small_pool_struct {$/;"	u	file:
smoothing_factor	.\jpeglib.h	/^  int smoothing_factor;		\/* 1..100, or 0 for no input smoothing *\/$/;"	m	struct:jpeg_compress_struct
source_row	.\rdbmp.c	/^  JDIMENSION source_row;	\/* Current source row number *\/$/;"	m	struct:_bmp_source_struct	file:
spare_full	.\jdmerge.c	/^  boolean spare_full;		\/* T if spare buffer is occupied *\/$/;"	m	struct:__anon35	file:
spare_row	.\jdmerge.c	/^  JSAMPROW spare_row;$/;"	m	struct:__anon35	file:
src	.\jmemdos.c	/^	XMSPTR src;$/;"	m	struct:__anon44	file:
src	.\jpeglib.h	/^  struct jpeg_source_mgr * src;$/;"	m	struct:jpeg_decompress_struct	typeref:struct:jpeg_decompress_struct::jpeg_source_mgr
src_handle	.\jmemdos.c	/^	XMSH src_handle;$/;"	m	struct:__anon44	file:
start_iMCU_row	.\jctrans.c	/^start_iMCU_row (j_compress_ptr cinfo)$/;"	f
start_iMCU_row	.\jdcoefct.c	/^start_iMCU_row (j_decompress_ptr cinfo)$/;"	f
start_input_bmp	.\rdbmp.c	/^start_input_bmp (j_compress_ptr cinfo, cjpeg_source_ptr sinfo)$/;"	f
start_input_pass	.\jdcoefct.c	/^start_input_pass (j_decompress_ptr cinfo)$/;"	f
start_input_pass	.\jdinput.c	/^start_input_pass (j_decompress_ptr cinfo)$/;"	f
start_input_ppm	.\rdppm.c	/^start_input_ppm (j_compress_ptr cinfo, cjpeg_source_ptr sinfo)$/;"	f
start_input_rle	.\rdrle.c	/^start_input_rle (j_compress_ptr cinfo, cjpeg_source_ptr sinfo)$/;"	f
start_input_tga	.\rdtarga.c	/^start_input_tga (j_compress_ptr cinfo, cjpeg_source_ptr sinfo)$/;"	f
start_of_file	.\jdatasrc.c	/^  boolean start_of_file;	\/* have we gotten any data yet? *\/$/;"	m	struct:__anon20	file:
start_output_bmp	.\wrbmp.c	/^start_output_bmp (j_decompress_ptr cinfo, djpeg_dest_ptr dinfo)$/;"	f
start_output_gif	.\wrgif.c	/^start_output_gif (j_decompress_ptr cinfo, djpeg_dest_ptr dinfo)$/;"	f
start_output_pass	.\jdcoefct.c	/^start_output_pass (j_decompress_ptr cinfo)$/;"	f
start_output_ppm	.\wrppm.c	/^start_output_ppm (j_decompress_ptr cinfo, djpeg_dest_ptr dinfo)$/;"	f
start_output_rle	.\wrrle.c	/^start_output_rle (j_decompress_ptr cinfo, djpeg_dest_ptr dinfo)$/;"	f
start_output_tga	.\wrtarga.c	/^start_output_tga (j_decompress_ptr cinfo, djpeg_dest_ptr dinfo)$/;"	f
start_pass	.\jddctmgr.c	/^start_pass (j_decompress_ptr cinfo)$/;"	f
start_pass_1_quant	.\jquant1.c	/^start_pass_1_quant (j_decompress_ptr cinfo, boolean is_pre_scan)$/;"	f
start_pass_2_quant	.\jquant2.c	/^start_pass_2_quant (j_decompress_ptr cinfo, boolean is_pre_scan)$/;"	f
start_pass_coef	.\jccoefct.c	/^start_pass_coef (j_compress_ptr cinfo, J_BUF_MODE pass_mode)$/;"	f
start_pass_coef	.\jctrans.c	/^start_pass_coef (j_compress_ptr cinfo, J_BUF_MODE pass_mode)$/;"	f
start_pass_dcolor	.\jdcolor.c	/^start_pass_dcolor (j_decompress_ptr cinfo)$/;"	f
start_pass_downsample	.\jcsample.c	/^start_pass_downsample (j_compress_ptr cinfo)$/;"	f
start_pass_dpost	.\jdpostct.c	/^start_pass_dpost (j_decompress_ptr cinfo, J_BUF_MODE pass_mode)$/;"	f
start_pass_fdctmgr	.\jcdctmgr.c	/^start_pass_fdctmgr (j_compress_ptr cinfo)$/;"	f
start_pass_huff	.\jchuff.c	/^start_pass_huff (j_compress_ptr cinfo, boolean gather_statistics)$/;"	f
start_pass_huff_decoder	.\jdhuff.c	/^start_pass_huff_decoder (j_decompress_ptr cinfo)$/;"	f
start_pass_main	.\jcmainct.c	/^start_pass_main (j_compress_ptr cinfo, J_BUF_MODE pass_mode)$/;"	f
start_pass_main	.\jdmainct.c	/^start_pass_main (j_decompress_ptr cinfo, J_BUF_MODE pass_mode)$/;"	f
start_pass_merged_upsample	.\jdmerge.c	/^start_pass_merged_upsample (j_decompress_ptr cinfo)$/;"	f
start_pass_phuff	.\jcphuff.c	/^start_pass_phuff (j_compress_ptr cinfo, boolean gather_statistics)$/;"	f
start_pass_phuff_decoder	.\jdphuff.c	/^start_pass_phuff_decoder (j_decompress_ptr cinfo)$/;"	f
start_pass_prep	.\jcprepct.c	/^start_pass_prep (j_compress_ptr cinfo, J_BUF_MODE pass_mode)$/;"	f
start_pass_upsample	.\jdsample.c	/^start_pass_upsample (j_decompress_ptr cinfo)$/;"	f
start_progress_monitor	.\cdjpeg.c	/^start_progress_monitor (j_common_ptr cinfo, cd_progress_ptr progress)$/;"	f
start_progress_monitor	.\cdjpeg.h	111;"	d
starting_row	.\jdpostct.c	/^  JDIMENSION starting_row;	\/* row # of first row in current strip *\/$/;"	m	struct:__anon38	file:
std_huff_tables	.\jcparam.c	/^std_huff_tables (j_compress_ptr cinfo)$/;"	f
strip_height	.\jdpostct.c	/^  JDIMENSION strip_height;	\/* buffer size in rows *\/$/;"	m	struct:__anon38	file:
suspended	.\jcmainct.c	/^  boolean suspended;		\/* remember if we suspended output *\/$/;"	m	struct:__anon10	file:
sv_actual	.\jquant1.c	/^  int sv_actual;		\/* number of entries in use *\/$/;"	m	struct:__anon59	file:
sv_colormap	.\jquant1.c	/^  JSAMPARRAY sv_colormap;	\/* The color map as a 2-D pixel array *\/$/;"	m	struct:__anon59	file:
sv_colormap	.\jquant2.c	/^  JSAMPARRAY sv_colormap;	\/* colormap allocated at init time *\/$/;"	m	struct:__anon60	file:
tempSpec	.\jmemsys.h	/^  FSSpec tempSpec;		\/* the FSSpec for the temp file *\/$/;"	m	struct:backing_store_struct
temp_file	.\jmemsys.h	/^  FILE * temp_file;		\/* stdio reference to temp file *\/$/;"	m	struct:backing_store_struct
temp_file	.\jmemsys.h	/^  short temp_file;		\/* file reference number to temp file *\/$/;"	m	struct:backing_store_struct
temp_name	.\jmemsys.h	/^  char temp_name[TEMP_NAME_LENGTH]; \/* name if it's a file *\/$/;"	m	struct:backing_store_struct
temp_name	.\jmemsys.h	/^  char temp_name[TEMP_NAME_LENGTH]; \/* name of temp file *\/$/;"	m	struct:backing_store_struct
term_destination	.\jdatadst.c	/^term_destination (j_compress_ptr cinfo)$/;"	f
term_source	.\jdatasrc.c	/^term_source (j_decompress_ptr cinfo)$/;"	f
test1	.\ansi2knr.c	/^test1(buf)$/;"	f
test2function	.\ckconfig.c	/^int test2function (void)	\/* check void arg list *\/$/;"	f
test3function	.\ckconfig.c	/^void test3function (void_ptr arg1, void_func arg2)$/;"	f
test4function	.\ckconfig.c	/^int test4function (const int arg1)$/;"	f
testfunction	.\ckconfig.c	/^int testfunction (int arg1, int * arg2) \/* check definitions *\/$/;"	f
text_getc	.\rdswitch.c	/^text_getc (FILE * file)$/;"	f
tga_dest_ptr	.\wrtarga.c	/^typedef tga_dest_struct * tga_dest_ptr;$/;"	t	file:
tga_dest_struct	.\wrtarga.c	/^} tga_dest_struct;$/;"	t	typeref:struct:__anon71	file:
tga_pixel	.\rdtarga.c	/^  U_CHAR tga_pixel[4];$/;"	m	struct:_tga_source_struct	file:
tga_source_ptr	.\rdtarga.c	/^typedef struct _tga_source_struct * tga_source_ptr;$/;"	t	typeref:struct:_tga_source_struct	file:
tga_source_struct	.\rdtarga.c	/^} tga_source_struct;$/;"	t	typeref:struct:_tga_source_struct	file:
this_row_group	.\jcprepct.c	/^  int this_row_group;		\/* starting row index of group to process *\/$/;"	m	struct:__anon16	file:
total_extra_passes	.\cdjpeg.h	/^  int total_extra_passes;	\/* total extra *\/$/;"	m	struct:cdjpeg_progress_mgr
total_iMCU_rows	.\jpeglib.h	/^  JDIMENSION total_iMCU_rows;	\/* # of iMCU rows in image *\/$/;"	m	struct:jpeg_decompress_struct
total_iMCU_rows	.\jpeglib.h	/^  JDIMENSION total_iMCU_rows;	\/* # of iMCU rows to be input to coef ctlr *\/$/;"	m	struct:jpeg_compress_struct
total_passes	.\jcmaster.c	/^  int total_passes;		\/* total # of passes needed *\/$/;"	m	struct:__anon14	file:
total_passes	.\jpeglib.h	/^  int total_passes;		\/* total number of passes expected *\/$/;"	m	struct:jpeg_progress_mgr
total_space_allocated	.\jmemmgr.c	/^  long total_space_allocated;$/;"	m	struct:__anon48	file:
trace_level	.\jpeglib.h	/^  int trace_level;		\/* max msg_level that will be displayed *\/$/;"	m	struct:jpeg_error_mgr
trace_message	.\ckconfig.c	/^  int (*trace_message) (char *msgtext);$/;"	m	struct:methods_struct	file:
transdecode_master_selection	.\jdtrans.c	/^transdecode_master_selection (j_decompress_ptr cinfo)$/;"	f
transencode_coef_controller	.\jctrans.c	/^transencode_coef_controller (j_compress_ptr cinfo,$/;"	f
transencode_master_selection	.\jctrans.c	/^transencode_master_selection (j_compress_ptr cinfo,$/;"	f
transform	.\transupp.h	/^  JXFORM_CODE transform;	\/* image transform operator *\/$/;"	m	struct:__anon65
transformoption	.\jpegtran.c	/^static jpeg_transform_info transformoption; \/* image transformation options *\/$/;"	v	file:
transpose_critical_parameters	.\transupp.c	/^transpose_critical_parameters (j_compress_ptr dstinfo)$/;"	f
trim	.\transupp.h	/^  boolean trim;			\/* if TRUE, trim partial MCUs as needed *\/$/;"	m	struct:__anon65
trim_bottom_edge	.\transupp.c	/^trim_bottom_edge (j_compress_ptr dstinfo)$/;"	f
trim_right_edge	.\transupp.c	/^trim_right_edge (j_compress_ptr dstinfo)$/;"	f
two_pass_quantize	.\jpeglib.h	/^  boolean two_pass_quantize;	\/* TRUE=use two-pass color quantization *\/$/;"	m	struct:jpeg_decompress_struct
un_char	.\ckconfig.c	/^unsigned char un_char;$/;"	v
un_short	.\ckconfig.c	/^unsigned short un_short;$/;"	v
undef_struct_ptr	.\ckconfig.c	/^typedef struct undefined_structure * undef_struct_ptr;$/;"	t	typeref:struct:undefined_structure	file:
unread_marker	.\jpeglib.h	/^  int unread_marker;$/;"	m	struct:jpeg_decompress_struct
update_box	.\jquant2.c	/^update_box (j_decompress_ptr cinfo, boxptr boxp)$/;"	f
upsample	.\jpeglib.h	/^  struct jpeg_upsampler * upsample;$/;"	m	struct:jpeg_decompress_struct	typeref:struct:jpeg_decompress_struct::jpeg_upsampler
usage	.\cjpeg.c	/^usage (void)$/;"	f
usage	.\djpeg.c	/^usage (void)$/;"	f
usage	.\jpegtran.c	/^usage (void)$/;"	f
usage	.\rdjpgcom.c	/^usage (void)$/;"	f	file:
usage	.\wrjpgcom.c	/^usage (void)$/;"	f	file:
using_merged_upsample	.\jdmaster.c	/^  boolean using_merged_upsample; \/* TRUE if using merged upsample\/cconvert *\/$/;"	m	struct:__anon34	file:
v_expand	.\jdsample.c	/^  UINT8 v_expand[MAX_COMPONENTS];$/;"	m	struct:__anon39	file:
v_samp_factor	.\jpeglib.h	/^  int v_samp_factor;		\/* vertical sampling factor (1..4) *\/$/;"	m	struct:__anon53
validate_script	.\jcmaster.c	/^validate_script (j_compress_ptr cinfo)$/;"	f
valoffset	.\jdhuff.h	/^  INT32 valoffset[17];		\/* huffval[] offset for codes of length k *\/$/;"	m	struct:__anon27
virt_barray_list	.\jmemmgr.c	/^  jvirt_barray_ptr virt_barray_list;$/;"	m	struct:__anon48	file:
virt_sarray_list	.\jmemmgr.c	/^  jvirt_sarray_ptr virt_sarray_list;$/;"	m	struct:__anon48	file:
visual	.\rdrle.c	/^  rle_kind visual;              \/* actual type of input file *\/$/;"	m	struct:_rle_source_struct	file:
void_func	.\ckconfig.c	/^typedef void (*void_func) ();$/;"	t	file:
void_func	.\ckconfig.c	/^typedef void (*void_func) (int a, int b);$/;"	t	file:
void_ptr	.\ckconfig.c	/^typedef void * void_ptr;	\/* check void * *\/$/;"	t	file:
volume	.\jquant2.c	/^  INT32 volume;$/;"	m	struct:__anon61	file:
whichptr	.\jdmainct.c	/^  int whichptr;			\/* indicates which pointer set is now in use *\/$/;"	m	struct:__anon31	file:
whole_image	.\jccoefct.c	/^  jvirt_barray_ptr whole_image[MAX_COMPONENTS];$/;"	m	struct:__anon3	file:
whole_image	.\jcmainct.c	/^  jvirt_sarray_ptr whole_image[MAX_COMPONENTS];$/;"	m	struct:__anon10	file:
whole_image	.\jctrans.c	/^  jvirt_barray_ptr * whole_image;$/;"	m	struct:__anon18	file:
whole_image	.\jdcoefct.c	/^  jvirt_barray_ptr whole_image[MAX_COMPONENTS];$/;"	m	struct:__anon21	file:
whole_image	.\jdpostct.c	/^  jvirt_sarray_ptr whole_image;	\/* virtual array, or NULL if one-pass *\/$/;"	m	struct:__anon38	file:
whole_image	.\rdbmp.c	/^  jvirt_sarray_ptr whole_image;	\/* Needed to reverse row order *\/$/;"	m	struct:_bmp_source_struct	file:
whole_image	.\rdtarga.c	/^  jvirt_sarray_ptr whole_image;	\/* Needed if funny input row order *\/$/;"	m	struct:_tga_source_struct	file:
whole_image	.\wrbmp.c	/^  jvirt_sarray_ptr whole_image;	\/* needed to reverse row order *\/$/;"	m	struct:__anon67	file:
width_in_blocks	.\jpeglib.h	/^  JDIMENSION width_in_blocks;$/;"	m	struct:__anon53
working_state	.\jchuff.c	/^} working_state;$/;"	t	typeref:struct:__anon8	file:
workspace_coef_arrays	.\transupp.h	/^  jvirt_barray_ptr * workspace_coef_arrays; \/* workspace for transformations *\/$/;"	m	struct:__anon65
write_1_byte	.\wrjpgcom.c	/^write_1_byte (int c)$/;"	f	file:
write_2_bytes	.\wrjpgcom.c	/^write_2_bytes (unsigned int val)$/;"	f	file:
write_Adobe_marker	.\jpeglib.h	/^  boolean write_Adobe_marker;	\/* should an Adobe marker be written? *\/$/;"	m	struct:jpeg_compress_struct
write_JFIF_header	.\jpeglib.h	/^  boolean write_JFIF_header;	\/* should a JFIF marker be written? *\/$/;"	m	struct:jpeg_compress_struct
write_JPEG_file	.\example.c	/^write_JPEG_file (char * filename, int quality)$/;"	f
write_backing_store	.\jmemansi.c	/^write_backing_store (j_common_ptr cinfo, backing_store_ptr info,$/;"	f
write_backing_store	.\jmemmac.c	/^write_backing_store (j_common_ptr cinfo, backing_store_ptr info,$/;"	f
write_backing_store	.\jmemname.c	/^write_backing_store (j_common_ptr cinfo, backing_store_ptr info,$/;"	f
write_bmp_header	.\wrbmp.c	/^write_bmp_header (j_decompress_ptr cinfo, bmp_dest_ptr dest)$/;"	f
write_colormap	.\wrbmp.c	/^write_colormap (j_decompress_ptr cinfo, bmp_dest_ptr dest,$/;"	f
write_ems_store	.\jmemdos.c	/^write_ems_store (j_common_ptr cinfo, backing_store_ptr info,$/;"	f
write_err	.\jmemdosa.asm	/^write_err:	pop	ds			; restore registers and exit$/;"	l
write_file_header	.\jcmarker.c	/^write_file_header (j_compress_ptr cinfo)$/;"	f
write_file_store	.\jmemdos.c	/^write_file_store (j_common_ptr cinfo, backing_store_ptr info,$/;"	f
write_file_trailer	.\jcmarker.c	/^write_file_trailer (j_compress_ptr cinfo)$/;"	f
write_frame_header	.\jcmarker.c	/^write_frame_header (j_compress_ptr cinfo)$/;"	f
write_header	.\wrtarga.c	/^write_header (j_decompress_ptr cinfo, djpeg_dest_ptr dinfo, int num_colors)$/;"	f
write_marker	.\wrjpgcom.c	/^write_marker (int marker)$/;"	f	file:
write_marker_byte	.\jcmarker.c	/^write_marker_byte (j_compress_ptr cinfo, int val)$/;"	f
write_marker_header	.\jcmarker.c	/^write_marker_header (j_compress_ptr cinfo, int marker, unsigned int datalen)$/;"	f
write_ok	.\jmemdosa.asm	/^write_ok:	xor	ax,ax			; return zero for OK$/;"	l
write_os2_header	.\wrbmp.c	/^write_os2_header (j_decompress_ptr cinfo, bmp_dest_ptr dest)$/;"	f
write_scan_header	.\jcmarker.c	/^write_scan_header (j_compress_ptr cinfo)$/;"	f
write_stdout	.\cdjpeg.c	/^write_stdout (void)$/;"	f
write_stdout	.\cdjpeg.h	114;"	d
write_tables_only	.\jcmarker.c	/^write_tables_only (j_compress_ptr cinfo)$/;"	f
write_xms_store	.\jmemdos.c	/^write_xms_store (j_common_ptr cinfo, backing_store_ptr info,$/;"	f
writeblanks	.\ansi2knr.c	/^writeblanks(start, end)$/;"	f
xbuffer	.\jdmainct.c	/^  JSAMPIMAGE xbuffer[2];	\/* pointers to weird pointer lists *\/$/;"	m	struct:__anon31	file:
xms_driver	.\jmemdos.c	/^static XMSDRIVER xms_driver;	\/* saved address of XMS driver *\/$/;"	v	file:
xms_handle	.\jmemsys.h	/^  XMSH xms_handle;		\/* handle if it's a chunk of XMS *\/$/;"	m	union:__anon49
xmsavail	.\jmemdosa.asm	/^xmsavail:	mov 	ax,4310h		; fetch driver address with$/;"	l
xmsavail_done	.\jmemdosa.asm	/^xmsavail_done:	les 	bx,dword ptr [bp+6]	; get pointer to return value$/;"	l
ycc_rgb_convert	.\jdcolor.c	/^ycc_rgb_convert (j_decompress_ptr cinfo,$/;"	f
ycck_cmyk_convert	.\jdcolor.c	/^ycck_cmyk_convert (j_decompress_ptr cinfo,$/;"	f
